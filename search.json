[{"path":"https://chjackson.github.io/msm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher Jackson. Author, maintainer.","code":""},{"path":"https://chjackson.github.io/msm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Christopher H. Jackson (2011). Multi-State Models Panel Data: msm Package R. Journal Statistical Software, 38(8), 1-29. URL https://www.jstatsoft.org/v38/i08/.","code":"@Article{,   title = {Multi-State Models for Panel Data: The {msm} Package for {R}},   author = {{Christopher H. Jackson}},   journal = {Journal of Statistical Software},   year = {2011},   volume = {38},   number = {8},   pages = {1--29},   doi = {10.18637/jss.v038.i08}, }"},{"path":"https://chjackson.github.io/msm/index.html","id":"msm","dir":"","previous_headings":"","what":"Multi-State Markov and Hidden Markov Models in Continuous Time","title":"Multi-State Markov and Hidden Markov Models in Continuous Time","text":"msm R package continuous-time multi-state modelling panel data.","code":""},{"path":"https://chjackson.github.io/msm/index.html","id":"installation-stable-cran-version","dir":"","previous_headings":"","what":"Installation (stable CRAN version)","title":"Multi-State Markov and Hidden Markov Models in Continuous Time","text":"","code":"install.packages(\"msm\")"},{"path":"https://chjackson.github.io/msm/index.html","id":"installation-development-version","dir":"","previous_headings":"","what":"Installation (development version)","title":"Multi-State Markov and Hidden Markov Models in Continuous Time","text":"","code":"install.packages(\"devtools\") # if devtools not already installed devtools::install_github('chjackson/msm')"},{"path":"https://chjackson.github.io/msm/index.html","id":"tutorial-material-on-msm","dir":"","previous_headings":"","what":"Tutorial material on msm","title":"Multi-State Markov and Hidden Markov Models in Continuous Time","text":"Multi-state modelling msm: material web-based training course User guide current CRAN version","code":""},{"path":"https://chjackson.github.io/msm/reference/MatrixExp.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix exponential — MatrixExp","title":"Matrix exponential — MatrixExp","text":"Calculates exponential square matrix.","code":""},{"path":"https://chjackson.github.io/msm/reference/MatrixExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix exponential — MatrixExp","text":"","code":"MatrixExp(mat, t = 1, method = NULL, ...)"},{"path":"https://chjackson.github.io/msm/reference/MatrixExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix exponential — MatrixExp","text":"mat square matrix t optional scaling factor mat.  vector supplied, array matrices returned different scaling factors. method default NULL, simply wraps expm function expm package.  recommended.  Options expm can supplied MatrixExp, including method. Otherwise, backwards compatibility, following options, use code msm package, available: \"pade\" Pade approximation method, \"series\" power series approximation, \"analytic\" analytic formulae simpler Markov model intensity matrices (see ).  options used mat repeated eigenvalues, thus usual eigen-decomposition method used. ... Arguments pass expm.","code":""},{"path":"https://chjackson.github.io/msm/reference/MatrixExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix exponential — MatrixExp","text":"exponentiated matrix \\(\\exp(mat)\\). , t vector length 2 , array exponentiated matrices.","code":""},{"path":"https://chjackson.github.io/msm/reference/MatrixExp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matrix exponential — MatrixExp","text":"See expm documentation details algorithms uses. Generally exponential \\(E\\) square matrix \\(M\\) can often calculated $$E = U \\exp(D) U^{-1}$$ \\(D\\) diagonal matrix eigenvalues \\(M\\) diagonal, \\(\\exp(D)\\) diagonal matrix exponentiated eigenvalues \\(M\\) diagonal, \\(U\\) matrix whose columns eigenvectors \\(M\\). method calculation used \"pade\" \"series\" supplied \\(M\\) distinct eigenvalues.  \\(M\\) repeated eigenvalues, eigenvector matrix may non-invertible. case, matrix exponential calculated using Pade approximation defined Moler van Loan (2003), less robust power series approximation, $$\\exp(M) = + M + M^2/2 + M^3 / 3! + M^4 / 4! + ...$$ continuous-time homogeneous Markov process transition intensity matrix \\(Q\\), probability occupying state \\(s\\) time \\(u + t\\) conditional occupying state \\(r\\) time \\(u\\) given \\((r,s)\\) entry matrix \\(\\exp(tQ)\\). mat valid transition intensity matrix continuous-time Markov model (.e. diagonal entries non-positive, -diagonal entries non-negative, rows sum zero), certain simpler model structures, analytic formulae individual entries exponential mat.  structures listed PDF manual formulae coded msm source file src/analyticp.c.  formulae used method=\"analytic\".  efficient, default MatrixExp code robust extreme values.  However default calculating likelihoods models fitted msm. implementation Pade approximation used method=\"pade\" taken JAGS Martyn Plummer (https://mcmc-jags.sourceforge.io).","code":""},{"path":"https://chjackson.github.io/msm/reference/MatrixExp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Matrix exponential — MatrixExp","text":"Cox, D. R. Miller, H. D. theory stochastic processes, Chapman Hall, London (1965) Moler, C van Loan, C (2003).  Nineteen dubious ways compute exponential matrix, twenty-five years later.  SIAM Review 45, 3–49.","code":""},{"path":"https://chjackson.github.io/msm/reference/aneur.html","id":null,"dir":"Reference","previous_headings":"","what":"Aortic aneurysm progression data — aneur","title":"Aortic aneurysm progression data — aneur","text":"dataset contains longitudinal measurements grades aortic aneurysms, measured ultrasound examination diameter aorta.","code":""},{"path":"https://chjackson.github.io/msm/reference/aneur.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aortic aneurysm progression data — aneur","text":"data frame containing 4337 rows, row corresponding ultrasound scan one 838 men 65 years age. states represent successive degrees aneurysm severity, indicated aortic diameter. 683 men aneurysm-free age 65 re-screened every two years.  remaining men aneurysmal entry successive screens frequency depending state aneurysm.  Severe aneurysms repaired surgery.","code":""},{"path":"https://chjackson.github.io/msm/reference/aneur.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Aortic aneurysm progression data — aneur","text":"Chichester, U.K. randomised controlled trial screening abdominal aortic aneurysms ultrasonography.","code":""},{"path":"https://chjackson.github.io/msm/reference/aneur.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Aortic aneurysm progression data — aneur","text":"Jackson, C.H., Sharples, L.D., Thompson, S.G. Duffy, S.W. Couto, E.  Multi-state Markov models disease progression classification error. Statistician, 52(2): 193–209 (2003) Couto, E. Duffy, S. W. Ashton, H. . Walker, N. M.  Myles, J. P. Scott, R. . P. Thompson, S. G. (2002) Probabilities progression aortic aneurysms: estimates implications screening policy Journal Medical Screening 9(1):40–42","code":""},{"path":"https://chjackson.github.io/msm/reference/boot.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap resampling for multi-state models — boot.msm","title":"Bootstrap resampling for multi-state models — boot.msm","text":"Draw number bootstrap resamples, refit msm model resamples, calculate statistics refitted models.","code":""},{"path":"https://chjackson.github.io/msm/reference/boot.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap resampling for multi-state models — boot.msm","text":"","code":"boot.msm(   x,   stat = pmatrix.msm,   B = 1000,   file = NULL,   cores = NULL,   remove.errors = TRUE )"},{"path":"https://chjackson.github.io/msm/reference/boot.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap resampling for multi-state models — boot.msm","text":"x fitted msm model, output msm. stat function call refitted msm model. default pmatrix.msm, returning transition probability matrix one time unit. NULL function computed. B Number bootstrap resamples. file Name file save partial results replicate. saved using save can restored using load, producing object called boot.list containing partial results.  supported using parallel processing. cores Number processor cores use parallel processing. Requires doParallel package installed.  specified, parallel processing used. cores set string \"default\", default methods makeCluster (Windows) registerDoParallel (Unix-like) used. remove.errors TRUE bootstrap refits resulted error removed returned list, message returned states proportion failed fits first error message.  FALSE, error message failed refits placed corresponding component returned list.","code":""},{"path":"https://chjackson.github.io/msm/reference/boot.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap resampling for multi-state models — boot.msm","text":"list B components, containing result calling function stat refitted models.  stat NULL, component just contains refitted model.  one B model fits unsuccessful resulted error, corresponding list component contain error message.","code":""},{"path":"https://chjackson.github.io/msm/reference/boot.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bootstrap resampling for multi-state models — boot.msm","text":"bootstrap datasets computed resampling independent pairs observations successive times (non-hidden models without censoring), independent individual series (hidden models models censoring).  Therefore approach work , example, data HMM consist series observations just one individual, inaccurate small numbers independent transitions individuals. Confidence intervals standard errors corresponding statistic can calculated summarising returned list B replicated outputs.  currently implemented output functions qmatrix.msm, ematrix.msm, qratio.msm, pmatrix.msm, pmatrix.piecewise.msm, totlos.msm prevalence.msm.  outputs, users write code summarise output boot.msm. msm's output functions present confidence intervals based asymptotic standard errors calculated Hessian. expected underestimates true standard errors (Cramer-Rao lower bound). functions use approximation, delta method (see deltamethod) obtain standard errors transformed parameters. Bootstrapping give accurate estimate uncertainty. alternative method less accurate though faster bootstrapping, accurate delta method, draw sample asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix), summarise transformed estimates.  See pmatrix.msm. objects used original call msm produced x, qmatrix, working environment, else boot.msm produce “object found” error. enables boot.msm refit original model replicate datasets.  However currently limitation.  original call msm, \"formula\" argument specified directly, , example, msm(state ~ time, data = ...) , example, form = data$state ~ data$time msm(formula=form, data = ...) otherwise boot.msm unable draw replicate datasets. boot.msm also fail incomprehensible error original call msm used used-defined object whose name built-R object, object loaded package.  example, called Q matrix q, q() built-function quitting R. stat NULL, B different msm model objects stored memory. unadvisable, msm objects tend large, since contain original data used msm fit, wasteful memory. specify one statistic, write function consisting list different function calls, example, stat = function(x) list (pmatrix.msm(x, t=1), pmatrix.msm(x, t=2))","code":""},{"path":"https://chjackson.github.io/msm/reference/boot.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootstrap resampling for multi-state models — boot.msm","text":"Efron, B. Tibshirani, R.J. (1993) Introduction Bootstrap, Chapman Hall.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/boot.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bootstrap resampling for multi-state models — boot.msm","text":"C.H.Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"https://chjackson.github.io/msm/reference/boot.msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap resampling for multi-state models — boot.msm","text":"","code":"if (FALSE) { # \\dontrun{   ## Psoriatic arthritis example   data(psor)   psor.q <- rbind(c(0,0.1,0,0),c(0,0,0.1,0),c(0,0,0,0.1),c(0,0,0,0))   psor.msm <- msm(state ~ months, subject=ptnum, data=psor, qmatrix =     psor.q, covariates = ~ollwsdrt+hieffusn,     constraint = list(hieffusn=c(1,1,1),ollwsdrt=c(1,1,2)),     control = list(REPORT=1,trace=2), method=\"BFGS\")   ## Bootstrap the baseline transition intensity matrix.  This will take a long time.   q.list <- boot.msm(psor.msm, function(x)x$Qmatrices$baseline)   ## Manipulate the resulting list of matrices to calculate bootstrap standard errors.   apply(array(unlist(q.list), dim=c(4,4,5)), c(1,2), sd)   ## Similarly calculate a bootstrap 95% confidence interval   apply(array(unlist(q.list), dim=c(4,4,5)), c(1,2),         function(x)quantile(x, c(0.025, 0.975)))   ## Bootstrap standard errors are larger than the asymptotic standard   ## errors calculated from the Hessian   psor.msm$QmatricesSE$baseline } # }"},{"path":"https://chjackson.github.io/msm/reference/bos.html","id":null,"dir":"Reference","previous_headings":"","what":"Bronchiolitis obliterans syndrome after lung transplants — bos","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"dataset containing histories bronchiolitis obliterans syndrome (BOS) lung transplant recipients. BOS chronic decline lung function, often observed lung transplantation.  condition classified four stages severity: none, mild, moderate severe.","code":""},{"path":"https://chjackson.github.io/msm/reference/bos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"data frame containing 638 rows, grouped patient, including histories 204 patients.  first observation patient defined stage 1, BOS, six months transplant.  Subsequent observations denote entry times stages 2, 3, 4, representing mild, moderate severe BOS respectively, stage 5, representing death.","code":""},{"path":"https://chjackson.github.io/msm/reference/bos.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"Papworth Hospital, U.K.","code":""},{"path":"https://chjackson.github.io/msm/reference/bos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"entry time patient stage BOS estimated clinicians, based history lung function measurements acute rejection infection episodes.  BOS assumed occur beyond six months transplant.  first six months function patient's new lung stabilises.  Subsequently BOS diagnosed comparing lung function \"baseline\" value. objects bos3 bos4 contain data, mild/moderate/severe combined, moderate/severe combined, give 3 4-state representations respectively.","code":""},{"path":"https://chjackson.github.io/msm/reference/bos.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bronchiolitis obliterans syndrome after lung transplants — bos","text":"Heng. D. et al. (1998).  Bronchiolitis Obliterans Syndrome: Incidence, Natural History, Prognosis, Risk Factors.  Journal Heart Lung Transplantation 17(12)1255–1263.","code":""},{"path":"https://chjackson.github.io/msm/reference/cav.html","id":null,"dir":"Reference","previous_headings":"","what":"Heart transplant monitoring data — cav","title":"Heart transplant monitoring data — cav","text":"series approximately yearly angiographic examinations heart transplant recipients.  state time grade cardiac allograft vasculopathy (CAV), deterioration arterial walls.","code":""},{"path":"https://chjackson.github.io/msm/reference/cav.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Heart transplant monitoring data — cav","text":"data frame containing 2846 rows.  622 patients, rows grouped patient number ordered years transplant, row representing examination containing additional covariates.","code":""},{"path":"https://chjackson.github.io/msm/reference/cav.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Heart transplant monitoring data — cav","text":"Papworth Hospital, U.K.","code":""},{"path":"https://chjackson.github.io/msm/reference/cav.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Heart transplant monitoring data — cav","text":"Sharples, L.D. Jackson, C.H. Parameshwar, J. Wallwork, J. Large, S.R. (2003). Diagnostic accuracy coronary angiopathy risk factors post-heart-transplant cardiac allograft vasculopathy. Transplantation 76(4):679-82","code":""},{"path":"https://chjackson.github.io/msm/reference/cmodel.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Developer documentation: censoring model object — cmodel.object","title":"Developer documentation: censoring model object — cmodel.object","text":"list giving information censored states, labels data true states represent.","code":""},{"path":"https://chjackson.github.io/msm/reference/cmodel.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Developer documentation: censoring model object — cmodel.object","text":"ncens number distinct values used censored observations state data supplied msm. censor vector length ncens, giving labels used censored states data. states vector obtained unlist()ing list ncens elements, giving set true states observation label . index Index states first state corresponding censor, plus extra length(states)+1.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/coef.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model coefficients — coef.msm","title":"Extract model coefficients — coef.msm","text":"Extract estimated log transition intensities corresponding linear effects covariate.","code":""},{"path":"https://chjackson.github.io/msm/reference/coef.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model coefficients — coef.msm","text":"","code":"# S3 method for class 'msm' coef(object, ...)"},{"path":"https://chjackson.github.io/msm/reference/coef.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model coefficients — coef.msm","text":"object fitted multi-state model object, returned msm. ... (unused) arguments passed methods.","code":""},{"path":"https://chjackson.github.io/msm/reference/coef.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model coefficients — coef.msm","text":"misclassification, coef.msm returns list matrices.  first component, labelled logbaseline, matrix containing estimated transition intensities log scale covariates fixed means data. remaining component matrix giving linear effects labelled covariate matrix log intensities. misclassification models, coef.msm returns list lists. first component, Qmatrices, list matrices described previous paragraph.  additional component Ematrices list similar format containing logit-misclassification probabilities estimated covariate effects.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/coef.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract model coefficients — coef.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/crudeinits.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate crude initial values for transition intensities — crudeinits.msm","title":"Calculate crude initial values for transition intensities — crudeinits.msm","text":"Calculates crude initial values transition intensities assuming data represent exact transition times Markov process.","code":""},{"path":"https://chjackson.github.io/msm/reference/crudeinits.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate crude initial values for transition intensities — crudeinits.msm","text":"","code":"crudeinits.msm(   formula,   subject,   qmatrix,   data = NULL,   censor = NULL,   censor.states = NULL )"},{"path":"https://chjackson.github.io/msm/reference/crudeinits.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate crude initial values for transition intensities — crudeinits.msm","text":"formula formula giving vectors containing observed states corresponding observation times. example, state ~ time Observed states set 1, ...{}, n, n number states.  Note hidden Markov models supported function. subject Vector subject identification numbers data specified formula. missing, observations assumed subject. must sorted observations subject adjacent. qmatrix Matrix indicators allowed transitions.  initial value estimated value qmatrix greater zero. Transitions taken disallowed entry qmatrix 0. data optional data frame variables represented subject state can found. censor state, vector states, indicates censoring.  See msm. censor.states Specifies underlying states censored observations can represent.  See msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/crudeinits.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate crude initial values for transition intensities — crudeinits.msm","text":"estimated transition intensity matrix.  can used qmatrix argument msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/crudeinits.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate crude initial values for transition intensities — crudeinits.msm","text":"Suppose want crude estimate transition intensity \\(q_{rs}\\) state \\(r\\) state \\(s\\).  observe \\(n_{rs}\\) transitions state \\(r\\) state \\(s\\), total \\(n_r\\) transitions state \\(r\\), \\(q_{rs} / \\)\\( q_{rr}\\) can estimated \\(n_{rs} / n_r\\). , given total \\(T_r\\) years spent state \\(r\\), mean sojourn time \\(1 / q_{rr}\\) can estimated \\(T_r / n_r\\).  Thus, \\(n_{rs} / T_r\\) crude estimate \\(q_{rs}\\). data represent exact transition times Markov process, exact maximum likelihood estimates. Observed transitions incompatible given qmatrix ignored.  Censored states ignored.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/crudeinits.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate crude initial values for transition intensities — crudeinits.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/crudeinits.msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate crude initial values for transition intensities — crudeinits.msm","text":"","code":"data(cav) #> Warning: data set ‘cav’ not found twoway4.q <- rbind(c(-0.5, 0.25, 0, 0.25), c(0.166, -0.498, 0.166, 0.166), c(0, 0.25, -0.5, 0.25), c(0, 0, 0, 0)) statetable.msm(state, PTNUM, data=cav) #>     to #> from    1    2    3    4 #>    1 1367  204   44  148 #>    2   46  134   54   48 #>    3    4   13  107   55 crudeinits.msm(state ~ years, PTNUM, data=cav, qmatrix=twoway4.q) #>            [,1]        [,2]       [,3]       [,4] #> [1,] -0.1173149  0.06798932  0.0000000 0.04932559 #> [2,]  0.1168179 -0.37584883  0.1371340 0.12189692 #> [3,]  0.0000000  0.04908401 -0.2567471 0.20766310 #> [4,]  0.0000000  0.00000000  0.0000000 0.00000000"},{"path":"https://chjackson.github.io/msm/reference/deltamethod.html","id":null,"dir":"Reference","previous_headings":"","what":"The delta method — deltamethod","title":"The delta method — deltamethod","text":"Delta method approximating standard error transformation \\(g(X)\\) random variable \\(X = (x_1, x_2, \\ldots)\\), given estimates mean covariance matrix \\(X\\).","code":""},{"path":"https://chjackson.github.io/msm/reference/deltamethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The delta method — deltamethod","text":"","code":"deltamethod(g, mean, cov, ses = TRUE)"},{"path":"https://chjackson.github.io/msm/reference/deltamethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The delta method — deltamethod","text":"g formula representing transformation. variables must labelled x1, x2,...{} example, ~ 1 / (x1 + x2) transformation returns vector, list formulae representing (\\(g_1, g_2, \\ldots\\)) can provided, example list( ~ x1 + x2, ~ x1 / (x1 + x2) ) mean estimated mean \\(X\\) cov estimated covariance matrix \\(X\\) ses TRUE, standard errors \\(g_1(X), g_2(X),\\ldots\\) returned. Otherwise covariance matrix \\(g(X)\\) returned.","code":""},{"path":"https://chjackson.github.io/msm/reference/deltamethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The delta method — deltamethod","text":"vector containing standard errors \\(g_1(X), g_2(X), \\ldots\\) matrix containing covariance \\(g(X)\\).","code":""},{"path":"https://chjackson.github.io/msm/reference/deltamethod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The delta method — deltamethod","text":"delta method expands differentiable function random variable mean, usually first-order Taylor approximation, takes variance. example, approximation covariance matrix \\(g(X)\\) given $$ Cov(g(X)) = g'(\\mu) Cov(X) [g'(\\mu)]^T $$ \\(\\mu\\) estimate mean \\(X\\).  function uses symbolic differentiation via deriv. limitation function variables created user visible within formula g.  work around , necessary build formula string, using functions sprintf, convert string formula using .formula.  See example . can spare computational time, bootstrapping accurate method calculating confidence intervals standard errors transformations parameters. See boot.msm.  Simulation asymptotic distribution MLEs (see e.g. Mandel 2013) also convenient alternative.","code":""},{"path":"https://chjackson.github.io/msm/reference/deltamethod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The delta method — deltamethod","text":"Oehlert, G. W. (1992) note delta method. American Statistician 46(1). Mandel, M. (2013) Simulation based confidence intervals functions complicated derivatives. American Statistician 67(2):76-81.","code":""},{"path":"https://chjackson.github.io/msm/reference/deltamethod.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The delta method — deltamethod","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/deltamethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The delta method — deltamethod","text":"","code":"## Simple linear regression, E(y) = alpha + beta x  x <- 1:100 y <- rnorm(100, 4*x, 5) toy.lm <- lm(y ~ x) estmean <- coef(toy.lm) estvar <- summary(toy.lm)$cov.unscaled * summary(toy.lm)$sigma^2  ## Estimate of (1 / (alphahat + betahat)) 1 / (estmean[1] + estmean[2]) #> (Intercept)  #>   0.4072937  ## Approximate standard error deltamethod (~ 1 / (x1 + x2), estmean, estvar)  #> [1] 0.1699689  ## We have a variable z we would like to use within the formula. z <- 1 ## deltamethod (~ z / (x1 + x2), estmean, estvar) will not work. ## Instead, build up the formula as a string, and convert to a formula. form <- sprintf(\"~ %f / (x1 + x2)\", z) form #> [1] \"~ 1.000000 / (x1 + x2)\" deltamethod(as.formula(form), estmean, estvar) #> [1] 0.1699689"},{"path":"https://chjackson.github.io/msm/reference/draic.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Criteria for comparing two multi-state models with nested state spaces — draic.msm","title":"Criteria for comparing two multi-state models with nested state spaces — draic.msm","text":"modification Akaike's information criterion, leave-one-likelihood cross-validation criterion, comparing predictive ability two Markov multi-state models nested state spaces.  evaluated based restricted aggregated data models common.","code":""},{"path":"https://chjackson.github.io/msm/reference/draic.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Criteria for comparing two multi-state models with nested state spaces — draic.msm","text":"","code":"draic.msm(   msm.full,   msm.coarse,   likelihood.only = FALSE,   information = c(\"expected\", \"observed\"),   tl = 0.95 )  drlcv.msm(   msm.full,   msm.coarse,   tl = 0.95,   cores = NULL,   verbose = TRUE,   outfile = NULL )"},{"path":"https://chjackson.github.io/msm/reference/draic.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Criteria for comparing two multi-state models with nested state spaces — draic.msm","text":"msm.full Model bigger state space. msm.coarse Model smaller state space. two models must non-hidden Markov models without censored states. two models must fitted datasets, except state space coarse model must aggregated version state space full model.  , every state full dataset must correspond unique state coarse dataset.  example, full state variable c(1,1,2,2,3,4), corresponding coarse states c(1,1,2,2,2,3), c(1,2,3,4,4,4). structure allowed transitions coarse model must also collapsed version big model structure, check currently made code. use functions, objects used calls fit msm.full msm.coarse must working environment, example, datasets definitions transition matrices. likelihood.calculate Hessians trace term (DRAIC). information Use observed expected information DRAIC trace term.  Expected default, much faster, though available models fitted pure panel data (obstype=1 call msm, thus exact transition times exact death times) tl Width symmetric tracking interval, default 0.95 95% interval. cores Number processor cores use drlcv cross-validation parallel processing.  Requires doParallel package installed.  specified, parallel processing used. cores set string \"default\", default methods makeCluster (Windows) registerDoParallel (Unix-like) used. verbose Print intermediate results iteration cross-validation console running. May work parallel processing. outfile Output file print intermediate results cross-validation.  Useful track execution speed using parallel processing, output console may work.","code":""},{"path":"https://chjackson.github.io/msm/reference/draic.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Criteria for comparing two multi-state models with nested state spaces — draic.msm","text":"list containing \\(D_{RAIC}\\) (draic.msm) \\(D_{RLCV}\\) (drlcv.msm), component terms, tracking intervals.","code":""},{"path":"https://chjackson.github.io/msm/reference/draic.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Criteria for comparing two multi-state models with nested state spaces — draic.msm","text":"Note standard AIC can computed one fitted msm models x,y,... using AIC(x,y,...), can used compare models fitted data. draic.msm drlcv.msm designed models fitted data differently-aggregated state spaces. difference restricted AIC (Liquet Commenges, 2011), computed function, defined $$D_{RAIC} = l(\\gamma_n |\\mathbf{x}'' ) - l(\\theta_n |\\mathbf{x}'' ) + trace ( J(\\theta_n |\\mathbf{x}'')J(\\theta_n |\\mathbf{x})^{-1} - J(\\gamma_n |\\mathbf{x}'' )J(\\gamma_n |\\mathbf{x}' )^{-1})$$ \\(\\gamma\\) \\(\\theta\\) maximum likelihood estimates smaller bigger models, fitted smaller bigger data, respectively. \\(l(\\gamma_n |x'')\\) represents likelihood simpler model evaluated restricted data. \\(l(\\theta_n |x'')\\) represents likelihood complex model evaluated restricted data.  hidden Markov model, misclassification matrix initial state occupancy probabilities described Thom et al (2014). \\(J()\\) corresponding (expected observed, specified user) information matrices. \\(\\mathbf{x}\\) expanded data, bigger model originally fitted, \\(\\mathbf{x}'\\) data smaller model originally fitted.  \\(\\mathbf{x}''\\) restricted data two models common.  \\(\\mathbf{x}'' = \\mathbf{x}'\\) implementation, models nested. difference likelihood cross-validatory criteria (Liquet Commenges, 2011) defined $$D_{RLCV} = 1/n \\sum_{=1}^n \\log( h_{X''}(x_i'' | \\gamma_{-}) / g_{X''}(x_i''| \\theta_{-}))$$ \\(\\gamma_{-}\\) \\(\\theta_{-}\\) maximum likelihood estimates smaller bigger models fitted datasets subject \\(\\) left , \\(g()\\) \\(h()\\) densities corresponding models, \\(x_i''\\) restricted data subject \\(\\). Tracking intervals analogous confidence intervals, strictly , since quantity D_RAIC aims estimate, difference expected Kullback-Leibler discrepancy predicting replicate dataset, depends sample size.  See references. Positive values criteria indicate coarse model preferred, negative values indicate full model preferred.","code":""},{"path":"https://chjackson.github.io/msm/reference/draic.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Criteria for comparing two multi-state models with nested state spaces — draic.msm","text":"Thom, H. Jackson, C. Commenges, D. Sharples, L. (2015) State selection multistate models application quality life psoriatic arthritis.  Statistics Medicine 34(16) 2381 - 2480. Liquet, B. Commenges D. (2011) Choice estimators based different observations: Modified AIC LCV criteria. Scandinavian Journal Statistics; 38:268-287.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/draic.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Criteria for comparing two multi-state models with nested state spaces — draic.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk, H. H. Z. Thom howard.thom@bristol.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/ecmodel.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Developer documentation: model for covariates on misclassification probabilities — ecmodel.object","title":"Developer documentation: model for covariates on misclassification probabilities — ecmodel.object","text":"list representing model covariates misclassification probabilities.","code":""},{"path":"https://chjackson.github.io/msm/reference/ecmodel.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Developer documentation: model for covariates on misclassification probabilities — ecmodel.object","text":"npars Number covariate effect parameters.  defined number covariates misclassification (factors expanded contrasts) multiplied number allowed misclassifications model. ndpars Number distinct covariate effect parameters, npars, equality constraints applied. ncovs Number covariates misclassification, factors expanded contrasts. constr List equality constraints covariate effects, supplied miscconstraint argument msm. covlabels Names / labels covariates model matrix (see model.matrix.msm). inits Initial values covariate effects, vector formed misccovinits list supplied msm. covmeans Means covariates data (excluding data required fit model, observations missing data elements subjects' last observations).  includes means 0/1 factor contrasts well continuous covariates (historic reasons, may sensible).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/efpt.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected first passage time — efpt.msm","title":"Expected first passage time — efpt.msm","text":"Expected time first reaching particular state set states Markov model.","code":""},{"path":"https://chjackson.github.io/msm/reference/efpt.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected first passage time — efpt.msm","text":"","code":"efpt.msm(   x = NULL,   qmatrix = NULL,   tostate,   start = \"all\",   covariates = \"mean\",   ci = c(\"none\", \"normal\", \"bootstrap\"),   cl = 0.95,   B = 1000,   cores = NULL,   ... )"},{"path":"https://chjackson.github.io/msm/reference/efpt.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected first passage time — efpt.msm","text":"x fitted multi-state model, returned msm. qmatrix Instead x, can simply supply transition intensity matrix qmatrix. tostate State, set states supplied vector, estimate first passage time .  Can integer, character matched row names Q matrix. start Starting state (integer).  default (start=\"\"), return vector expected passage times state turn. Alternatively, can used obtain expected first passage time set states, rather single states.  achieve , state set vector weights, length equal number states model.  weights proportional probability starting states desired set, weights zero supplied states.  function calculate weighted average expected passage times corresponding states. covariates Covariate values defining intensity matrix fitted model x, supplied qmatrix.msm. ci \"normal\", calculate confidence interval simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. \"none\" (default) confidence interval calculated. cl Width symmetric confidence interval, relative 1. B Number bootstrap replicates. cores Number cores use bootstrapping using parallel processing. See boot.msm details. ... Arguments pass MatrixExp.","code":""},{"path":"https://chjackson.github.io/msm/reference/efpt.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected first passage time — efpt.msm","text":"vector expected first passage times, \"hitting times\", state desired state.","code":""},{"path":"https://chjackson.github.io/msm/reference/efpt.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected first passage time — efpt.msm","text":"expected first passage times set states \\(\\mathbf{}\\) remaining set states \\(\\overline{\\mathbf{}}\\) state space, model transition intensity matrix \\(Q\\), $$-Q_{\\mathbf{},\\mathbf{}}^{-1} \\mathbf{1}$$ \\(\\mathbf{1}\\) vector ones, \\(Q_{\\mathbf{},\\mathbf{}}\\) square subset \\(Q\\) pertaining states \\(\\mathbf{}\\). equal sum mean sojourn times states \"\" \"\" states unidirectional model.  non-zero chance reaching absorbing state reaching tostate, infinite.  trivially zero \"\" state equals tostate. function currently handles time-homogeneous Markov models.  time-inhomogeneous models assume \\(Q\\) equals average intensity matrix times observed covariates.  Simulation might used handle time dependence. Note expectation first passage time, confidence intervals CIs mean, predictive intervals first passage time.  full distribution first passage time set states can obtained setting rows intensity matrix \\(Q\\) corresponding set states zero make model states absorbing.  corresponding transition probability matrix \\(Exp(Qt)\\) gives probabilities hit passed state time \\(t\\) (see example ). implemented ppass.msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/efpt.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Expected first passage time — efpt.msm","text":"Norris, J. R. (1997) Markov Chains. Cambridge University Press.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/efpt.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expected first passage time — efpt.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/efpt.msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected first passage time — efpt.msm","text":"","code":"twoway4.q <- rbind(c(-0.5, 0.25, 0, 0.25), c(0.166, -0.498, 0.166, 0.166),              c(0, 0.25, -0.5, 0.25), c(0, 0, 0, 0)) efpt.msm(qmatrix=twoway4.q, tostate=3) #> [1] Inf Inf   0 Inf # given in state 1, expected time to reaching state 3 is infinite # since may die (state 4) before entering state 3  # If we remove the death state from the model, EFPTs become finite Q <- twoway4.q[1:3,1:3]; diag(Q) <- 0; diag(Q) <- -rowSums(Q) efpt.msm(qmatrix=Q, tostate=3) #> [1] 14.0241 10.0241  0.0000  # Suppose we cannot die or regress while in state 2, can only go to state 3 Q <- twoway4.q; Q[2,4] <- Q[2,1] <- 0; diag(Q) <- 0; diag(Q) <- -rowSums(Q) efpt.msm(qmatrix=Q, tostate=3) #> [1]      Inf 6.024096 0.000000      Inf # The expected time from 2 to 3 now equals the mean sojourn time in 2. -1/Q[2,2] #> [1] 6.024096  # Calculate cumulative distribution of the first passage time # into state 3 for the following three-state model Q <- twoway4.q[1:3,1:3]; diag(Q) <- 0; diag(Q) <- -rowSums(Q) # Firstly form a model where the desired hitting state is absorbing Q[3,] <- 0 MatrixExp(Q, t=10)[,3] #> [1] 0.4790663 0.6501628 1.0000000 ppass.msm(qmatrix=Q, tot=10) #>           [,1]     [,2]      [,3] #> [1,] 1.0000000 0.917915 0.4790663 #> [2,] 0.4819236 1.000000 0.6501628 #> [3,] 0.0000000 0.000000 1.0000000 # Given in state 1 at time 0, P(hit 3 by time 10) = 0.479 MatrixExp(Q, t=50)[,3]  # P(hit 3 by time 50) = 0.98 #> [1] 0.9812676 0.9875017 1.0000000 ppass.msm(qmatrix=Q, tot=50) #>      [,1]      [,2]      [,3] #> [1,]  1.0 0.9999963 0.9812676 #> [2,]  0.5 1.0000000 0.9875017 #> [3,]  0.0 0.0000000 1.0000000"},{"path":"https://chjackson.github.io/msm/reference/ematrix.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Misclassification probability matrix — ematrix.msm","title":"Misclassification probability matrix — ematrix.msm","text":"Extract estimated misclassification probability matrix, corresponding confidence intervals, fitted multi-state model given set covariate values.","code":""},{"path":"https://chjackson.github.io/msm/reference/ematrix.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Misclassification probability matrix — ematrix.msm","text":"","code":"ematrix.msm(   x,   covariates = \"mean\",   ci = c(\"delta\", \"normal\", \"bootstrap\", \"none\"),   cl = 0.95,   B = 1000,   cores = NULL )"},{"path":"https://chjackson.github.io/msm/reference/ematrix.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Misclassification probability matrix — ematrix.msm","text":"x fitted multi-state model, returned msm covariates covariate values estimate misclassification probability matrix.  can either : string \"mean\", denoting means covariates data (default), number 0, indicating covariates set zero, list values, optional names. example list (60, 1) order list follows order covariates originally given model formula, named list, list (age = 60, sex = 1) ci \"delta\" (default) confidence intervals calculated delta method, simple transformation Hessian simplest cases. \"normal\", calculate confidence interval simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) multinomial-logit-transformed misclassification probabilities covariate effects, transforming back. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. cl Width symmetric confidence interval present.  Defaults 0.95. B Number bootstrap replicates, number normal simulations distribution MLEs cores Number cores use bootstrapping using parallel processing. See boot.msm details.","code":""},{"path":"https://chjackson.github.io/msm/reference/ematrix.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Misclassification probability matrix — ematrix.msm","text":"list components: estimate Estimated misclassification probability matrix. rows correspond true states, columns observed states. SE Corresponding approximate standard errors. L Lower confidence limits. U Upper confidence limits. ci=\"none\", ematrix.msm just returns estimated misclassification probability matrix. default print method objects returned ematrix.msm presents estimates confidence limits. present estimates standard errors, something like ematrix.msm(x)[c(\"estimates\",\"SE\")]","code":""},{"path":"https://chjackson.github.io/msm/reference/ematrix.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Misclassification probability matrix — ematrix.msm","text":"Misclassification probabilities covariate effects estimated multinomial-logit scale msm. covariance matrix estimated Hessian maximised log-likelihood.  , delta method can used obtain standard errors probabilities natural scale arbitrary covariate values.  Confidence intervals estimated assuming normality multinomial-logit scale.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/ematrix.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Misclassification probability matrix — ematrix.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/emodel.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Developer documentation: misclassification model structure object — emodel.object","title":"Developer documentation: misclassification model structure object — emodel.object","text":"list giving information misclassifications assumed multi-state model fitted ematrix argument msm.  Returned fitted msm model object. information converted internally hmodel object (see hmodel.object) use likelihood computations.","code":""},{"path":"https://chjackson.github.io/msm/reference/emodel.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Developer documentation: misclassification model structure object — emodel.object","text":"nstates Number states (qmodel$nstates). npars Number allowed misclassifications, equal sum(imatrix). imatrix Indicator matrix allowed misclassifications.  \\((r,s)\\) entry 1 misclassification true state \\(r\\) observed state \\(s\\) possible.  diagonal entries arbitrarily set 0. ematrix Matrix initial values misclassification probabilities, supplied ematrix argument msm. inits Vector initial values, reading across rows qmatrix excluding diagonal disallowed transitions. constr Indicators equality constraints baseline misclassification probabilities, taken econstraint argument msm, mapped necessary set (1,2,3,...) ndpars Number distinct misclassification probabilities, applying equality constraints. nipars Number initial state occupancy probabilities estimated.  zero est.initprobs=FALSE, otherwise equal number states. initprobs Initial state occupancy probabilities, supplied msm (initial values estimation, est.initprobs=TRUE.) est.initprobs initial state occupancy probabilities estimated (TRUE FALSE), supplied est.initprobs argument msm.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/fev.html","id":null,"dir":"Reference","previous_headings":"","what":"FEV1 measurements from lung transplant recipients — fev","title":"FEV1 measurements from lung transplant recipients — fev","text":"series measurements forced expiratory volume one second (FEV1) lung transplant recipients, six months onwards transplant.","code":""},{"path":"https://chjackson.github.io/msm/reference/fev.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FEV1 measurements from lung transplant recipients — fev","text":"data frame containing 5896 rows.  204 patients, rows grouped patient number ordered days transplant.  row represents examination containing additional covariate.","code":""},{"path":"https://chjackson.github.io/msm/reference/fev.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"FEV1 measurements from lung transplant recipients — fev","text":"Papworth Hospital, U.K.","code":""},{"path":"https://chjackson.github.io/msm/reference/fev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FEV1 measurements from lung transplant recipients — fev","text":"baseline \"normal\" FEV1 individual calculated using measurements first six months transplant. six months, presented dataset, FEV1 expressed percentage baseline value. FEV1 monitored diagnose bronchiolitis obliterans syndrome (BOS), long-term lung function decline, thought form chronic rejection. Acute rejections infections also affect lung function short term.","code":""},{"path":"https://chjackson.github.io/msm/reference/fev.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"FEV1 measurements from lung transplant recipients — fev","text":"Jackson, C.H. Sharples, L.D. Hidden Markov models onset progression bronchiolitis obliterans syndrome lung transplant recipients Statistics Medicine, 21(1): 113–128 (2002).","code":""},{"path":"https://chjackson.github.io/msm/reference/hazard.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate tables of hazard ratios for covariates on transition intensities — hazard.msm","title":"Calculate tables of hazard ratios for covariates on transition intensities — hazard.msm","text":"Hazard ratios computed exponentiating estimated covariate effects log-transition intensities.  function called summary.msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/hazard.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate tables of hazard ratios for covariates on transition intensities — hazard.msm","text":"","code":"hazard.msm(x, hazard.scale = 1, cl = 0.95)"},{"path":"https://chjackson.github.io/msm/reference/hazard.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate tables of hazard ratios for covariates on transition intensities — hazard.msm","text":"x Output msm representing fitted multi-state model. hazard.scale Vector elements number covariates transition rates. Corresponds increase covariate used calculate hazard ratio. Defaults 1. cl Width symmetric confidence interval present.  Defaults 0.95.","code":""},{"path":"https://chjackson.github.io/msm/reference/hazard.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate tables of hazard ratios for covariates on transition intensities — hazard.msm","text":"list tables containing hazard ratio estimates, one table covariate.  table three columns, containing hazard ratio, approximate upper lower confidence limit respectively (assuming normality log scale), Markov chain transition intensity.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/hazard.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate tables of hazard ratios for covariates on transition intensities — hazard.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/hmm-dists.html","id":null,"dir":"Reference","previous_headings":"","what":"Hidden Markov model constructors — hmm-dists","title":"Hidden Markov model constructors — hmm-dists","text":"functions used specify distribution response conditionally underlying state hidden Markov model.  list function calls, one component state, used hmodel argument msm. initial values parameters distribution given arguments. Note initial values supplied literal values - supplying variables currently supported.","code":""},{"path":"https://chjackson.github.io/msm/reference/hmm-dists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hidden Markov model constructors — hmm-dists","text":"","code":"hmmCat(prob, basecat)  hmmIdent(x)  hmmUnif(lower, upper)  hmmNorm(mean, sd)  hmmLNorm(meanlog, sdlog)  hmmExp(rate)  hmmGamma(shape, rate)  hmmWeibull(shape, scale)  hmmPois(rate)  hmmBinom(size, prob)  hmmBetaBinom(size, meanp, sdp)  hmmNBinom(disp, prob)  hmmBeta(shape1, shape2)  hmmTNorm(mean, sd, lower = -Inf, upper = Inf)  hmmMETNorm(mean, sd, lower, upper, sderr, meanerr = 0)  hmmMEUnif(lower, upper, sderr, meanerr = 0)  hmmT(mean, scale, df)"},{"path":"https://chjackson.github.io/msm/reference/hmm-dists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hidden Markov model constructors — hmm-dists","text":"prob (hmmCat) Vector probabilities observing category 1, 2, ...{}, length(prob) respectively.  probability governing binomial negative binomial distribution. basecat (hmmCat) Category considered \"baseline\", estimation, probabilities parameterised probabilities relative baseline category. default, category greatest probability used baseline. x (hmmIdent) Code data denotes exactly-observed state. lower (hmmUnif,hmmTNorm,hmmMEUnif) Lower limit Uniform truncated Normal distribution. upper (hmmUnif,hmmTNorm,hmmMEUnif) Upper limit Uniform truncated Normal distribution. mean (hmmNorm,hmmLNorm,hmmTNorm) Mean defining Normal, truncated Normal distribution. sd (hmmNorm,hmmLNorm,hmmTNorm) Standard deviation defining Normal, truncated Normal distribution. meanlog (hmmNorm,hmmLNorm,hmmTNorm) Mean log scale, log Normal distribution. sdlog (hmmNorm,hmmLNorm,hmmTNorm) Standard deviation log scale, log Normal distribution. rate (hmmPois,hmmExp,hmmGamma) Rate Poisson, Exponential Gamma distribution (see dpois, dexp, dgamma). shape (hmmPois,hmmExp,hmmGamma) Shape parameter Gamma Weibull distribution (see dgamma, dweibull). scale (hmmGamma) Scale parameter Gamma distribution (see dgamma), unstandardised Student t distribution. size Order Binomial distribution (see dbinom). meanp Mean outcome probability beta-binomial distribution sdp Standard deviation describing overdispersion outcome probability beta-binomial distribution disp Dispersion parameter negative binomial distribution, also called size order.  (see dnbinom). shape1, shape2 First second parameters beta distribution (see dbeta). sderr (hmmMETNorm,hmmUnif) Standard deviation Normal measurement error distribution. meanerr (hmmMETNorm,hmmUnif) Additional shift measurement error, fixed 0 default.  may modelled terms covariates. df Degrees freedom Student t distribution.","code":""},{"path":"https://chjackson.github.io/msm/reference/hmm-dists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hidden Markov model constructors — hmm-dists","text":"function returns object class hmmdist, list containing information model.  component may useful end users r, function one argument n returns random sample size n given distribution.","code":""},{"path":"https://chjackson.github.io/msm/reference/hmm-dists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hidden Markov model constructors — hmm-dists","text":"hmmCat represents categorical response distribution set 1, 2, ...{}, length(prob).  Markov model misclassification example type model. categories case (subset ) underlying states. hmmIdent distribution used underlying states observed exactly without error.  hidden Markov models multiple outcomes, (see hmmMV), outcome data takes special hmmIdent value must first multiple outcomes. hmmUnif, hmmNorm, hmmLNorm, hmmExp, hmmGamma, hmmWeibull, hmmPois, hmmBinom, hmmTNorm, hmmNBinom hmmBeta represent Uniform, Normal, log-Normal, exponential, Gamma, Weibull, Poisson, Binomial, truncated Normal, negative binomial beta distributions, respectively, parameterisations default parameterisations corresponding base R distribution functions. hmmT Student t distribution general mean \\(\\mu\\), scale \\(\\sigma\\) degrees freedom df.  variance \\(\\sigma^2 df/(df + 2)\\).  Note t distribution base R dt standardised one mean 0 scale 1. allow positive (integer non-integer) df.  default, three parameters, including df, estimated fitting hidden Markov model, practice, df might need fixed identifiability - can done using fixedpars argument msm. hmmMETNorm hmmMEUnif distributions truncated Normal Uniform distributions, additional Normal measurement error response. generalisations distributions proposed Satten Longini (1996) modelling progression CD4 cell counts monitoring HIV disease.  See medists density, distribution, quantile random generation functions distributions.  See also tnorm density, distribution, quantile random generation functions truncated Normal distribution. See PDF manual msm-manual.pdf doc subdirectory algebraic definitions distributions.  New hidden Markov model response distributions can added msm following instructions Section 2.17.1. Parameters can modelled terms covariates, scale link function, follows. Parameters basecat, lower, upper, size, meanerr fixed initial values. parameters estimated fitting hidden Markov model, unless appropriate fixedpars argument supplied msm. categorical response distributions (hmmCat) outcome probabilities initialized zero fixed zero, probability corresponding basecat fixed one minus sum remaining probabilities.  remaining probabilities estimated, can modelled terms covariates via multinomial logistic regression (relative basecat).","code":""},{"path":"https://chjackson.github.io/msm/reference/hmm-dists.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hidden Markov model constructors — hmm-dists","text":"Satten, G.. Longini, .M.  Markov chains measurement error: estimating 'true' course marker progression human immunodeficiency virus disease (discussion) Applied Statistics 45(3): 275-309 (1996). Jackson, C.H. Sharples, L.D. Hidden Markov models onset progresison bronchiolitis obliterans syndrome lung transplant recipients Statistics Medicine, 21(1): 113–128 (2002). Jackson, C.H., Sharples, L.D., Thompson, S.G. Duffy, S.W. Couto, E. Multi-state Markov models disease progression classification error. Statistician, 52(2): 193–209 (2003).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/hmm-dists.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hidden Markov model constructors — hmm-dists","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/hmmMV.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate hidden Markov models — hmmMV","title":"Multivariate hidden Markov models — hmmMV","text":"Constructor multivariate hidden Markov model (HMM) n variables observed time (potentially different) standard univariate distribution conditionally underlying state.  n outcomes independent conditionally hidden state.","code":""},{"path":"https://chjackson.github.io/msm/reference/hmmMV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate hidden Markov models — hmmMV","text":"","code":"hmmMV(...)"},{"path":"https://chjackson.github.io/msm/reference/hmmMV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate hidden Markov models — hmmMV","text":"... number arguments supplied equal maximum number observations made one time.  argument represents univariate distribution outcome conditionally hidden state, result calling univariate hidden Markov model constructor (see hmm-dists).","code":""},{"path":"https://chjackson.github.io/msm/reference/hmmMV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate hidden Markov models — hmmMV","text":"list objects, class hmmdist returned univariate HMM constructors documented hmm-dists.  whole list class hmmMVdist, inherits hmmdist.","code":""},{"path":"https://chjackson.github.io/msm/reference/hmmMV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multivariate hidden Markov models — hmmMV","text":"particular state HMM outcome distribution, call hmmMV supplied corresponding element hmodel argument msm.  See Example 2 . multivariate HMM multiple outcomes time generated distribution specified way corresponding univariate model, hmmMV required. outcome data simply supplied matrix instead vector.  See Example 1 . outcome data models supplied matrix, number columns equal maximum number arguments supplied hmmMV calls state.  variables missing (NA) particular time, observed data time still contribute likelihood.  missing data assumed missing random.  Viterbi algorithm may used predict missing values given fitted model observed data. Typically outcome model state family set families, different parameters.  Theoretically, different numbers distributions may supplied different states.  particular state fewer outcomes maximum, data state taken first columns response data matrix.  However likely useful model, since number observations probably give information underlying state, violating missing random assumption. Models outcomes dependent conditionally hidden state (e.g. correlated multivariate normal observations) currently supported.","code":""},{"path":"https://chjackson.github.io/msm/reference/hmmMV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multivariate hidden Markov models — hmmMV","text":"Jackson, C. H., Su, L., Gladman, D. D. Farewell, V. T. (2015) modelling minimal disease activity.  Arthritis Care Research (early view).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/hmmMV.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multivariate hidden Markov models — hmmMV","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/hmmMV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate hidden Markov models — hmmMV","text":"","code":"## Simulate data from a Markov model  nsubj <- 30; nobspt <- 5 sim.df <- data.frame(subject = rep(1:nsubj, each=nobspt),                      time = seq(0, 20, length=nobspt)) set.seed(1) two.q <- rbind(c(-0.1, 0.1), c(0, 0)) dat <- simmulti.msm(sim.df[,1:2], qmatrix=two.q, drop.absorb=FALSE)  ### EXAMPLE 1 ## Generate two observations at each time from the same outcome ## distribution: ## Bin(40, 0.1) for state 1, Bin(40, 0.5) for state 2 dat$obs1[dat$state==1] <- rbinom(sum(dat$state==1), 40, 0.1) dat$obs2[dat$state==1] <- rbinom(sum(dat$state==1), 40, 0.1) dat$obs1[dat$state==2] <- rbinom(sum(dat$state==2), 40, 0.5) dat$obs2[dat$state==2] <- rbinom(sum(dat$state==2), 40, 0.5) dat$obs <- cbind(obs1 = dat$obs1, obs2 = dat$obs2)  ## Fitted model should approximately recover true parameters  msm(obs ~ time, subject=subject, data=dat, qmatrix=two.q,     hmodel = list(hmmBinom(size=40, prob=0.2),                   hmmBinom(size=40, prob=0.2))) #> Warning: Optimisation has probably not converged to the maximum likelihood - Hessian is not positive definite. #>  #> Call: #> msm(formula = obs ~ time, subject = subject, data = dat, qmatrix = two.q,     hmodel = list(hmmBinom(size = 40, prob = 0.2), hmmBinom(size = 40,         prob = 0.2))) #>  #> Optimisation probably not converged to the maximum likelihood. #> optim() reported convergence but estimated Hessian not positive-definite. #>  #> -2 * log-likelihood:  3706.02   ### EXAMPLE 2 ## Generate two observations at each time from different ## outcome distributions: ## Bin(40, 0.1) and Bin(40, 0.2) for state 1,  dat$obs1 <- dat$obs2 <- NA dat$obs1[dat$state==1] <- rbinom(sum(dat$state==1), 40, 0.1) dat$obs2[dat$state==1] <- rbinom(sum(dat$state==1), 40, 0.2)  ## Bin(40, 0.5) and Bin(40, 0.6) for state 2 dat$obs1[dat$state==2] <- rbinom(sum(dat$state==2), 40, 0.6) dat$obs2[dat$state==2] <- rbinom(sum(dat$state==2), 40, 0.5) dat$obs <- cbind(obs1 = dat$obs1, obs2 = dat$obs2)  ## Fitted model should approximately recover true parameters  msm(obs ~ time, subject=subject, data=dat, qmatrix=two.q,        hmodel = list(hmmMV(hmmBinom(size=40, prob=0.3),                         hmmBinom(size=40, prob=0.3)),                                   hmmMV(hmmBinom(size=40, prob=0.3),                        hmmBinom(size=40, prob=0.3))),     control=list(maxit=10000)) #>  #> Call: #> msm(formula = obs ~ time, subject = subject, data = dat, qmatrix = two.q,     hmodel = list(hmmMV(hmmBinom(size = 40, prob = 0.3), hmmBinom(size = 40,         prob = 0.3)), hmmMV(hmmBinom(size = 40, prob = 0.3),         hmmBinom(size = 40, prob = 0.3))), control = list(maxit = 10000)) #>  #> Maximum likelihood estimates #>  #> Transition intensities #>                   Baseline                     #> State 1 - State 1 -0.09458 (-0.13940,-0.06416) #> State 1 - State 2  0.09458 ( 0.06416, 0.13940) #>  #> Hidden Markov model, 2 states #> State 1  #> Outcome 1 - binomial distribution #>        Estimate       LCL       UCL #> size 40.0000000        NA        NA #> prob  0.1054793 0.0948457 0.1171507 #>  #> Outcome 2 - binomial distribution #>        Estimate       LCL       UCL #> size 40.0000000        NA        NA #> prob  0.1958908 0.1818942 0.2106871 #>  #> State 2  #> Outcome 1 - binomial distribution #>        Estimate       LCL      UCL #> size 40.0000000        NA       NA #> prob  0.5954564 0.5780108 0.612664 #>  #> Outcome 2 - binomial distribution #>        Estimate       LCL      UCL #> size 40.0000000        NA       NA #> prob  0.5110363 0.4933762 0.528669 #>  #>  #> -2 * log-likelihood:  1523.652"},{"path":"https://chjackson.github.io/msm/reference/hmodel.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Developer documentation: hidden Markov model structure object — hmodel.object","title":"Developer documentation: hidden Markov model structure object — hmodel.object","text":"list giving information models outcome data conditionally states hidden Markov model.  Used internal computations, returned fitted msm model object.","code":""},{"path":"https://chjackson.github.io/msm/reference/hmodel.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Developer documentation: hidden Markov model structure object — hmodel.object","text":"hidden TRUE hidden Markov models, FALSE otherwise. nstates Number states, qmodel$nstates. fitted TRUE parameter values pars maximum likelihood estimates, FALSE initial values. models outcome distribution hidden state.  vector length nstates whose \\(r\\)th entry index state \\(r\\) outcome distributions vector supported distributions.  vector supported distributions given full msm:::.msm.HMODELS: first 1 categorical outcome, 2 identity, 3 uniform 4 normal. labels String identifying distribution models. npars Vector length nstates giving number parameters outcome distribution, excluding covariate effects. nipars Number initial state occupancy probabilities estimated.  zero est.initprobs=FALSE, otherwise equal number states. totpars Total number parameters, equal sum(npars). pars vector length totpars, made concatenating list length nstates whose \\(r\\)th component vector parameters state \\(r\\) outcome distribution. plabs List names parameters pars. parstate vector length totpars, whose \\(\\)th element state corresponding \\(\\)th parameter. firstpar vector length nstates giving index pars first parameter state. locpars Index pars parameters can covariates . initprobs Initial state occupancy probabilities, supplied msm (initial values estimation, est.initprobs=TRUE.) est.initprobs initial state occupancy probabilities estimated (TRUE FALSE), supplied est.initprobs argument msm. ncovs Number covariate effects per parameter pars, , e.g. factor contrasts expanded. coveffect Vector covariate effects, length sum(ncovs). covlabels Labels effects. coveffstate Vector indicating state corresponding element coveffect. ncoveffs Number covariate effects HMM outcomes, equal sum(ncovs). nicovs Vector length nstates-1 giving number covariate effects initial state occupancy probability (log relative baseline probability). icoveffect Vector length sum(nicovs) giving covariate effects initial state occupancy probabilities. nicoveffs Number covariate effects initial state occupancy probabilities, equal sum(nicovs). constr Constraints (baseline) hidden Markov model outcome parameters, supplied hconstraint argument msm, excluding covariate effects, converted vector mapped set 1,2,3,... necessary. covconstr Vector constraints covariate effects hidden Markov outcome models, supplied hconstraint argument msm, excluding baseline parameters, converted vector mapped set 1,2,3,... necessary. ranges Matrix range restrictions HMM parameters, including given hranges argument msm. foundse TRUE standard errors available estimates. initpmat Matrix initial state occupancy probabilities one row subject (estimated est.initprobs=TRUE). ci Confidence intervals baseline HMM outcome parameters. covci Confidence intervals covariate effects HMM outcome models.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/hmodel2list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a hmodel object to HMM constructor function calls — hmodel2list","title":"Convert a hmodel object to HMM constructor function calls — hmodel2list","text":"Convert hmodel object HMM constructor function calls","code":""},{"path":"https://chjackson.github.io/msm/reference/hmodel2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a hmodel object to HMM constructor function calls — hmodel2list","text":"","code":"hmodel2list(hmodel, hmmdist = TRUE)"},{"path":"https://chjackson.github.io/msm/reference/hmodel2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a hmodel object to HMM constructor function calls — hmodel2list","text":"hmodel list class hmodel, returned hmodel component fitted model object msm. hmmdist TRUE FALSE (see \"Value\" section).","code":""},{"path":"https://chjackson.github.io/msm/reference/hmodel2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a hmodel object to HMM constructor function calls — hmodel2list","text":"hmmdist=TRUE, returns list objects class hmmdist.  kind objects returned HMM constructor functions hmmNorm, hmmPois etc.  Therefore list can passed hmodel argument msm. hmmdist=FALSE, returns list comprised corresponding input arguments constructor functions, .e. parameter values HMM emission distributions.   list one element per state.  elements one element per parameter (univariate HMMs), one element per outcome distribution, turn one element per parameter (multivariate HMMs).","code":""},{"path":"https://chjackson.github.io/msm/reference/hmodel2list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a hmodel object to HMM constructor function calls — hmodel2list","text":"Hulme https://github.com/wjchulme Chris Jackson.","code":""},{"path":"https://chjackson.github.io/msm/reference/logLik.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model log-likelihood — logLik.msm","title":"Extract model log-likelihood — logLik.msm","text":"Extract log-likelihood number parameters model fitted msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/logLik.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model log-likelihood — logLik.msm","text":"","code":"# S3 method for class 'msm' logLik(object, by.subject = FALSE, ...)"},{"path":"https://chjackson.github.io/msm/reference/logLik.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model log-likelihood — logLik.msm","text":"object fitted multi-state model object, returned msm. .subject Return vector subject-specific log-likelihoods, sum total log-likelihood. ... (unused) arguments passed methods.","code":""},{"path":"https://chjackson.github.io/msm/reference/logLik.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model log-likelihood — logLik.msm","text":"log-likelihood model represented 'object' evaluated maximum likelihood estimates. Akaike's information criterion can also computed using AIC(object).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/logLik.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract model log-likelihood — logLik.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/lrtest.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood ratio test — lrtest.msm","title":"Likelihood ratio test — lrtest.msm","text":"Likelihood ratio test two fitted multi-state models","code":""},{"path":"https://chjackson.github.io/msm/reference/lrtest.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood ratio test — lrtest.msm","text":"","code":"lrtest.msm(...)"},{"path":"https://chjackson.github.io/msm/reference/lrtest.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood ratio test — lrtest.msm","text":"... Two fitted multi-state models, returned msm, ordered increasing numbers parameters.","code":""},{"path":"https://chjackson.github.io/msm/reference/lrtest.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood ratio test — lrtest.msm","text":"matrix three columns, giving likelihood ratio statistic, difference degrees freedom chi-squared p-value comparison first model supplied subsequent model.","code":""},{"path":"https://chjackson.github.io/msm/reference/lrtest.msm.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Likelihood ratio test — lrtest.msm","text":"comparison models valid fitted dataset. may problem missing values R's default 'na.action = na.omit' used. likelihood ratio statistic indicated chi-squared distribution models nested. alternative comparing non-nested models Akaike's information criterion.  can computed one fitted msm models x,y,... using AIC(x,y,...).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/medists.html","id":null,"dir":"Reference","previous_headings":"","what":"Measurement error distributions — medists","title":"Measurement error distributions — medists","text":"Truncated Normal Uniform distributions, response also subject Normally distributed measurement error.","code":""},{"path":"https://chjackson.github.io/msm/reference/medists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measurement error distributions — medists","text":"","code":"dmenorm(   x,   mean = 0,   sd = 1,   lower = -Inf,   upper = Inf,   sderr = 0,   meanerr = 0,   log = FALSE )  pmenorm(   q,   mean = 0,   sd = 1,   lower = -Inf,   upper = Inf,   sderr = 0,   meanerr = 0,   lower.tail = TRUE,   log.p = FALSE )  qmenorm(   p,   mean = 0,   sd = 1,   lower = -Inf,   upper = Inf,   sderr = 0,   meanerr = 0,   lower.tail = TRUE,   log.p = FALSE )  rmenorm(n, mean = 0, sd = 1, lower = -Inf, upper = Inf, sderr = 0, meanerr = 0)  dmeunif(x, lower = 0, upper = 1, sderr = 0, meanerr = 0, log = FALSE)  pmeunif(   q,   lower = 0,   upper = 1,   sderr = 0,   meanerr = 0,   lower.tail = TRUE,   log.p = FALSE )  qmeunif(   p,   lower = 0,   upper = 1,   sderr = 0,   meanerr = 0,   lower.tail = TRUE,   log.p = FALSE )  rmeunif(n, lower = 0, upper = 1, sderr = 0, meanerr = 0)"},{"path":"https://chjackson.github.io/msm/reference/medists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measurement error distributions — medists","text":"x, q vector quantiles. mean vector means. sd vector standard deviations. lower lower truncation point. upper upper truncation point. sderr Standard deviation measurement error distribution. meanerr Optional shift measurement error distribution. log, log.p logical; TRUE, probabilities \\(p\\) given \\(\\log(p)\\), log density returned. lower.tail logical; TRUE (default), probabilities \\(P[X <= x]\\), otherwise, \\(P[X > x]\\). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://chjackson.github.io/msm/reference/medists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measurement error distributions — medists","text":"dmenorm, dmeunif give density, pmenorm, pmeunif give distribution function, qmenorm, qmeunif give quantile function, rmenorm, rmeunif generate random deviates, Normal Uniform versions respectively.","code":""},{"path":"https://chjackson.github.io/msm/reference/medists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measurement error distributions — medists","text":"normal distribution measurement error density $$ \\frac{\\Phi(u, \\mu_2, \\sigma_3) - \\Phi(l, \\mu_2, \\sigma_3)}{\\Phi(u, \\mu_2, \\sigma_3) - \\Phi(l, \\mu_2, \\sigma_3)} \\phi(x, \\mu_0 + \\mu_\\epsilon, \\sigma_2)$$ $$\\sigma_2^2 = \\sigma_0^2 + \\sigma_\\epsilon^2,$$ $$\\sigma_3 = \\sigma_0 \\sigma_\\epsilon / \\sigma_2,$$ $$\\mu_2 = (x - \\mu_\\epsilon) \\sigma_0^2 + \\mu_0 \\sigma_\\epsilon^2, $$ \\(\\mu_0\\) mean original Normal distribution truncation,  \\(\\sigma_0\\) corresponding standard deviation,  \\(u\\) upper truncation point,  \\(l\\) lower truncation point,  \\(\\sigma_\\epsilon\\) standard deviation additional measurement error,  \\(\\mu_\\epsilon\\) mean measurement error (usually 0).  \\(\\phi(x)\\) density corresponding normal distribution,  \\(\\Phi(x)\\) distribution function corresponding normal distribution. uniform distribution measurement error density $$(\\Phi(x, \\mu_\\epsilon+l, \\sigma_\\epsilon) - \\Phi(x, \\mu_\\epsilon+u, \\sigma_\\epsilon)) $$$$ / (u - l)$$ calculated original truncated Normal Uniform density functions \\(f(. | \\mu, \\sigma, l, u)\\) $$ \\int f(y | \\mu, \\sigma, l, u) \\phi(x, y + \\mu_\\epsilon, \\sigma_\\epsilon) dy $$ sderr meanerr specified assume default values 0, representing measurement error variance, constant shift measurement error, respectively. Therefore, example arguments, dmenorm(x), simply equivalent dtnorm(x), turn equivalent dnorm(x). distributions used Satten Longini (1996) CD4 cell counts conditionally hidden Markov states HIV infection, later Jackson Sharples (2002) FEV1 measurements conditionally states chronic lung transplant rejection. distribution functions just provided convenience, optimised numerical accuracy speed.  fit hidden Markov model response distributions, use hmmMETNorm hmmMEUnif constructor. See hmm-dists help page details.","code":""},{"path":"https://chjackson.github.io/msm/reference/medists.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Measurement error distributions — medists","text":"Satten, G.. Longini, .M.  Markov chains measurement error: estimating 'true' course marker progression human immunodeficiency virus disease (discussion) Applied Statistics 45(3): 275-309 (1996) Jackson, C.H. Sharples, L.D. Hidden Markov models onset progression bronchiolitis obliterans syndrome lung transplant recipients Statistics Medicine, 21(1): 113–128 (2002).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/medists.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Measurement error distributions — medists","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/medists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measurement error distributions — medists","text":"","code":"## what does the distribution look like? x <- seq(50, 90, by=1) plot(x, dnorm(x, 70, 10), type=\"l\", ylim=c(0,0.06)) ## standard Normal lines(x, dtnorm(x, 70, 10, 60, 80), type=\"l\")       ## truncated Normal ## truncated Normal with small measurement error lines(x, dmenorm(x, 70, 10, 60, 80, sderr=3), type=\"l\")"},{"path":"https://chjackson.github.io/msm/reference/model.frame.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract original data from msm objects. — model.frame.msm","title":"Extract original data from msm objects. — model.frame.msm","text":"Extract data multi-state model fitted msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/model.frame.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract original data from msm objects. — model.frame.msm","text":"","code":"# S3 method for class 'msm' model.frame(formula, agg = FALSE, ...)  # S3 method for class 'msm' model.matrix(object, model = \"intens\", state = 1, ...)"},{"path":"https://chjackson.github.io/msm/reference/model.frame.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract original data from msm objects. — model.frame.msm","text":"formula fitted multi-state model object, returned msm. agg Return model frame efficient aggregated form used calculate likelihood internally non-hidden Markov models.  one row unique combination -state, -state, time lag, covariate value observation type.  variable named \"(nocc)\" counts many observations combination original data. ... arguments (used). object fitted multi-state model object, returned msm. model \"intens\" return design matrix covariates intensities, \"misc\" misclassification probabilities, \"hmm\" general hidden Markov model, \"inits\" initial state probabilities hidden Markov models. state State corresponding required covariate design matrix hidden Markov model.","code":""},{"path":"https://chjackson.github.io/msm/reference/model.frame.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract original data from msm objects. — model.frame.msm","text":"model.frame returns data frame original variables used model fit, missing data removed (see na.action msm).  state, time, subject, obstype obstrue variables named \"(state)\", \"(time)\", \"(subject)\", \"(obstype)\" \"(obstrue)\" respectively (note brackets).  variable called \"(obs)\" observation number original data missing data dropped.  variable \"(pcomb)\" used computing likelihood hidden Markov models, identifies distinct time difference, obstype covariate values (thus distinct interval transition probability matrix) observation corresponds . model frame object useful attributes, including \"usernames\" giving user's original names variables (used model refitting, e.g. bootstrapping cross validation) \"covnames\" identifying ones covariates. model.matrix returns design matrix part model includes covariates.  required part indicated \"model\" argument. time-inhomogeneous models fitted \"pci\", datasets imputed observations time change point, indicated variable \"(pci.imp)\" model frame 1.  model matrix intensities factor contrasts timeperiod covariate.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/model.frame.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract original data from msm objects. — model.frame.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/msm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-State Markov and Hidden Markov Models in Continuous Time — msm-package","title":"Multi-State Markov and Hidden Markov Models in Continuous Time — msm-package","text":"msm: Functions fitting continuous-time Markov hidden Markov multi-state models longitudinal data.  Designed processes observed arbitrary times continuous time (intermittently observed panel data) observation schemes supported. Markov transition rates hidden Markov output process can modelled terms covariates, may constant piecewise-constant time.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/msm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multi-State Markov and Hidden Markov Models in Continuous Time — msm-package","text":"Maintainer: Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.form.qoutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract msm model parameter estimates in compact format — msm.form.qoutput","title":"Extract msm model parameter estimates in compact format — msm.form.qoutput","text":"Extract estimates confidence intervals transition intensities (misclassification probabilities), covariate effects, tidy matrix format one row per transition.  used print method (print.msm) msm objects.  Covariate effects returned hazard odds ratios, log scale.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.form.qoutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract msm model parameter estimates in compact format — msm.form.qoutput","text":"","code":"msm.form.qoutput(x, covariates = \"mean\", cl = 0.95, digits = 4, ...)  msm.form.eoutput(x, covariates = \"mean\", cl = 0.95, digits = 4, ...)"},{"path":"https://chjackson.github.io/msm/reference/msm.form.qoutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract msm model parameter estimates in compact format — msm.form.qoutput","text":"x fitted multi-state model object, returned msm. covariates Covariate values defining \"baseline\" parameters (see qmatrix.msm). cl Width symmetric confidence interval present.  Defaults 0.95. digits Minimum number significant digits formatted character matrix returned attribute.  passed format. Defaults 4. ... arguments passed format.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.form.qoutput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract msm model parameter estimates in compact format — msm.form.qoutput","text":"numeric matrix one row per transition, one column estimate confidence limit.  \"formatted\" attribute contains results formatted pretty printing. msm.form.qoutput returns transition intensities covariates, msm.form.eoutput returns misclassification probabilities covariates.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/msm.form.qoutput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract msm model parameter estimates in compact format — msm.form.qoutput","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-state Markov and hidden Markov models in continuous time — msm","title":"Multi-state Markov and hidden Markov models in continuous time — msm","text":"Fit continuous-time Markov hidden Markov multi-state model maximum likelihood. Observations process can made arbitrary times, exact times transition states can known.  Covariates can fitted Markov chain transition intensities hidden Markov observation process.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-state Markov and hidden Markov models in continuous time — msm","text":"","code":"msm(   formula,   subject = NULL,   data = list(),   qmatrix,   gen.inits = FALSE,   ematrix = NULL,   hmodel = NULL,   obstype = NULL,   obstrue = NULL,   covariates = NULL,   covinits = NULL,   constraint = NULL,   misccovariates = NULL,   misccovinits = NULL,   miscconstraint = NULL,   hcovariates = NULL,   hcovinits = NULL,   hconstraint = NULL,   hranges = NULL,   qconstraint = NULL,   econstraint = NULL,   initprobs = NULL,   est.initprobs = FALSE,   initcovariates = NULL,   initcovinits = NULL,   deathexact = NULL,   death = NULL,   exacttimes = FALSE,   censor = NULL,   censor.states = NULL,   pci = NULL,   phase.states = NULL,   phase.inits = NULL,   subject.weights = NULL,   cl = 0.95,   fixedpars = NULL,   center = TRUE,   opt.method = \"optim\",   hessian = NULL,   use.deriv = TRUE,   use.expm = TRUE,   analyticp = TRUE,   na.action = na.omit,   ... )"},{"path":"https://chjackson.github.io/msm/reference/msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi-state Markov and hidden Markov models in continuous time — msm","text":"formula formula giving vectors containing observed states corresponding observation times. example, state ~ time Observed states numeric variables set 1, ...{}, n, n number states.  Factors allowed levels called \"1\", ...{}, \"n\". times can indicate different types observation scheme, careful choose correct obstype. hidden Markov models, state refers outcome variable, need discrete state.  may also matrix, giving multiple observations time (see hmmMV). subject Vector subject identification numbers data specified formula. missing, observations assumed subject. must sorted observations subject adjacent. data Optional data frame interpret variables supplied formula, subject, covariates, misccovariates, hcovariates, obstype obstrue. qmatrix Matrix indicates allowed transitions continuous-time Markov chain, optionally also initial values transitions. instantaneous transition allowed state \\(r\\) state \\(s\\), qmatrix \\((r,s)\\) entry 0, otherwise non-zero. supplying initial values , non-zero entries values.  using gen.inits=TRUE non-zero entries can anything like (conventionally 1).  diagonal entry qmatrix ignored, constrained equal minus sum rest row. example, rbind( c( 0, 0.1, 0.01 ), c( 0.1, 0, 0.2 ), c( 0, 0, 0 ) ) represents 'health - disease - death' model, initial transition intensities 0.1 health disease, 0.01 health death, 0.1 disease health, 0.2 disease death. states represent ordered levels severity disease, matrix usually allow transitions adjacent states.  example, someone observed state 1 (\"mild\") first observation, followed state 3 (\"severe\") second observation, assumed passed state 2 (\"moderate\") , 1,3 entry qmatrix zero. initial intensities given covariates set means data (set zero, center = FALSE). intensities constrained equal using qconstraint, initial value taken first (reading across rows). gen.inits TRUE, initial values transition intensities generated automatically using method crudeinits.msm. non-zero entries supplied qmatrix assumed indicate allowed transitions model. available hidden Markov models, including models misclassified states. ematrix misclassification states modelled, matrix initial values misclassification probabilities.  rows represent underlying states, columns represent observed states.  observation state \\(s\\) possible subject occupies underlying state \\(r\\), ematrix \\((r,s)\\) entry 0.  Otherwise ematrix \\((r,s)\\) entry corresponding probability observing \\(s\\) conditionally occupying true state \\(r\\). diagonal ematrix ignored, rows constrained sum 1.  example, rbind( c( 0, 0.1, 0 ), c( 0.1, 0, 0.1 ), c( 0, 0.1, 0 ) ) represents model misclassifications permitted adjacent states. probabilities constrained equal using econstraint, initial value taken first (reading across rows). alternative way specifying misclassification models, see hmodel. hmodel Specification hidden Markov model (HMM).  list return values HMM constructor functions.  element list corresponds outcome model conditionally corresponding underlying state.  Univariate constructors described thehmm-dists help page.  may also grouped together specify multivariate HMM set conditionally independent univariate outcomes time, described hmmMV. example, consider three-state hidden Markov model.  Suppose observations underlying state 1 generated Normal distribution mean 100 standard deviation 16, observations underlying state 2 Normal mean 54 standard deviation 18. Observations state 3, representing death, exactly observed, coded 999 data.  model specified hmodel = list(hmmNorm(mean=100, sd=16), hmmNorm(mean=54, sd=18), hmmIdent(999)) mean standard deviation parameters estimated starting initial values. multiple parameters constrained equal using hconstraint, initial value taken value given first occasion parameter appears hmodel. See hmm-dists help page details constructor functions univariate distribution. misclassification model, , hidden Markov model outcomes misclassified observations underlying states, can either specified using list hmmCat hmmIdent objects, using ematrix. example, ematrix = rbind( c( 0, 0.1, 0, 0 ), c( 0.1, 0, 0.1, 0 ), c( 0, 0.1, 0, 0), c( 0, 0, 0, 0) ) equivalent hmodel = list( hmmCat(prob=c(0.9, 0.1, 0, 0)), hmmCat(prob=c(0.1, 0.8, 0.1, 0)), hmmCat(prob=c(0, 0.1, 0.9, 0)), hmmIdent()) obstype vector specifying observation scheme row data. can included data frame data along state, time, subject IDs covariates.  elements either 1, 2 3, meaning follows: 1 observation process arbitrary time (\"snapshot\" process, \"panel-observed\" data). states unknown observation times. 2 exact transition time, state previous observation retained current observation. observation may represent transition different state repeated observation state (e.g. end follow-).  Note transition times known, flexible models fitted packages msm - see note exacttimes. Note also previous state censored using censor, example known state 1 state 2, obstype 2 means either state 1 retained state 2 retained current observation - allow change state middle observation interval. 3 exact transition time, state instant entering state unknown. common example death times studies chronic diseases. obstype specified, defaults 1. obstype single number, observations assumed type.  obstype value first observation subject used. generalisation deathexact exacttimes arguments allow different schemes per observation.  obstype overrides deathexact exacttimes. exacttimes=TRUE specifies observations obstype 2. deathexact = death.states specifies observations death.states type 3.  deathexact = TRUE specifies observations final absorbing state type 3. obstrue misclassification models specified ematrix, obstrue vector logicals (TRUE FALSE) numerics (1 0) specifying observations (TRUE, 1) observations underlying state without error, (FALSE, 0) realisations hidden Markov model. HMMs specified hmodel, hidden state known times, obstrue supplied assumed contain actual true state data.  Elements obstrue times hidden state unknown set NA.  allows information HMM outcomes generated conditionally known state included model, thus improving estimation HMM outcome distributions. HMMs true state known within specific set specific times can defined combination censor obstrue. models, code defined state outcome (see censor), obstrue set 1 observations true state known one elements censor.states corresponding time. covariates formula list formulae representing covariates transition intensities via log-linear model. single formula supplied, like covariates = ~ age + sex + treatment covariates assumed apply intensities.  named list supplied, defines potentially different model named intensity.  example, covariates = list(\"1-2\" = ~ age, \"2-3\" = ~ age + treatment) specifies age effect state 1 - state 2 transition, additive age treatment effects state 2 - state 3 transition, covariates transitions allowed qmatrix. covariates time dependent, assumed constant times observed, transition probability pair times \\((t1, t2)\\) assumed depend covariate value \\(t1\\). covinits Initial values log-linear effects covariates transition intensities. named list element corresponding covariate.  single element contains initial values covariate transition intensity, reading across rows order.  pair effects constrained equal, initial value first two effects used. example, model qmatrix age sex covariates, following initialises covariate effects zero apart age effect 2-1 transition, sex effect 1-3 transition.   covinits = list(sex=c(0, 0, 0.1, 0), age=c(0, 0.1, 0, 0)) factor covariates, name level concatenating name covariate level name, quoting necessary. example, covariate agegroup three levels 0-15, 15-60, 60-, use something like covinits = list(\"agegroup15-60\"=c(0, 0.1, 0, 0), \"agegroup60-\"=c(0.1, 0.1, 0, 0)) specified wrongly specified, initial values assumed zero. constraint list one numeric vector named covariate. vector indicates covariate effects intensities constrained equal. Take, example, model five transition intensities two covariates. Specifying constraint = list (age = c(1,1,1,2,2), treatment = c(1,2,3,4,5)) constrains effect age equal first three intensities, equal fourth fifth. effect treatment assumed different intensity. vector increasing numbers can used indicators. intensity parameters assumed ordered reading across rows transition matrix, starting first row, ignoring diagonals. Negative elements vector can used indicate particular covariate effects constrained equal minus effects. example: constraint = list (age = c(-1,1,1,2,-2), treatment = c(1,2,3,4,5)) constrains second third age effects equal, first effect minus second, fifth age effect minus fourth.  example, may realisitic effect covariate \"reverse\" transition rate state 2 state 1 minus effect \"forward\" transition rate, state 1 state 2.  Note possible specify exactly covariate effects constrained positive negative.  maximum likelihood estimation chooses combination signs higher likelihood. categorical covariates, defined factors, specify constraints follows: list(..., covnameVALUE1 = c(...), covnameVALUE2 = c(...), ...) covname name factor, VALUE1, VALUE2, ... labels factor levels (usually excluding baseline, using default contrasts). Make sure contrasts option set appropriately, example, default options(contrasts=c(contr.treatment, contr.poly)) sets first (baseline) level unordered factors zero, baseline level ignored specification. assume covariate effect certain transition, use fixedpars argument fix initial value (zero default) optimisation. misccovariates formula representing covariates misclassification probabilities, analogously covariates, via multinomial logistic regression. used model specified using ematrix, rather hmodel. must single formula - lists supported, unlike covariates.  different model probability required, include covariates formula, use fixedpars fix effects (particular probabilities) default initial values zero. misccovinits Initial values covariates misclassification probabilities, defined way covinits. used model specified using ematrix. miscconstraint list one vector named covariate misclassification probabilities. vector indicates covariate effects misclassification probabilities constrained equal, analogously constraint.  used model specified using ematrix. hcovariates List formulae length hmodel, defining covariates governing hidden Markov outcome models.  covariates operate suitably link-transformed linear scale, example, log scale Poisson outcome model. covariates certain hidden state, insert NULL corresponding place list.  example, hcovariates = list(~acute + age, ~acute, NULL). hcovinits Initial values hidden Markov model covariate effects. list length hcovariates. element vector initial values effect covariate state. example, hcovariates can initialised hcovariates = list(c(-8, 0), -8, NULL). Initial values must given covariates, none given set zero.  initial value given hmodel constructor function corresponding baseline parameter interpreted value parameter covariates fixed means data.  multiple effects constrained equal using hconstraint, initial value taken first multiple initial values supplied. hconstraint named list. element vector constraints named hidden Markov model parameter. vector length equal number times class parameter appears whole model. example consider three-state hidden Markov model described , normally-distributed outcomes states 1 2.  constrain outcome variance equal states 1 2, also constrain effect acute outcome mean equal states 1 2, specify hconstraint = list(sd = c(1,1), acute=c(1,1)) Note excludes initial state occupancy probabilities covariate effects probabilities, constrained. hranges Range constraints hidden Markov model parameters. Supplied named list, element corresponding named hidden Markov model parameter.  element list two elements, vectors named \"lower\" \"upper\".  vectors length equal number times class parameter appears whole model, give corresponding mininum amd maximum allowable values parameter.  Maximum likelihood estimation performed parameters constrained ranges (log logit-type transformation).  Lower bounds -Inf upper bounds Inf can given parameter unbounded . example, three-state model , constrain mean state 1 0 6, mean state 2 7 12, supply hranges=list(mean=list(lower=c(0, 7), upper=c(6, 12))) default natural ranges, e.g. positive real line variance parameters, [0,1] probabilities.  Therefore hranges need specified parameters unless even stricter constraint desired.  one limit supplied parameter, first occurrence parameter constrained. Initial values strictly within ranges, range boundary, otherwise optimisation fail \"non-finite value\" error. qconstraint vector indicators specifying baseline transition intensities equal. example, qconstraint = c(1,2,3,3) constrains third fourth intensities equal, model four allowed instantaneous transitions.  covariates intensities center=TRUE (default), qconstraint applied intensities covariates taking values means data.  center=FALSE, qconstraint applied intensities covariates set zero. econstraint similar vector indicators specifying baseline misclassification probabilities constrained equal.  used model specified using ematrix, rather hmodel. initprobs used hidden Markov models.  Underlying state occupancy probabilities subject's first observation.  Can either vector \\(nstates\\) elements common probabilities subjects, \\(nsubjects\\) \\(nstates\\) matrix subject-specific probabilities.  refers observations missing data subjects one observation excluded. estimated (see est.initprobs), represents initial value, defaults equal probability state.  Otherwise defaults c(1, rep(0, nstates-1)), , state 1 probability 1.  Scaled sum 1 necessary.  state 1 occupancy probability non-zero. est.initprobs used hidden Markov models.  TRUE, underlying state occupancy probabilities first observation estimated, starting vector initial values supplied initprobs argument.  Structural zeroes allowed: initial values zero fixed zero optimisation, even est.initprobs=TRUE, covariate effects estimated.  exception state 1, non-zero occupancy probability. Note free parameters estimation exclude state 1 occupancy probability, fixed one minus sum probabilities. initcovariates Formula representing covariates initial state occupancy probabilities, via multinomial logistic regression.  linear effects covariates, observed individual's first observation time, operate log ratio state \\(r\\) occupancy probability state 1 occupancy probability, \\(r = 2\\) number states.  Thus state 1 occupancy probability non-zero. est.initprobs TRUE, effects estimated starting initial values.  est.initprobs FALSE, effects fixed theit initial values. initcovinits Initial values covariate effects initcovariates.  named list element corresponding covariate, covinits. element vector (1 - number states) elements, containing initial values linear effect covariate log odds state relative state 1, state 2 final state.  initcovinits specified, covariate effects initialised zero. deathexact Vector indices absorbing states whose time entry known exactly, individual assumed unknown transient state (\"alive\") previous instant.  usual situation times death chronic disease monitoring data.  example, specify deathexact = c(4, 5) states 4 5 assumed exactly-observed death states. See obstype argument.  States kind correspond obstype=3. deathexact = TRUE indicates final absorbing state kind, deathexact = FALSE deathexact = NULL (default) indicates state kind. deathexact argument overridden obstype exacttimes. Note always supply deathexact argument, even states correspond deaths, necessarily obstype=3.  state known time death previous observation, specify obstype=2 death times, exacttimes=TRUE state known times, deathexact argument ignored. death Old name deathexact argument.  Overridden deathexact supplied. Deprecated. exacttimes default, transitions Markov process assumed take place unknown occasions observation times. exacttimes set TRUE, observation times assumed represent exact times transition process.  subject assumed state times.  observation may represent transition different state repeated observation state (e.g. end follow-).  equivalent every row data obstype = 2.  See obstype argument.  obstype exacttimes specified exacttimes ignored. Note complete history multi-state process known type data.  models msm fits strong assumption constant (piecewise-constant) transition rates.  Knowing exact transition times allows realistic models fitted packages.  example parametric models sojourn distributions flexible exponential can fitted flexsurv package, semi-parametric models can implemented survival conjunction mstate. censor state, vector states, indicates censoring. Censoring means observed state known one particular set states. example, censor=999 indicates observations 999 vector observed states censored states.  default, means true state transient (non-absorbing) states. specify corresponding true states explicitly, use censor.states argument. Note contrast usual terminology survival analysis, state considered censored, rather event time.  end study, individual died, true state known, censor unnecessary, since standard multi-state model likelihood applicable.  Also \"censored\" state can time, just end. hidden Markov models, censoring may indicate either set possible observed states, set (hidden) true states. later case specified setting relevant elements obstrue 1 (NA otherwise). Note particular general time-inhomogeneous Markov models piecewise constant transition intensities can constructed using censor facility. true state unknown occasions piecewise constant covariate known change, censored states can inserted data occasions.  covariate may represent time , case pci option msm can used perform trick automatically, time-dependent variable. supported multivariate hidden Markov models specified hmmMV. censor.states Specifies underlying states censored observations can represent. censor single number (default) can vector, list one element.  censor vector one element, list, element vector corresponding equivalent element censor. example censor = c(99, 999), censor.states = list(c(2,3), c(3,4)) means observations coded 99 represent either state 2 state 3, observations coded 999 really either state 3 state 4. pci Model piecewise-constant intensities.  Vector cut points defining times, since start process, intensities change subjects.  example pci = c(5, 10) specifies intensity changes time points 5 10.  automatically construct model categorical (factor) covariate called timeperiod, levels \"[-Inf,5)\", \"[5,10)\" \"[10,Inf)\", first level baseline.  covariate defines time period observation made.  Initial values constraints covariate effects specified way model covariate name, example, covinits = list(\"timeperiod[5,10)\"=c(0.1,0.1), \"timeperiod[10,Inf)\"=c(0.1,0.1)) Thus pci supplied, previously-existing variable called timeperiod covariate part msm model. assume piecewise constant intensities transitions others pci, use fixedpars argument fix appropriate covariate effects default initial values zero. Internally, works inserting censored observations data times intensity changes state observed. supplied times outside range time variable data, pci ignored time-homogeneous model fitted. fitting time-inhomogeneous model, qmatrix.msm can used obtain fitted intensity matrices time period, example, qmatrix.msm(example.msm, covariates=list(timeperiod=\"[5,Inf)\")) facility support interactions time covariates.  models need specified \"hand\", using state variable censored observations inserted.  Note data component msm object returned call msm pci supplied contains states inserted censored observations time period indicators.  can used construct models. Note need use pci order model effect time-dependent covariate data.  msm automatically assume covariates piecewise-constant change times observed.  pci want intensities change pre-specified times subjects. pci supported multivariate hidden Markov models specified hmmMV.   approximate equivalent can constructed creating variable data represent time period, treating covariate using covariates argument msm. assume value variable constant observations. phase.states Indices states two-phase sojourn distribution.  defines semi-Markov model, hazard onward transition depends time spent state. uses technique described Titman Sharples (2009).  hidden Markov model automatically constructed expanded state space, phases correspond hidden states.  \"tau\" proportionality constraint described paper currently supported. Covariates, constraints, deathexact censor expressed respect expanded state space.  supplied hand, initprobs defined automatically subjects assumed begin first two phases. Hidden Markov models can additionally given phased states.  user supplies outcome distribution original state using hmodel, expanded internally assumed within phased states.  initprobs interpreted expanded state space.  Misclassification models defined using ematrix supported, must defined using hmmCat hmmIdent constructors, described hmodel section help page.  HMM expanded state space can defined hand. Output functions presented hidden Markov model expanded state space, example, transition probabilities states, covariate effects transition rates, prevalence counts, aggregated hidden phases. Numerical estimation unstable weak evidence two-phase sojourn distribution, , model close Markov. See d2phase definition two-phase distribution interpretation parameters. experimental feature, functions implemented. Please report experiences using feature author! phase.inits Initial values phase-type models.  list one component \"two-phased\" state.  component list two elements.  first elements scalar defining transition intensity phase 1 phase 2.  second element matrix, one row potential destination state two-phased state, two columns.  first column transition rate phase 1 destination state, second column transition rate phase 2 destination state.  one destination state, may supplied vector. phase type models, initial values transition rates non-phased states taken qmatrix supplied msm, entries matrix corresponding transitions phased states ignored. subject.weights Name variable data (unquoted) giving   weights apply subject data   calculating log-likelihood weighted sum   subjects.  taken first observation   subject, weights supplied subsequent observations   used. Weights observation level supported. cl Width symmetric confidence intervals maximum likelihood estimates, default 0.95. fixedpars Vector indices parameters whose values fixed initial values optimisation. given order: transition intensities (reading across rows transition matrix), covariates intensities (ordered intensities within covariates), hidden Markov model parameters, including misclassification probabilities parameters HMM outcome distributions (ordered parameters within states), hidden Markov model covariate parameters (ordered covariates within parameters within states), initial state occupancy probabilities (excluding first probability, fixed one minus sum others). equality constraints certain parameters, fixedpars indexes set unique parameters, excluding constrained equal previous parameters. fix parameters, specify fixedpars = TRUE. can useful profiling likelihoods, building complex models stage stage. center TRUE (default, unless fixedpars=TRUE) covariates centered means maximum likelihood estimation. usually improves stability numerical optimisation. opt.method \"optim\", \"nlm\" \"bobyqa\", corresponding R function used maximum likelihood estimation. optim default.  \"bobyqa\" requires package minqa installed.  See help functions details.  Advanced users can also add optimisation methods, see source optim.R msm examples. \"fisher\", specialised Fisher scoring method used (Kalbfleisch Lawless, 1985) can faster generic methods, though less robust.  available Markov models panel data (obstype=1), , models censored states, hidden Markov models, exact observation exact death times (obstype=2,3). hessian TRUE standard errors confidence intervals obtained numerical estimate Hessian (observed information matrix).  default maximum likelihood estimation performed.  parameters fixed initial values optimisation performed, defaults FALSE.  requested, actual Hessian returned x$paramdata$opt$hessian, x fitted model object. hessian set FALSE, standard errors confidence intervals obtained Fisher (expected) information matrix, available.  may preferable numerical estimation Hessian computationally intensive, resulting estimate non-invertible positive definite. use.deriv TRUE analytic first derivatives used optimisation likelihood, available appropriate quasi-Newton optimisation method, BFGS, used.  Analytic derivatives available models. use.expm TRUE matrix exponentiation needed calculate likelihood done using expm package.  Otherwise original routines used msm 1.2.4 earlier used.  Set FALSE backward compatibility, let package maintainer know gives substantive differences. analyticp default, likelihood certain simpler 3, 4 5 state models calculated using analytic expression transition probability (P) matrix. models, matrix exponentiation used obtain P. revert original method using matrix exponential models, specify analyticp=FALSE. See PDF manual list models analytic P matrices implemented. na.action missing data: either na.omit drop carry , na.fail stop error.  Missing data includes NAs states, times, subject obstrue, NAs first observation subject covariates initcovariates, NAs covariates (excluding last observation subject), NAs obstype (excluding first observation subject), subjects one observation (thus observed transitions). ... Optional arguments general-purpose optimisation routine, optim default. example method=\"Nelder-Mead\" change optimisation algorithm \"BFGS\" method msm calls default. often worthwhile normalize optimisation using control=list(fnscale = ), number order magnitude -2 log likelihood. 'false' convergence reported standard errors calculated due non-positive-definite Hessian, consider tightening tolerance criteria convergence. optimisation takes long time, intermediate steps can printed using trace argument control list. See optim details. Fisher scoring method, control list can supplied way, supported options reltol, trace damp.  first two used way optim.  algorithm fails singular information matrix, adjust damp default zero (, e.g. 1).  adds constant identity matrix multiplied damp information matrix optimisation.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multi-state Markov and hidden Markov models in continuous time — msm","text":"obtain summary information models fitted msm function, recommended use extractor functions qmatrix.msm, pmatrix.msm, sojourn.msm, msm.form.qoutput.  provide estimates confidence intervals quantities transition probabilities given covariate values. advanced use, may necessary directly use information stored object returned msm.  documented help page msm.object. Printing msm object typing object's name command line implicitly invokes print.msm.  formats prints important information model fit, also returns information R object.  includes estimates confidence intervals transition intensities (log) hazard ratios corresponding covariates. hidden Markov model, chief information hmodel component also formatted printed. includes estimates confidence intervals parameter.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multi-state Markov and hidden Markov models in continuous time — msm","text":"full details methodology behind msm package, refer PDF manual msm-manual.pdf doc subdirectory package. includes tutorial typical use msm.  paper Jackson (2011) Journal Statistical Software presents material manual concise form. msm designed fitting continuous-time Markov models, processes transitions can occur time.  models defined intensities, govern time spent current state probabilities next state.  discrete-time models, transitions known advance occur multiples time unit, model purely governed probability distributions state next time point, conditionally state current time. can also fitted msm, assuming continuous-time process underlying data.  fitted transition probability matrix one time period, returned pmatrix.msm(...,t=1) equivalent matrix governs discrete-time model. However, can fitted efficiently using multinomial logistic regression, example, using multinom R package nnet (Venables Ripley, 2002). simple continuous-time multi-state Markov models, likelihood calculated terms transition intensity matrix \\(Q\\). data consist observations Markov process arbitrary times, exact transition times known.  likelihood calculated using transition probability matrix \\(P(t) = \\exp(tQ)\\), \\(\\exp\\) matrix exponential.  state \\(\\) observed time \\(t\\) state \\(j\\) observed time \\(u\\), contribution likelihood pair observations \\(,j\\) element \\(P(u - t)\\). See, example, Kalbfleisch Lawless (1985), Kay (1986), Gentleman et al. (1994). hidden Markov models, likelihood individual \\(k\\) observations calculated directly summing unknown state time, producing product \\(k\\) matrices. calculation generalisation method described Satten Longini (1996), also Jackson Sharples (2002), Jackson et al. (2003). must enough information data state estimate transition rate, otherwise likelihood flat maximum found.  may appropriate reduce number states model, number allowed transitions, number covariate effects, ensure convergence.  Hidden Markov models, situations value process known series snapshots, particularly susceptible non-identifiability, especially combined complex transition matrix.  Choosing appropriate set initial values optimisation can also important.  flat likelihoods, 'informative' initial values often required.  See PDF manual tips.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multi-state Markov and hidden Markov models in continuous time — msm","text":"Jackson, C.H. (2011). Multi-State Models Panel Data: msm Package R., Journal Statistical Software, 38(8), 1-29. URL http://www.jstatsoft.org/v38/i08/. Kalbfleisch, J., Lawless, J.F., analysis panel data Markov assumption Journal Americal Statistical Association (1985) 80(392): 863–871. Kay, R.  Markov model analysing cancer markers disease states survival studies.  Biometrics (1986) 42: 855–865. Gentleman, R.C., Lawless, J.F., Lindsey, J.C. Yan, P.  Multi-state Markov models analysing incomplete disease history data illustrations HIV disease.  Statistics Medicine (1994) 13(3): 805–821. Satten, G.. Longini, .M.  Markov chains measurement error: estimating 'true' course marker progression human immunodeficiency virus disease (discussion) Applied Statistics 45(3): 275-309 (1996) Jackson, C.H. Sharples, L.D. Hidden Markov models onset progression bronchiolitis obliterans syndrome lung transplant recipients Statistics Medicine, 21(1): 113–128 (2002). Jackson, C.H., Sharples, L.D., Thompson, S.G. Duffy, S.W. Couto, E. Multi-state Markov models disease progression classification error. Statistician, 52(2): 193–209 (2003) Titman, .C. Sharples, L.D.  Semi-Markov models phase-type sojourn distributions.  Biometrics 66, 742-752 (2009). Venables, W.N. Ripley, B.D. (2002) Modern Applied Statistics S, second edition. Springer.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multi-state Markov and hidden Markov models in continuous time — msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multi-state Markov and hidden Markov models in continuous time — msm","text":"","code":"### Heart transplant data ### For further details and background to this example, see ### Jackson (2011) or the PDF manual in the doc directory. print(cav[1:10,]) #>     PTNUM      age    years dage sex pdiag cumrej state firstobs statemax #> 1  100002 52.49589 0.000000   21   0   IHD      0     1        1        1 #> 2  100002 53.49863 1.002740   21   0   IHD      2     1        0        1 #> 3  100002 54.49863 2.002740   21   0   IHD      2     2        0        2 #> 4  100002 55.58904 3.093151   21   0   IHD      2     2        0        2 #> 5  100002 56.49589 4.000000   21   0   IHD      3     2        0        2 #> 6  100002 57.49315 4.997260   21   0   IHD      3     3        0        3 #> 7  100002 58.35068 5.854795   21   0   IHD      3     4        0        4 #> 8  100003 29.50685 0.000000   17   0   IHD      0     1        1        1 #> 9  100003 30.69589 1.189041   17   0   IHD      1     1        0        1 #> 10 100003 31.51507 2.008219   17   0   IHD      1     3        0        3 twoway4.q <- rbind(c(-0.5, 0.25, 0, 0.25), c(0.166, -0.498, 0.166, 0.166), c(0, 0.25, -0.5, 0.25), c(0, 0, 0, 0)) statetable.msm(state, PTNUM, data=cav) #>     to #> from    1    2    3    4 #>    1 1367  204   44  148 #>    2   46  134   54   48 #>    3    4   13  107   55 crudeinits.msm(state ~ years, PTNUM, data=cav, qmatrix=twoway4.q) #>            [,1]        [,2]       [,3]       [,4] #> [1,] -0.1173149  0.06798932  0.0000000 0.04932559 #> [2,]  0.1168179 -0.37584883  0.1371340 0.12189692 #> [3,]  0.0000000  0.04908401 -0.2567471 0.20766310 #> [4,]  0.0000000  0.00000000  0.0000000 0.00000000 cav.msm <- msm( state ~ years, subject=PTNUM, data = cav,                  qmatrix = twoway4.q, deathexact = 4,                   control = list ( trace = 2, REPORT = 1 )  ) #> initial  value 4908.816768  #> iter   2 value 4023.220496 #> iter   3 value 3999.817797 #> iter   4 value 3991.887884 #> iter   5 value 3988.554023 #> iter   6 value 3987.675350 #> iter   7 value 3986.235180 #> iter   8 value 3980.602119 #> iter   9 value 3972.567178 #> iter  10 value 3969.625128 #> iter  11 value 3969.152813 #> iter  12 value 3968.848846 #> iter  13 value 3968.804343 #> iter  14 value 3968.798404 #> iter  15 value 3968.797986 #> iter  16 value 3968.797903 #> iter  16 value 3968.797893 #> final  value 3968.797893  #> converged #> Used 43 function and 16 gradient evaluations cav.msm #>  #> Call: #> msm(formula = state ~ years, subject = PTNUM, data = cav, qmatrix = twoway4.q,     deathexact = 4, control = list(trace = 2, REPORT = 1)) #>  #> Maximum likelihood estimates #>  #> Transition intensities #>                   Baseline                     #> State 1 - State 1 -0.17037 (-0.19027,-0.15255) #> State 1 - State 2  0.12787 ( 0.11135, 0.14684) #> State 1 - State 4  0.04250 ( 0.03412, 0.05294) #> State 2 - State 1  0.22512 ( 0.16755, 0.30247) #> State 2 - State 2 -0.60794 (-0.70880,-0.52143) #> State 2 - State 3  0.34261 ( 0.27317, 0.42970) #> State 2 - State 4  0.04021 ( 0.01129, 0.14324) #> State 3 - State 2  0.13062 ( 0.07952, 0.21457) #> State 3 - State 3 -0.43710 (-0.55292,-0.34554) #> State 3 - State 4  0.30648 ( 0.23822, 0.39429) #>  #> -2 * log-likelihood:  3968.798  qmatrix.msm(cav.msm) #>         State 1                      State 2                      #> State 1 -0.17037 (-0.19027,-0.15255)  0.12787 ( 0.11135, 0.14684) #> State 2  0.22512 ( 0.16755, 0.30247) -0.60794 (-0.70880,-0.52143) #> State 3 0                             0.13062 ( 0.07952, 0.21457) #> State 4 0                            0                            #>         State 3                      State 4                      #> State 1 0                             0.04250 ( 0.03412, 0.05294) #> State 2  0.34261 ( 0.27317, 0.42970)  0.04021 ( 0.01129, 0.14324) #> State 3 -0.43710 (-0.55292,-0.34554)  0.30648 ( 0.23822, 0.39429) #> State 4 0                            0                            pmatrix.msm(cav.msm, t=10) #>            State 1    State 2    State 3   State 4 #> State 1 0.30940656 0.09750021 0.08787255 0.5052207 #> State 2 0.17165172 0.06552639 0.07794394 0.6848780 #> State 3 0.05898093 0.02971653 0.04665485 0.8646477 #> State 4 0.00000000 0.00000000 0.00000000 1.0000000 sojourn.msm(cav.msm) #>         estimates        SE        L        U #> State 1  5.869552 0.3307930 5.255734 6.555057 #> State 2  1.644897 0.1288274 1.410825 1.917805 #> State 3  2.287819 0.2743666 1.808595 2.894023"},{"path":"https://chjackson.github.io/msm/reference/msm.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitted msm model objects — msm.object","title":"Fitted msm model objects — msm.object","text":"msm function returns list following components. intended developers confident users.  extract results fitted model objects, functions qmatrix.msm print.msm used instead.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitted msm model objects — msm.object","text":"call original call msm, returned match.call. Qmatrices list matrices. first component, labelled logbaseline, matrix containing estimated transition intensities log scale covariates fixed means data (zero, center=FALSE). component labelled baseline equivalent untransformed scale. remaining component matrix giving linear effects labelled covariate matrix log intensities.  extract estimated intensity matrix natural scale, arbitrary combination covariate values, use function qmatrix.msm. QmatricesSE standard error matrices corresponding Qmatrices. QmatricesL,QmatricesU Corresponding lower upper symmetric confidence limits, width 0.95 unless specified otherwise cl argument. Ematrices list matrices. first component, labelled logitbaseline, estimated misclassification probability matrix (expressed log odds relative probability true state) covariates fixed means data (zero, center=FALSE). component labelled baseline equivalent untransformed scale. remaining component matrix giving linear effects labelled covariate matrix logit misclassification probabilities.  extract estimated misclassification probability matrix natural scale, arbitrary combination covariate values, use function ematrix.msm. EmatricesSE standard error matrices corresponding Ematrices. EmatricesL,EmatricesU Corresponding lower upper symmetric confidence limits, width 0.95 unless specified otherwise cl argument. minus2loglik Minus twice maximised log-likelihood. deriv Derivatives minus twice log-likelihood maximum. estimates Vector untransformed maximum likelihood estimates returned optim.  Transition intensities log scale misclassification probabilities given log odds relative probability true state. estimates.t Vector transformed maximum likelihood estimates intensities probabilities natural scales. fixedpars Indices estimates fixed maximum likelihood estimation. center Indicator whether estimation performed covariates centered means data. covmat Covariance matrix corresponding estimates. ci Matrix confidence intervals corresponding estimates.t opt Return value optimisation routine (optim nlm), giving information results optimisation. foundse Logical value indicating whether Hessian positive-definite supposed maximum likelihood.  , covariance matrix parameters unavailable. cases optimisation probably converged maximum. data list giving data used model fit, use post-processing.  extract , use methods model.frame.msm model.matrix.msm. format element changed version 1.4 msm, now contains model.frame object mf variables used model.  previous format (ad-hoc list vectors matrices) can obtained function recreate.olddata(msmobject), msmobject object returned msm. qmodel list objects representing transition matrix structure options likelihood calculation.  See qmodel.object documentation components. emodel list objects representing misclassification model structure, models specified using ematrix argument msm. See emodel.object. qcmodel list objects representing model covariates transition intensities. See qcmodel.object. ecmodel list objects representing model covariates transition intensities.  See ecmodel.object. hmodel list objects representing hidden Markov model structure. See hmodel.object. cmodel list giving information censored states.  See cmodel.object. pci Cut points time-varying intensities, supplied msm, excluding outside times observed data. paramdata list giving information parameters multi-state model.  See paramdata.object. cl Confidence interval width, supplied msm. covariates Formula covariates intensities, supplied msm. misccovariates Formula covariates misclassification probabilities, supplied msm. hcovariates Formula covariates hidden Markov model outcomes, supplied msm. initcovariates Formula covariates initial state occupancy probabilities hidden Markov models, supplied msm. sojourn list returned sojourn.msm, components: mean = estimated mean sojourn times transient states, covariates fixed means (center=TRUE) zero (center=FALSE). se = corresponding standard errors.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm2Surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data for `msm' to data for `survival', `mstate' or `flexsurv' analysis — msm2Surv","title":"Convert data for `msm' to data for `survival', `mstate' or `flexsurv' analysis — msm2Surv","text":"Converts longitudinal data msm model fit, observations represent exact transition times process, counting process data.  enables, example, flexible parametric multi-state models fitted flexsurvreg flexsurv package, semiparametric models implemented coxph mstate package.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm2Surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data for `msm' to data for `survival', `mstate' or `flexsurv' analysis — msm2Surv","text":"","code":"msm2Surv(data, subject, time, state, covs = NULL, Q)"},{"path":"https://chjackson.github.io/msm/reference/msm2Surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data for `msm' to data for `survival', `mstate' or `flexsurv' analysis — msm2Surv","text":"data Data frame format expected msm model fit exacttimes=TRUE obstype=2.  row represents observation state, time variable contains exact complete transition times underlying process.  explained detail help page msm, section obstype=2. subject Name subject ID data (character format, .e. quoted). time Name time variable data (character). state Name state variable data (character). covs Vector covariate names carry (character).  supplied, taken remaining variables data. Q Transition intensity matrix.  number rows number columns equal number states.  instantaneous transition allowed state \\(r\\) state \\(s\\), Q \\((r,s)\\) entry 0, otherwise non-zero.  diagonal entries ignored.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm2Surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data for `msm' to data for `survival', `mstate' or `flexsurv' analysis — msm2Surv","text":"data frame class \"msdata\", rows representing observed censored transitions.  one row observed transition original data, additional rows every potential transition occurred observed state. data frame columns called: id Subject ID Starting state transition Finishing state transition Tstart starting time transition Tstop finishing time transition time time difference = Tstop - Tstart status Event censoring indicator, 1 indicating observed transition, 0 indicating censoring trans Transition number remaining columns represent covariates.  covariates whose names clash standard variables returned data (\"id\", \"\", \"\", \"Tstart\", \"Tstop\", \"time\", \"status\" \"trans\") \".2\" appended names. transition matrix mstate format stored trans attribute returned object.  See example code .","code":""},{"path":"https://chjackson.github.io/msm/reference/msm2Surv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert data for `msm' to data for `survival', `mstate' or `flexsurv' analysis — msm2Surv","text":"example, data supplied msm look like : output msm2Surv data frame looking like : 27 days, subject 1 observed move state 1 state 2 (first row, status 1), means potential transition state 1 state 4 censored (second row, status 0). See mstate package references details data format using semi-parametric multi-state modelling.","code":""},{"path":"https://chjackson.github.io/msm/reference/msm2Surv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert data for `msm' to data for `survival', `mstate' or `flexsurv' analysis — msm2Surv","text":"Putter H, Fiocco M, Geskus RB (2007). Tutorial biostatistics: Competing risks multi-state models. Statistics Medicine 26: 2389-2430. Liesbeth C. de Wreede, Marta Fiocco, Hein Putter (2011). mstate: R Package Analysis Competing Risks Multi-State Models. Journal Statistical Software, 38(7), 1-30. Jackson, C. H. (2014). flexsurv: Flexible parametric survival multi-state models.  R package version 0.5.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/msm2Surv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert data for `msm' to data for `survival', `mstate' or `flexsurv' analysis — msm2Surv","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/msm2Surv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data for `msm' to data for `survival', `mstate' or `flexsurv' analysis — msm2Surv","text":"","code":"msmdat <- data.frame(  subj = c(1, 1, 1, 1, 1, 2, 2, 2),  days = c(0, 27, 75, 97, 1106, 0, 90, 1037),  status = c(1, 2, 3, 4, 4, 1, 2, 2),  age = c(66, 66, 66, 66, 69, 49, 49, 51),  treat = c(1, 1, 1, 1, 1, 0, 0, 0) ) # transitions only allowed to next state up or state 4 Q <- rbind(c(1, 1, 0, 1),             c(0, 1, 1, 1),            c(0, 0, 1, 1),            c(0, 0, 0, 0)) dat <- msm2Surv(data=msmdat, subject=\"subj\", time=\"days\", state=\"status\",           Q=Q) dat #> An object of class 'msdata' #>  #> Data: #>   id from to Tstart Tstop time status age treat trans #> 1  1    1  2      0    27   27      1  66     1     1 #> 2  1    1  4      0    27   27      0  66     1     2 #> 3  1    2  3     27    75   48      1  66     1     3 #> 4  1    2  4     27    75   48      0  66     1     4 #> 5  1    3  4     75    97   22      1  66     1     5 #> 6  2    1  2      0    90   90      1  49     0     1 #> 7  2    1  4      0    90   90      0  49     0     2 #> 8  2    2  3     90  1037  947      0  49     0     3 #> 9  2    2  4     90  1037  947      0  49     0     4 attr(dat, \"trans\") #>     to #> from  1  2  3  4 #>    1 NA  1 NA  2 #>    2 NA NA  3  4 #>    3 NA NA NA  5 #>    4 NA NA NA NA"},{"path":"https://chjackson.github.io/msm/reference/odds.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate tables of odds ratios for covariates on misclassification probabilities — odds.msm","title":"Calculate tables of odds ratios for covariates on misclassification probabilities — odds.msm","text":"Odds ratios computed exponentiating estimated covariate effects logit-misclassification probabilities.","code":""},{"path":"https://chjackson.github.io/msm/reference/odds.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate tables of odds ratios for covariates on misclassification probabilities — odds.msm","text":"","code":"odds.msm(x, odds.scale = 1, cl = 0.95)"},{"path":"https://chjackson.github.io/msm/reference/odds.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate tables of odds ratios for covariates on misclassification probabilities — odds.msm","text":"x Output msm representing fitted multi-state model. odds.scale Vector elements number covariates misclassification probabilities. Corresponds increase covariate used calculate odds ratio. Defaults 1. cl Width symmetric confidence interval present.  Defaults 0.95.","code":""},{"path":"https://chjackson.github.io/msm/reference/odds.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate tables of odds ratios for covariates on misclassification probabilities — odds.msm","text":"list tables containing odds ratio estimates, one table covariate.  table three columns, containing odds ratio, approximate upper 95% lower 95% confidence limit respectively (assuming normality log scale), misclassification probability.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/odds.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate tables of odds ratios for covariates on misclassification probabilities — odds.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/paramdata.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Developer documentation: internal msm parameters object — paramdata.object","title":"Developer documentation: internal msm parameters object — paramdata.object","text":"object giving information parameters multi-state model. Used internally maximum likelihood estimation arranging results. Returned paramdata component fitted msm model object.","code":""},{"path":"https://chjackson.github.io/msm/reference/paramdata.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Developer documentation: internal msm parameters object — paramdata.object","text":"inits Vector initial values distinct parameters estimated.  transformed real line (e.g. log), exclude parameters fixed initial values, parameters defined always fixed (e.g. binomial denominators) parameters constrained equal previous ones. plabs Names parameters allinits. allinits Vector parameter values estimation, including fixed constrained equal parameters, transformed real line. hmmpars Indices allinits represent baseline parameters hidden Markov outcome models (thus excluding covariate effects HMMs initial state occupancy probabilities). fixed TRUE parameters fixed, FALSE otherwise. fixedpars Indices parameters allinits fixed, either definition requested user fixedpars argument msm. Excludes parameters fixed constraining equal parameters. notfixed Indices parameters fixed definition fixedpars. optpars Indices parameters allinits estimated, thus included inits. auxpars Indices \"auxiliary\" parameters always fixed, example, binomial denominators (hmmBinom) parameter hmmIdent. constr Vector integers, length npars, indicating sets parameters constrained equal .  two integers equal corresponding parameters equal.  negative element indicates parameter defined minus parameter (used covariate effects transition intensities). npars Total number parameters, equal length(allinits). nfix Number fixed parameters, equal length(fixedpars). nopt Number parameters estimated, equal length(inits) length(optpars). ndup Number parameters defined duplicates previous parameters equality constraints (currently unused). ranges Matrix defined ranges parameter natural scale (e.g. 0 infinity rate parameters). opt Object returned optimisation routine (optim). foundse TRUE standard errors available optimisation. FALSE optimisation probably converged. lik Minus twice log likelihood parameter estimates. deriv Derivatives minus twice log likelihood parameter estimates, available. information Corresponding expected information matrix parameter estimates, available. params Vector parameter values maximum likelihood estimation, corresponding allinits, still real-line transformed scale. covmat Covariance matrix corresponding params. ci Matrix confidence intervals corresponding params, nominal coverage (default 0.95) defined cl argument msm. estimates.t Vector parameter estimates, params parameters natural scales.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/pearson.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Pearson-type goodness-of-fit test — pearson.msm","title":"Pearson-type goodness-of-fit test — pearson.msm","text":"Pearson-type goodness--fit test multi-state models fitted panel-observed data.","code":""},{"path":"https://chjackson.github.io/msm/reference/pearson.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pearson-type goodness-of-fit test — pearson.msm","text":"","code":"pearson.msm(   x,   transitions = NULL,   timegroups = 3,   intervalgroups = 3,   covgroups = 3,   groups = NULL,   boot = FALSE,   B = 500,   next.obstime = NULL,   N = 100,   indep.cens = TRUE,   maxtimes = NULL,   pval = TRUE )"},{"path":"https://chjackson.github.io/msm/reference/pearson.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pearson-type goodness-of-fit test — pearson.msm","text":"x fitted multi-state model, returned msm. transitions integer vector indicating interval transitions grouped together contingency table. length number allowed interval transitions, excluding transitions absorbing states absorbing states. allowed interval transitions set pairs states \\((,b)\\) possible observe \\(\\) one time \\(b\\) later time.  example, \"well-disease-death\" model allowed instantaneous 1-2, 2-3 transitions, 5 allowed interval transitions. numerical order, 1-1, 1-2, 1-3, 2-2 2-3, excluding absorbing-absorbing transitions. , group transitions 1-1,1-2 together, transitions 2-2,2-3 together, specify transitions = c(1,1,2,3,3). transitions state may grouped.  default, interval transition forms separate group. timegroups Number groups based quantiles time since start process. intervalgroups Number groups based quantiles time interval observations, within time groups covgroups Number groups based quantiles \\(\\sum_r q_{irr}\\), \\(q_{irr}\\) diagonal entries transition intensity matrix ith transition.  function covariate effects covariate values ith transition: \\(q_{irr}\\) minus sum -diagonal entries \\(q_{rs}^{(0)} exp (\\beta_{rs}^T z_i)\\) rth row. Thus covgroups summarises impact covariates observation, calculating overall rate progression states observation. time-inhomogeneous models specified using pci argument msm, covariate time period, covgroups set 1, since timegroups ensures transitions grouped time. groups vector arbitrary groups categorise transition. can integer vector factor.  can used diagnose specific areas poor fit.  example, contingency table might grouped arbitrary combinations covariates detect types individual model fits poorly. length groups x$data$n, number observations used model fit, number observations original dataset missing values excluded.  value groups observation \\(\\) used categorise transition ends observation . Values groups first observation subject ignored. boot Estimate \"exact\" p-value using parametric bootstrap. objects used original call msm produced x, qmatrix, working environment, else “object found” error given.  enables original model refitted replicate datasets. Note groups used bootstrapping, simulated observations categories original observations. B Number bootstrap replicates. next.obstime vector length x$data$n (number observations used model fit) giving time next scheduled observation following time point.  used times death known exactly. individuals died (entered absorbing state) next scheduled observation, time death known exactly, next.obstime greater observed death time. individual die, scheduled observation follow time point, next.obstime just time observation. next.obstime used determine grouping time interval observations, based scheduled observations. exact times death used grouping, shorter intervals contain excess deaths, goodness--fit statistic biased. next.obstime unknown, multiply-imputed using product-limit estimate based intervals observations deaths. resulting tables transitions averaged imputations.  may slow. N Number imputations estimation distribution next scheduled observation time, exact death times. indep.cens TRUE, times censoring included estimation distribution next scheduled observation time. FALSE, times censoring assumed systematically different observation times. maxtimes vector length x$data$n, common scalar, giving upper bound next scheduled observation time.  Used multiple imputation times death known exactly.  value greater maxtimes simulated, next scheduled observation taken censored.  supplied, known.  supplied, taken maximum interval occurring data, plus one time unit.  observations exact death times, time since previous observation. pval Calculate p-value using improved approximation Titman (2009).  optional since needed bootstrapping, computationally non-trivial.  available currently non-hidden Markov models panel data without exact death times.  Also available models censoring, including time-homogeneous models fitted pci option msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/pearson.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pearson-type goodness-of-fit test — pearson.msm","text":"list whose first two elements contingency tables observed transitions \\(O\\) expected transitions \\(E\\), respectively, combination groups.  third element table deviances \\((O - E)^2 / E\\) multiplied sign \\(O - E\\).  expected number transitions zero deviance zero.  Entries third matrix bigger magnitude groups model fits poorly. list(\"\\\"test\\\"\") fourth element list, data frame one row containing Pearson-type goodness--fit test statistic stat.  test statistic sum deviances.  panel-observed data without exact death times, misclassification censored observations, p p-value test statistic calculated using improved approximation Titman (2009). models, comparison older versions package, test also presents p.lower p.upper, theoretical lower upper limits p-value test statistic, based chi-squared distributions df.lower df.upper degrees freedom, respectively. df.upper number independent cells contingency table, df.lower df.upper minus number estimated parameters model. list(\"\\\"intervalq\\\"\") (printed default) contains definition grouping intervals observations.  groups defined quantiles within groups corresponding time since start process. list(\"\\\"sim\\\"\") exact death times, contains simulations contingency tables test statistics imputation next scheduled sampling time.  averaged produce presented tables test statistic. element printed default. exact death times, null variance test statistic (formed taking mean simulated test statistics) less twice mean (Titman, 2008), null distribution chi-squared.  case, p.upper upper limit true asymptotic p-value, p.lower lower limit, presented. list(\"\\\"boot\\\"\") bootstrap used, element contain bootstrap replicates test statistics (printed default). list(\"\\\"lambda\\\"\") Titman (2009) p-value calculated, contains weights defining null distribution test statistic weighted sum chi-squared(1) random variables (printed default).","code":""},{"path":"https://chjackson.github.io/msm/reference/pearson.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pearson-type goodness-of-fit test — pearson.msm","text":"method (Aguirre-Hernandez Farewell, 2002) intended data represent observations process arbitrary times (\"snapshots\", \"panel-observed\" data). data represent exact transition times process, prevalence.msm can used assess fit, though without formal test. times death known exactly, states misclassified, individual's final observation censored state, modification Titman Sharples (2008) used. form censoring supported state end individual's series represents unknown transient state (.e. individual known alive time). types censoring omitted data performing test. See references details methods.  method used censored states modification method appendix Titman Sharples (2008), described https://chjackson.github.io/msm/misc/robustcensoring.pdf (Titman, 2007). Groupings time since initiation, time interval impact covariates based equally-spaced quantiles.  number groups chosen many cells small expected numbers transitions, since deviance statistic unstable sparse contingency tables.  Ideally, expected numbers transitions cell table less 5.  Conversely, power test reduced groups. Therefore, sensitivity analysis test results grouping advisable. Saved model objects fitted previous versions R (versions less 1.2) need refitted current R use pearson.msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/pearson.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pearson-type goodness-of-fit test — pearson.msm","text":"Aguirre-Hernandez, R. Farewell, V. (2002) Pearson-type goodness--fit test stationary time-continuous Markov regression models. Statistics Medicine 21:1899-1911. Titman, . Sharples, L. (2008) general goodness--fit test Markov hidden Markov models. Statistics Medicine 27(12):2177-2195 Titman, . (2009) Computation asymptotic null distribution goodness--fit tests multi-state models. Lifetime Data Analysis 15(4):519-533. Titman, . (2008) Model diagnostics multi-state models biological systems. PhD thesis, University Cambridge.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/pearson.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pearson-type goodness-of-fit test — pearson.msm","text":"Andrew Titman .titman@lancaster.ac.uk, Chris Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/pearson.msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pearson-type goodness-of-fit test — pearson.msm","text":"","code":"psor.q <- rbind(c(0,0.1,0,0),c(0,0,0.1,0),c(0,0,0,0.1),c(0,0,0,0)) psor.msm <- msm(state ~ months, subject=ptnum, data=psor,                 qmatrix = psor.q, covariates = ~ollwsdrt+hieffusn,                 constraint = list(hieffusn=c(1,1,1),ollwsdrt=c(1,1,2))) pearson.msm(psor.msm, timegroups=2, intervalgroups=2, covgroups=2) #> $Observed #>           Time Interval           Cov 1-1 1-2 1-3 1-4 2-2 2-3 2-4 3-3 3-4 #> 1   [0.4,9.13)        1 [-0.81,-0.49)  20  11   1   0  11   8   2   4   4 #> 2 [9.13,57.06]        1 [-0.81,-0.49)   4   6   0   1   8   7   1   7  10 #> 3   [0.4,9.13)        2 [-0.81,-0.49)  26   2   1   2   9   1   0   4   3 #> 4 [9.13,57.06]        2 [-0.81,-0.49)  22   0   0   1  13   1   4   6   1 #> 5   [0.4,9.13)        1         -0.49  10  12   5   2  10   5   1   4   2 #> 6 [9.13,57.06]        1         -0.49  10   6   4   0  15   8   6   9  10 #> 7   [0.4,9.13)        2         -0.49  38   8   1   2  11   2   0   2   0 #> 8 [9.13,57.06]        2         -0.49  29   3   4   0  12   2   1  10   4 #>  #> $Expected #>           Time Interval           Cov      1-1       1-2       1-3         1-4 #> 1   [0.4,9.13)        1 [-0.81,-0.49) 30.15388  1.711383 0.1197352 0.015000174 #> 2 [9.13,57.06]        1 [-0.81,-0.49)  9.65901  1.093259 0.1922820 0.055449104 #> 3   [0.4,9.13)        2 [-0.81,-0.49) 24.44626  4.787455 1.1078573 0.658432864 #> 4 [9.13,57.06]        2 [-0.81,-0.49) 13.43426  5.565404 1.6534398 2.346896279 #> 5   [0.4,9.13)        1         -0.49 26.93171  1.917908 0.1409193 0.009465848 #> 6 [9.13,57.06]        1         -0.49 17.13249  2.390072 0.4047737 0.072664352 #> 7   [0.4,9.13)        2         -0.49 34.36016 10.126221 3.2263519 1.287264545 #> 8 [9.13,57.06]        2         -0.49 14.95936  9.248203 5.9052603 5.887180630 #>         2-2      2-3       2-4       3-3       3-4 #> 1 18.230440 2.383742 0.3858178  6.177132 1.8228683 #> 2 12.698333 2.268766 1.0329009 12.581730 4.4182703 #> 3  6.235939 2.057102 1.7069590  2.522100 4.4778998 #> 4  6.363317 2.856428 8.7802552  1.249860 5.7501403 #> 5 14.356290 1.524817 0.1188922  5.326063 0.6739367 #> 6 22.208604 5.504203 1.2871930 15.066179 3.9338215 #> 7  7.462940 3.827705 1.7093542  1.338349 0.6616511 #> 8  3.967779 4.405902 6.6263189  4.473464 9.5265356 #>  #> $`Deviance*sign(O-E)` #>           Time Interval           Cov          1-1        1-2          1-3 #> 1   [0.4,9.13)        1 [-0.81,-0.49)  -3.41917214 50.4144355   6.47149558 #> 2 [9.13,57.06]        1 [-0.81,-0.49)  -3.31549472 22.0223384  -0.19228197 #> 3   [0.4,9.13)        2 [-0.81,-0.49)   0.09875225 -1.6229716  -0.01050062 #> 4 [9.13,57.06]        2 [-0.81,-0.49)   5.46155192 -5.5654043  -1.65343976 #> 5   [0.4,9.13)        1         -0.49 -10.64480253 52.9997237 167.54739797 #> 6 [9.13,57.06]        1         -0.49  -2.96935291  5.4523779  31.93303230 #> 7   [0.4,9.13)        2         -0.49   0.38557497 -0.4464466  -1.53629952 #> 8 [9.13,57.06]        2         -0.49  13.17835252 -4.2213647  -0.61470902 #>            1-4       2-2        2-3          2-4        3-3        3-4 #> 1  -0.01500017 -2.867691 13.2322833  6.753407004 -0.7673306  2.6002440 #> 2  16.09000564 -1.738364  9.8664066 -0.001047992 -2.4762657  7.0515618 #> 3   2.73346377  1.225161 -0.5432225 -1.706959049  0.8660194 -0.4877706 #> 4  -0.77299095  6.921792 -1.2065153 -2.602525668 18.0530918 -3.9240491 #> 5 418.58123842 -1.321878  7.9202232  6.529870376 -0.3301583  2.6092123 #> 6  -0.07266435 -2.339812  1.1316806 17.255026748 -2.4424589  9.3543954 #> 7   0.39462893  1.676389 -0.8727179 -1.709354171  0.3271062 -0.6616511 #> 8  -5.88718063 16.260124 -1.3137753 -4.777232228  6.8275039 -3.2060549 #>  #> $test #>      stat p df.lower p.lower df.upper p.upper #>  1010.483 0       42       0       48       0 #>  # More 1-2, 1-3 and 1-4 observations than expected in shorter time # intervals - the model fits poorly. # A random effects model might accommodate such fast progressors."},{"path":"https://chjackson.github.io/msm/reference/pexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Exponential distribution with piecewise-constant rate — pexp","title":"Exponential distribution with piecewise-constant rate — pexp","text":"Density, distribution function, quantile function random generation generalisation exponential distribution, rate changes series times.","code":""},{"path":"https://chjackson.github.io/msm/reference/pexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exponential distribution with piecewise-constant rate — pexp","text":"","code":"dpexp(x, rate = 1, t = 0, log = FALSE)  ppexp(q, rate = 1, t = 0, lower.tail = TRUE, log.p = FALSE)  qpexp(p, rate = 1, t = 0, lower.tail = TRUE, log.p = FALSE)  rpexp(n = 1, rate = 1, t = 0, start = min(t))"},{"path":"https://chjackson.github.io/msm/reference/pexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exponential distribution with piecewise-constant rate — pexp","text":"x, q vector quantiles. rate vector rates. t vector length rate, giving times rate changes. values t increasing order. log, log.p logical; TRUE, probabilities p given log(p), log density returned. lower.tail logical; TRUE (default), probabilities P[X <= x], otherwise, P[X > x]. p vector probabilities. n number observations. length(n) > 1, length taken number required. start numeric scalar; delayed entry time. random deviates left truncated start time.","code":""},{"path":"https://chjackson.github.io/msm/reference/pexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exponential distribution with piecewise-constant rate — pexp","text":"dpexp gives density, ppexp gives distribution function, qpexp gives quantile function, rpexp generates random deviates.","code":""},{"path":"https://chjackson.github.io/msm/reference/pexp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exponential distribution with piecewise-constant rate — pexp","text":"Consider exponential distribution rates \\(r_1, \\ldots, \\)\\( r_n\\) changing times \\(t_1, \\ldots, t_n\\), \\(t_1 = 0\\). Suppose \\(t_k\\) maximum \\(t_i\\) \\(t_i < x\\).  density distribution \\(x > 0\\) \\(f(x)\\) \\(k = 1\\), $$\\prod_{=1}^k (1 - F(t_{} - t_{-1}, r_i)) f(x - t_{k}, r_{k})$$ k > 1. \\(F()\\) \\(f()\\) distribution density functions standard exponential distribution. rate length 1, just standard exponential distribution.  Therefore, example, dpexp(x), arguments, simply equivalent dexp(x). rpexp used msm package, simulate Markov processes piecewise-constant intensities depending time-dependent covariates.  functions merely provided completion, optimized numerical stability speed.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/pexp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Exponential distribution with piecewise-constant rate — pexp","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/pexp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exponential distribution with piecewise-constant rate — pexp","text":"","code":"x <- seq(0.1, 50, by=0.1) rate <- c(0.1, 0.2, 0.05, 0.3) t <- c(0, 10, 20, 30) ## standard exponential distribution plot(x, dexp(x, 0.1), type=\"l\") ## distribution with piecewise constant rate lines(x, dpexp(x, rate, t), type=\"l\", lty=2)  ## standard exponential distribution plot(x, pexp(x, 0.1), type=\"l\") ## distribution with piecewise constant rate lines(x, ppexp(x, rate, t), type=\"l\", lty=2)"},{"path":"https://chjackson.github.io/msm/reference/phasemeans.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters of phase-type models in mixture form — phasemeans.msm","title":"Parameters of phase-type models in mixture form — phasemeans.msm","text":"Parameters fitted two-phase models, mixture model parameterisation.","code":""},{"path":"https://chjackson.github.io/msm/reference/phasemeans.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters of phase-type models in mixture form — phasemeans.msm","text":"","code":"phasemeans.msm(   x,   covariates = \"mean\",   ci = c(\"none\", \"normal\", \"bootstrap\"),   cl = 0.95,   B = 1000,   cores = NULL )"},{"path":"https://chjackson.github.io/msm/reference/phasemeans.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters of phase-type models in mixture form — phasemeans.msm","text":"x fitted multi-state model, returned msm. covariates Covariate values, see qmatrix.msm. ci \"none\" (default) confidence intervals calculated.  Otherwise \"normal\", \"boot\" described qmatrix.msm. cl Width symmetric confidence interval, relative 1. B Number bootstrap replicates, number normal simulations distribution MLEs. cores Number cores use bootstrapping using parallel processing. See boot.msm details.","code":""},{"path":"https://chjackson.github.io/msm/reference/phasemeans.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters of phase-type models in mixture form — phasemeans.msm","text":"Matrix one row state two-phase distribution, three columns: short-stay mean, long-stay mean long-stay probability.  functions transition intensities expanded hidden Markov model, defined d2phase.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/phasemeans.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameters of phase-type models in mixture form — phasemeans.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots of multi-state models — plot.msm","title":"Plots of multi-state models — plot.msm","text":"produces plot expected probability survival time, transient state. Survival defined entering absorbing state.","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots of multi-state models — plot.msm","text":"","code":"# S3 method for class 'msm' plot(   x,   from = NULL,   to = NULL,   range = NULL,   covariates = \"mean\",   legend.pos = NULL,   xlab = \"Time\",   ylab = \"Fitted survival probability\",   lwd = 1,   ... )"},{"path":"https://chjackson.github.io/msm/reference/plot.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots of multi-state models — plot.msm","text":"x Output msm, representing fitted multi-state model object. States consider survival. Defaults complete set transient states. Absorbing state consider. Defaults highest-labelled absorbing state. range Vector two elements, giving range times plot . covariates Covariate values evaluate expected probabilities.  can either : string \"mean\", denoting means covariates data (default), number 0, indicating covariates set zero, list values, optional names. example list (60, 1) order list follows order covariates originally given model formula, named list, list (age = 60, sex = 1) legend.pos Vector \\(x\\) \\(y\\) position, respectively, legend. xlab x axis label. ylab y axis label. lwd Line width. See par. ... arguments passed generic plot lines functions.","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots of multi-state models — plot.msm","text":"Note function relevant models absorbing states, models msm can transition structure necessarily absorbing state.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/plot.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots of multi-state models — plot.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.prevalence.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of observed and expected prevalences — plot.prevalence.msm","title":"Plot of observed and expected prevalences — plot.prevalence.msm","text":"Provides rough indication goodness fit multi-state model, estimating observed numbers individuals occupying state series times, plotting forecasts fitted model, state.  Observed prevalences indicated solid lines, expected prevalences dashed lines.","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.prevalence.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of observed and expected prevalences — plot.prevalence.msm","text":"","code":"# S3 method for class 'prevalence.msm' plot(   x,   mintime = NULL,   maxtime = NULL,   timezero = NULL,   initstates = NULL,   interp = c(\"start\", \"midpoint\"),   censtime = Inf,   subset = NULL,   covariates = \"population\",   misccovariates = \"mean\",   piecewise.times = NULL,   piecewise.covariates = NULL,   xlab = \"Times\",   ylab = \"Prevalence (%)\",   lwd.obs = 1,   lwd.exp = 1,   lty.obs = 1,   lty.exp = 2,   col.obs = \"blue\",   col.exp = \"red\",   legend.pos = NULL,   ... )"},{"path":"https://chjackson.github.io/msm/reference/plot.prevalence.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of observed and expected prevalences — plot.prevalence.msm","text":"x fitted multi-state model produced msm. mintime Minimum time compute observed expected prevalences states. maxtime Maximum time compute observed expected prevalences states. timezero Initial time Markov process. Expected values forecasted . Defaults minimum observation times given data. initstates Optional vector length number states. Gives numbers individuals occupying state initial time, used forecasting expected prevalences.  default observed data.  add actual number people study start. interp Interpolation method observed states, see prevalence.msm. censtime Subject-specific maximum follow-times, see prevalence.msm. subset Vector subject identifiers calculated observed prevalences . covariates Covariate values forecast expected state occupancy.  See prevalence.msm — function runs slowly, may continuous covariates, replace covariates=\"population\" covariates=\"mean\". misccovariates (Misclassification models ) Values covariates misclassification probability matrix. See prevalence.msm. piecewise.times Times piecewise-constant intensities change. See prevalence.msm. piecewise.covariates Covariates piecewise-constant intensities depend. See prevalence.msm. xlab x axis label. ylab y axis label. lwd.obs Line width observed prevalences. See par. lwd.exp Line width expected prevalences. See par. lty.obs Line type observed prevalences. See par. lty.exp Line type expected prevalences. See par. col.obs Line colour observed prevalences. See par. col.exp Line colour expected prevalences. See par. legend.pos Vector \\(x\\) \\(y\\) position, respectively, legend. ... arguments passed generic plot function.","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.prevalence.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of observed and expected prevalences — plot.prevalence.msm","text":"See prevalence.msm details assumptions underlying method. Observed prevalences plotted solid line, expected prevalences dotted line.","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.prevalence.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot of observed and expected prevalences — plot.prevalence.msm","text":"Gentleman, R.C., Lawless, J.F., Lindsey, J.C. Yan, P. Multi-state Markov models analysing incomplete disease history data illustrations HIV disease.  Statistics Medicine (1994) 13(3): 805–821.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/plot.survfit.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot empirical and fitted survival curves — plot.survfit.msm","title":"Plot empirical and fitted survival curves — plot.survfit.msm","text":"Plot Kaplan-Meier estimate survival probability compare fitted survival probability msm model.","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.survfit.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot empirical and fitted survival curves — plot.survfit.msm","text":"","code":"# S3 method for class 'survfit.msm' plot(   x,   from = 1,   to = NULL,   range = NULL,   covariates = \"mean\",   interp = c(\"start\", \"midpoint\"),   ci = c(\"none\", \"normal\", \"bootstrap\"),   B = 100,   legend.pos = NULL,   xlab = \"Time\",   ylab = \"Survival probability\",   lty = 1,   lwd = 1,   col = \"red\",   lty.ci = 2,   lwd.ci = 1,   col.ci = \"red\",   mark.time = TRUE,   col.surv = \"blue\",   lty.surv = 2,   lwd.surv = 1,   survdata = FALSE,   ... )"},{"path":"https://chjackson.github.io/msm/reference/plot.survfit.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot empirical and fitted survival curves — plot.survfit.msm","text":"x Output msm, representing fitted multi-state model object. Non-absorbing state consider survival.  Defaults state 1.  fitted probabilities calculated transition probabilities state .  empirical survival curve plots survival first observation (exists) first entry time . Absorbing state consider. Defaults highest-labelled absorbing state. range Vector two elements, giving range times plot . covariates Covariate values evaluate expected probabilities.  can either : string \"mean\", denoting means covariates data (default), number 0, indicating covariates set zero, list values, optional names. example list (60, 1) order list follows order covariates originally given model formula, named list, list (age = 60, sex = 1) note empirical curve plotted full population.  consider subsets empirical curve, set survdata=TRUE extract survival data build survival plot hand using plot.survfit. interp interp=\"start\" (default) entry time absorbing state assumed time first observed data. interp=\"midpoint\" entry time absorbing state assumed halfway time first observed previous observation time. generally reasonable \"progressive\" models observations arbitrary times. ci \"none\" (default) confidence intervals plotted.  \"normal\" \"bootstrap\", confidence intervals plotted based respective method pmatrix.msm. computationally-intensive, since intervals must computed series times. B Number bootstrap normal replicates confidence interval.  default 100 rather usual 1000, since plots rough diagnostic purposes. legend.pos Vector \\(x\\) \\(y\\) position, respectively, legend. xlab x axis label. ylab y axis label. lty Line type fitted curve. See par. lwd Line width fitted curve. See par. col Colour fitted curve. See par. lty.ci Line type fitted curve confidence limits. See par. lwd.ci Line width fitted curve confidence limits. See par. col.ci Colour fitted curve confidence limits. See par. mark.time Mark empirical survival curve censoring point, see lines.survfit. col.surv Colour empirical survival curve, passed lines.survfit. See par. lty.surv Line type empirical survival curve, passed lines.survfit. See par. lwd.surv Line width empirical survival curve, passed lines.survfit. See par. survdata Set TRUE return survival data frame constructed plotting empirical curve.  can used constructing survival plots hand using plot.survfit. ... arguments passed plot function draws fitted curve, lines.survfit function draws empirical curve.","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.survfit.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot empirical and fitted survival curves — plot.survfit.msm","text":"data represent observations process arbitrary times, first occurrence absorbing state data usually greater actual first transition time state.  Therefore Kaplan-Meier estimate survival probability overestimate. method Turnbull (1976) used give non-parametric estimate time interval-censored event, compared equivalent estimate multi-state model.  implemented CRAN package interval (Fay Shaw 2010). currently handles time-homogeneous models.","code":""},{"path":"https://chjackson.github.io/msm/reference/plot.survfit.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot empirical and fitted survival curves — plot.survfit.msm","text":"Turnbull, B. W. (1976) empirical distribution function arbitrarily grouped, censored truncated data. J. R. Statist. Soc. B 38, 290-295. Fay, MP Shaw, PA (2010). Exact Asymptotic Weighted Logrank Tests Interval Censored Data: interval R package. Journal Statistical Software. http://www.jstatsoft.org/v36/ i02/. 36 (2):1-34.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/plotprog.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Kaplan Meier estimates of incidence — plotprog.msm","title":"Kaplan Meier estimates of incidence — plotprog.msm","text":"Compute plot Kaplan-Meier estimates probability successive state occurred yet.","code":""},{"path":"https://chjackson.github.io/msm/reference/plotprog.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kaplan Meier estimates of incidence — plotprog.msm","text":"","code":"plotprog.msm(   formula,   subject,   data,   legend.pos = NULL,   xlab = \"Time\",   ylab = \"1 - incidence probability\",   lwd = 1,   xlim = NULL,   mark.time = TRUE,   ... )"},{"path":"https://chjackson.github.io/msm/reference/plotprog.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kaplan Meier estimates of incidence — plotprog.msm","text":"formula formula giving vectors containing observed states corresponding observation times. example, state ~ time Observed states set 1, ...{}, n, n number states. subject Vector subject identification numbers data specified formula. missing, observations assumed subject. must sorted observations subject adjacent. data optional data frame variables represented state, time subject can found. legend.pos Vector \\(x\\) \\(y\\) position, respectively, legend. xlab x axis label. ylab y axis label. lwd Line width. See par. xlim x axis limits, e.g. c(0,10) axis ranging 0 10. Default range observation times. mark.time Mark empirical survival curve censoring point, see lines.survfit. ... arguments passed plot lines.survfit functions.","code":""},{"path":"https://chjackson.github.io/msm/reference/plotprog.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kaplan Meier estimates of incidence — plotprog.msm","text":"data represent observations process arbitrary times, first occurrence state data usually greater actual first transition time state.  Therefore probabilities plotted plotprog.msm overestimates.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/pmatrix.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition probability matrix — pmatrix.msm","title":"Transition probability matrix — pmatrix.msm","text":"Extract estimated transition probability matrix fitted continuous-time multi-state model given time interval, given set covariate values.","code":""},{"path":"https://chjackson.github.io/msm/reference/pmatrix.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition probability matrix — pmatrix.msm","text":"","code":"pmatrix.msm(   x = NULL,   t = 1,   t1 = 0,   covariates = \"mean\",   ci = c(\"none\", \"normal\", \"bootstrap\"),   cl = 0.95,   B = 1000,   cores = NULL,   qmatrix = NULL,   ... )"},{"path":"https://chjackson.github.io/msm/reference/pmatrix.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition probability matrix — pmatrix.msm","text":"x fitted multi-state model, returned msm. t time interval estimate transition probabilities , default one unit. t1 starting time interval. Used models x piecewise-constant intensities fitted using pci option msm. probabilities computed interval [t1, t1+t]. covariates covariate values estimate transition probabilities.  can either : string \"mean\", denoting means covariates data (default), number 0, indicating covariates set zero, list values, optional names. example list (60, 1) order list follows order covariates originally given model formula, named list, list (age = 60, sex = 1) covariates specified others, missing ones default zero. time-inhomogeneous models fitted using pci option msm, \"covariates\" include specified using covariates argument msm, exclude artificial covariates representing time period. time-inhomogeneous models fitted \"hand\" using time-dependent covariate covariates argument msm, function pmatrix.piecewise.msm used calculate transition probabilities. ci \"normal\", calculate confidence interval transition probabilities simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects, calculating resulting transition probability matrix replicate. See, e.g. Mandel (2013) discussion approach. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. \"none\" (default) confidence interval calculated. cl Width symmetric confidence interval, relative 1. B Number bootstrap replicates, number normal simulations distribution MLEs cores Number cores use bootstrapping using parallel processing. See boot.msm details. qmatrix transition intensity matrix.  Either fitted model x must supplied.  confidence intervals available qmatrix supplied. ... Optional arguments passed MatrixExp control method computing matrix exponential.","code":""},{"path":"https://chjackson.github.io/msm/reference/pmatrix.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition probability matrix — pmatrix.msm","text":"matrix estimated transition probabilities \\(P(t)\\) given time.  Rows correspond \"-state\" columns \"-state\". ci=\"normal\" ci=\"bootstrap\", pmatrix.msm returns list components estimates ci, estimates matrix estimated transition probabilities, ci list two matrices containing upper lower confidence limits.","code":""},{"path":"https://chjackson.github.io/msm/reference/pmatrix.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transition probability matrix — pmatrix.msm","text":"continuous-time homogeneous Markov process transition intensity matrix \\(Q\\), probability occupying state \\(s\\) time \\(u + t\\) conditionally occupying state \\(r\\) time \\(u\\) given \\((r,s)\\) entry matrix \\(P(t) = \\exp(tQ)\\), \\(\\exp()\\) matrix exponential. non-homogeneous processes, covariates hence transition intensity matrix \\(Q\\) piecewise-constant time, transition probability matrix calculated product matrices series intervals, explained pmatrix.piecewise.msm. pmatrix.piecewise.msm function necessary models fitted using time-dependent covariate covariates argument msm. time-inhomogeneous models fitted using \"pci\", pmatrix.msm can used, arguments t t1, calculate transition probabilities time period.","code":""},{"path":"https://chjackson.github.io/msm/reference/pmatrix.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transition probability matrix — pmatrix.msm","text":"Mandel, M. (2013). \"Simulation based confidence intervals functions complicated derivatives.\" American Statistician 67(2):76-81","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/pmatrix.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transition probability matrix — pmatrix.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk.","code":""},{"path":"https://chjackson.github.io/msm/reference/pmatrix.piecewise.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition probability matrix for processes with piecewise-constant intensities — pmatrix.piecewise.msm","title":"Transition probability matrix for processes with piecewise-constant intensities — pmatrix.piecewise.msm","text":"Extract estimated transition probability matrix fitted non-time-homogeneous multi-state model given time interval.  generalisation pmatrix.msm models time-dependent covariates.  Note pmatrix.msm sufficient calculate transition probabilities time-inhomogeneous models fitted using pci argument msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/pmatrix.piecewise.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition probability matrix for processes with piecewise-constant intensities — pmatrix.piecewise.msm","text":"","code":"pmatrix.piecewise.msm(   x = NULL,   t1,   t2,   times,   covariates = NULL,   ci = c(\"none\", \"normal\", \"bootstrap\"),   cl = 0.95,   B = 1000,   cores = NULL,   qlist = NULL,   ... )"},{"path":"https://chjackson.github.io/msm/reference/pmatrix.piecewise.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition probability matrix for processes with piecewise-constant intensities — pmatrix.piecewise.msm","text":"x fitted multi-state model, returned msm. non-homogeneous model, whose transition intensity matrix depends time-dependent covariate. t1 start time interval estimate transition probabilities . t2 end time interval estimate transition probabilities . times Cut points transition intensity matrix changes. covariates list number components one greater length times.  component list specified way covariates argument pmatrix.msm.  components correspond covariate values intervals (t1, times[1]], (times[1], times[2]], ..., (times[length(times)], t2] (assuming elements times interval (t1, t2)). ci \"normal\", calculate confidence interval transition probabilities simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects, calculating resulting transition probability matrix replicate. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. \"none\" (default) confidence interval calculated. cl Width symmetric confidence interval, relative 1. B Number bootstrap replicates, number normal simulations distribution MLEs cores Number cores use bootstrapping using parallel processing. See boot.msm details. qlist list transition intensity matrices, length one greater length times.  Either fitted model x must supplied.  confidence intervals available (just) qlist supplied. ... Optional arguments passed MatrixExp control method computing matrix exponential.","code":""},{"path":"https://chjackson.github.io/msm/reference/pmatrix.piecewise.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition probability matrix for processes with piecewise-constant intensities — pmatrix.piecewise.msm","text":"matrix estimated transition probabilities \\(P(t)\\) time interval [t1, tn].  , probabilities occupying state \\(s\\) time \\(t_n\\) conditionally occupying state \\(r\\) time \\(t_1\\).  Rows correspond \"-state\" columns \"-state\".","code":""},{"path":"https://chjackson.github.io/msm/reference/pmatrix.piecewise.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transition probability matrix for processes with piecewise-constant intensities — pmatrix.piecewise.msm","text":"Suppose multi-state model fitted, transition intensity matrix \\(Q(x(t))\\) modelled terms time-dependent covariates \\(x(t)\\).  transition probability matrix \\(P(t_1, t_n)\\) time interval \\((t_1, \\)\\( t_n)\\) calculated estimated intensity matrix \\(\\exp((t_n - t_1) Q)\\), \\(Q\\) varies within interval \\(t_1, t_n\\).  However, covariates piecewise-constant, can approximated piecewise-constant, can calculate \\(P(t_1, t_n)\\) multiplying together individual matrices \\(P(t_i, \\)\\( t_{+1}) = \\exp((t_{+1} - t_i) Q)\\), calculated intervals Q constant: $$P(t_1, t_n) = P(t_1, t_2) P(t_2, t_3)\\ldots P(t_{n-1}, $$$$ t_n)$$","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/pmatrix.piecewise.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transition probability matrix for processes with piecewise-constant intensities — pmatrix.piecewise.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/pmatrix.piecewise.msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition probability matrix for processes with piecewise-constant intensities — pmatrix.piecewise.msm","text":"","code":"if (FALSE) { # \\dontrun{ ## In a clinical study, suppose patients are given a placebo in the ## first 5 weeks, then they begin treatment 1 at 5 weeks, and ## a combination of treatments 1 and 2 from 10 weeks. ## Suppose a multi-state model x has been fitted for the patients' ## progress, with treat1 and treat2 as time dependent covariates.  ## Cut points for when treatment covariate changes times <- c(0, 5, 10)  ## Indicators for which treatments are active in the four intervals ## defined by the three cut points covariates <- list( list (treat1=0, treat2=0), list (treat1=0, treat2=0), list(treat1=1, treat2=0), list(treat1=1, treat2=1) )  ## Calculate transition probabilities from the start of the study to 15 weeks pmatrix.piecewise.msm(x, 0, 15, times, covariates) } # }"},{"path":"https://chjackson.github.io/msm/reference/pnext.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of each state being next — pnext.msm","title":"Probability of each state being next — pnext.msm","text":"Compute matrix probability state \\(s\\) next state process state \\(r\\).  Together mean sojourn times state (sojourn.msm), fully define continuous-time Markov model.","code":""},{"path":"https://chjackson.github.io/msm/reference/pnext.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of each state being next — pnext.msm","text":"","code":"pnext.msm(   x,   covariates = \"mean\",   ci = c(\"normal\", \"bootstrap\", \"delta\", \"none\"),   cl = 0.95,   B = 1000,   cores = NULL )"},{"path":"https://chjackson.github.io/msm/reference/pnext.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of each state being next — pnext.msm","text":"x fitted multi-state model, returned msm. covariates covariate values estimate intensities. can either : string \"mean\", denoting means covariates data (default), number 0, indicating covariates set zero, list values, optional names. example list (60, 1) order list follows order covariates originally given model formula, named list, list (age = 60, sex = 1) ci \"normal\" (default) calculate confidence interval simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects, transforming. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. \"delta\" confidence intervals calculated based delta method SEs log rates, recommended since may respect constraint probabilities less one. cl Width symmetric confidence interval present.  Defaults 0.95. B Number bootstrap replicates, number normal simulations distribution MLEs. cores Number cores use bootstrapping using parallel processing. See boot.msm details.","code":""},{"path":"https://chjackson.github.io/msm/reference/pnext.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of each state being next — pnext.msm","text":"matrix probabilities next move process state \\(r\\) (rows) state \\(s\\) (columns).","code":""},{"path":"https://chjackson.github.io/msm/reference/pnext.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probability of each state being next — pnext.msm","text":"continuous-time Markov process state \\(r\\), probability next state \\(s\\) \\(-q_{rs} / q_{rr}\\), \\(q_{rs}\\) transition intensity (qmatrix.msm). continuous-time Markov model fully specified probabilities together mean sojourn times \\(-1/q_{rr}\\) state \\(r\\). gives intuitively meaningful description model intensity matrix. Remember msm deals continuous-time, discrete-time models, probability observing state \\(s\\) fixed time future.  probabilities given pmatrix.msm.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/pnext.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Probability of each state being next — pnext.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/ppass.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Passage probabilities — ppass.msm","title":"Passage probabilities — ppass.msm","text":"Probabilities visited state particular time continuous time Markov model.","code":""},{"path":"https://chjackson.github.io/msm/reference/ppass.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Passage probabilities — ppass.msm","text":"","code":"ppass.msm(   x = NULL,   qmatrix = NULL,   tot,   start = \"all\",   covariates = \"mean\",   piecewise.times = NULL,   piecewise.covariates = NULL,   ci = c(\"none\", \"normal\", \"bootstrap\"),   cl = 0.95,   B = 1000,   cores = NULL,   ... )"},{"path":"https://chjackson.github.io/msm/reference/ppass.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Passage probabilities — ppass.msm","text":"x fitted multi-state model, returned msm. qmatrix Instead x, can simply supply transition intensity matrix qmatrix. tot Finite time forecast passage probabilites . start Starting state (integer).  default (start=\"\"), return matrix one row starting state. Alternatively, can used obtain passage probabilities set states, rather single states.  achieve , state set vector weights, length equal number states model.  weights proportional probability starting states desired set, weights zero supplied states.  function calculate weighted average passage probabilities corresponding states. covariates Covariate values defining intensity matrix fitted model x, supplied qmatrix.msm. piecewise.times models time-dependent covariates, defines cut points time transition intensity matrix changes.  required models fitted pci option msm, handled automatically. piecewise.covariates models time-dependent covariates, list covariates time period defined piecewise.times, format documented covariates argument pmatrix.piecewise.msm.  required models fitted pci option msm, handled automatically. ci \"normal\", calculate confidence interval simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. \"none\" (default) confidence interval calculated. cl Width symmetric confidence interval, relative 1. B Number bootstrap replicates. cores Number cores use bootstrapping using parallel processing. See boot.msm details. ... Arguments pass MatrixExp.","code":""},{"path":"https://chjackson.github.io/msm/reference/ppass.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Passage probabilities — ppass.msm","text":"matrix whose \\(r, s\\) entry probability visited state \\(s\\) least time \\(t\\), given state time \\(0\\) \\(r\\).  diagonal entries 1.","code":""},{"path":"https://chjackson.github.io/msm/reference/ppass.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Passage probabilities — ppass.msm","text":"passage probabilities state \\(s\\) computed setting \\(s\\)th row transition intensity matrix \\(Q\\) zero, giving intensity matrix \\(Q^*\\) simplified model structure state \\(s\\) absorbing.  probabilities passage equivalent row \\(s\\) transition probability matrix \\(Exp(tQ^*)\\) (pmatrix.msm) simplified model \\(t=\\)tot. time-inhomogenous models, process generalised calculating intensity matrix time period, zeroing appropriate row , calculating multiplying transition probability matrices pmatrix.piecewise.msm. Note different probability occupying state exactly time \\(t\\), given pmatrix.msm.  passage probability allows possibility visited state \\(t\\), occupying different state \\(t\\). mean passage distribution expected first passage time, efpt.msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/ppass.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Passage probabilities — ppass.msm","text":"Norris, J. R. (1997) Markov Chains. Cambridge University Press.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/ppass.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Passage probabilities — ppass.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk contributions Jon Fintzi.","code":""},{"path":"https://chjackson.github.io/msm/reference/ppass.msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Passage probabilities — ppass.msm","text":"","code":"Q <- rbind(c(-0.5, 0.25, 0, 0.25), c(0.166, -0.498, 0.166, 0.166),            c(0, 0.25, -0.5, 0.25), c(0, 0, 0, 0))  ## ppass[1,2](t) converges to 0.5 with t, since given in state 1, the ## probability of going to the absorbing state 4 before visiting state ## 2 is 0.5, and the chance of still being in state 1 at t decreases.  ppass.msm(qmatrix=Q, tot=2) #>            [,1]      [,2]       [,3]      [,4] #> [1,] 1.00000000 0.3160603 0.04444417 0.3745829 #> [2,] 0.21468299 1.0000000 0.21468299 0.3091714 #> [3,] 0.04444417 0.3160603 1.00000000 0.3745829 #> [4,] 0.00000000 0.0000000 0.00000000 1.0000000 ppass.msm(qmatrix=Q, tot=20) #>           [,1]      [,2]      [,3]      [,4] #> [1,] 1.0000000 0.4999773 0.1990605 0.9862716 #> [2,] 0.3992305 1.0000000 0.3992305 0.9841246 #> [3,] 0.1990605 0.4999773 1.0000000 0.9862716 #> [4,] 0.0000000 0.0000000 0.0000000 1.0000000 ppass.msm(qmatrix=Q, tot=100) #>      [,1] [,2] [,3] [,4] #> [1,]  1.0  0.5  0.2    1 #> [2,]  0.4  1.0  0.4    1 #> [3,]  0.2  0.5  1.0    1 #> [4,]  0.0  0.0  0.0    1  Q <- Q[1:3,1:3]; diag(Q) <- 0; diag(Q) <- -rowSums(Q)  ## Probability of about 1/2 of visiting state 3 by time 10.5, the ## median first passage time  ppass.msm(qmatrix=Q, tot=10.5) #>           [,1]      [,2]      [,3] #> [1,] 1.0000000 0.9275602 0.5000467 #> [2,] 0.6646619 1.0000000 0.6646619 #> [3,] 0.5000467 0.9275602 1.0000000  ## Mean first passage time from state 2 to state 3 is 10.02: similar ## to the median  efpt.msm(qmatrix=Q, tostate=3) #> [1] 14.0241 10.0241  0.0000"},{"path":"https://chjackson.github.io/msm/reference/prevalence.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Tables of observed and expected prevalences — prevalence.msm","title":"Tables of observed and expected prevalences — prevalence.msm","text":"provides rough indication goodness fit multi-state model, estimating observed numbers individuals occupying state series times, comparing forecasts fitted model.","code":""},{"path":"https://chjackson.github.io/msm/reference/prevalence.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tables of observed and expected prevalences — prevalence.msm","text":"","code":"prevalence.msm(   x,   times = NULL,   timezero = NULL,   initstates = NULL,   covariates = \"population\",   misccovariates = \"mean\",   piecewise.times = NULL,   piecewise.covariates = NULL,   ci = c(\"none\", \"normal\", \"bootstrap\"),   cl = 0.95,   B = 1000,   cores = NULL,   interp = c(\"start\", \"midpoint\"),   censtime = Inf,   subset = NULL,   plot = FALSE,   ... )"},{"path":"https://chjackson.github.io/msm/reference/prevalence.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tables of observed and expected prevalences — prevalence.msm","text":"x fitted multi-state model produced msm. times Series times compute observed expected prevalences states. timezero Initial time Markov process. Expected values forecasted . Defaults minimum observation times given data. initstates Optional vector length number states. Gives numbers individuals occupying state initial time, used forecasting expected prevalences.  default observed data.  add actual number people study start. covariates Covariate values forecast expected state occupancy.  default covariates=\"population\", expected prevalences produced summing model predictions covariates observed original data, fair comparison observed prevalences.  may slow, particularly continuous covariates. Predictions fixed covariates can obtained supplying covariate values standard way, qmatrix.msm. Therefore covariates=\"population\" slow, using mean observed values covariates=\"mean\" may give reasonable approximation. argument ignored piecewise.times specified. mixture time-constant time-dependent covariates, values covariates supplied piecewise.covariates. misccovariates (Misclassification models ) Values covariates misclassification probability matrix converting expected true expected misclassified states.  Ignored covariates=\"population\", otherwise defaults mean values covariates data set. piecewise.times Times piecewise-constant intensities change. See pmatrix.piecewise.msm specify .  Ignored covariates=\"population\".  required time-inhomogeneous models specified using explicit time-dependent covariates, used models specified using \"pci\". piecewise.covariates Covariates piecewise-constant intensities depend. See pmatrix.piecewise.msm specify . Ignored covariates=\"population\". ci \"normal\", calculate confidence interval expected prevalences simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects, calculating expected prevalences replicate. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. \"none\" (default) confidence interval calculated. cl Width symmetric confidence interval, relative 1 B Number bootstrap replicates cores Number cores use bootstrapping using parallel processing. See boot.msm details. interp Suppose individual observed states \\(S_{r-1}\\) \\(S_r\\) two consecutive times \\(t_{r-1}\\) \\(t_r\\), want estimate 'observed' prevalences time \\(t\\) \\(t_{r-1}\\) \\(t_r\\). interp=\"start\", individuals assumed state \\(S_{r-1}\\) time \\(t\\), state \\(t_{r-1}\\). interp=\"midpoint\" \\(t <= (t_{r-1} + t_r) / 2\\), midpoint \\(t_{r-1}\\) \\(t_r\\), state \\(t\\) assumed \\(S_{r-1}\\), otherwise \\(S_{r}\\). generally reasonable \"progressive\" models. censtime Adjustment observed prevalences account limited follow-data. time greater censtime patient reached absorbing state, subject removed risk set.  example, patients died observed time, avoids overestimating proportion people dead later times. can supplied single value, vector one element per subject (subset taken), order original data.  vector also includes subjects complete data, thus excludes example subjects one observation (thus observed transitions), subjects every observation missing values.  (Note, help construct , complete data used model fit can accessed model.frame(x), x fitted model object) ignored less subject's maximum observation time. subset Subset subjects calculate observed prevalences . plot Generate plot observed expected prevalences. See plot.prevalence.msm ... arguments pass plot.prevalence.msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/prevalence.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tables of observed and expected prevalences — prevalence.msm","text":"list matrices, components: Observed Table observed numbers individuals state time Observed percentages Corresponding percentage individuals risk time. Expected Table corresponding expected numbers. Expected percentages Corresponding percentage individuals risk time. ci.boot = TRUE, component Expected list components estimates ci.estimates matrix expected prevalences, ci list two matrices, containing confidence limits. component Expected percentages similar format.","code":""},{"path":"https://chjackson.github.io/msm/reference/prevalence.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tables of observed and expected prevalences — prevalence.msm","text":"fitted transition probability matrix used forecast expected prevalences state occupancy initial time.  produce expected number state \\(j\\) time \\(t\\) start, number individuals observation time \\(t\\) (including died, lost follow-) multiplied product proportion individuals state initial time transition probability matrix time interval \\(t\\).  proportion individuals state \"initial\" time estimated, necessary, way observed prevalences. misclassification models (fitted using ematrix), aims assess fit full model observed states.  , combined Markov progression model true states misclassification model. Thus, expected prevalences true states estimated assumed proportion occupying state initial time using fitted transition probabiliy matrix. vector expected prevalences true states multiplied fitted misclassification probability matrix obtain expected prevalences observed states. general hidden Markov models, observed state taken predicted underlying state Viterbi algorithm (viterbi.msm).  goodness fit states underlying Markov model tested. model, censored states, replaced imputed values highest probability Viterbi algorithm order calculate observed state prevalences. example approach, see Gentleman et al. (1994).","code":""},{"path":"https://chjackson.github.io/msm/reference/prevalence.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tables of observed and expected prevalences — prevalence.msm","text":"Gentleman, R.C., Lawless, J.F., Lindsey, J.C. Yan, P. Multi-state Markov models analysing incomplete disease history data illustrations HIV disease.  Statistics Medicine (1994) 13(3): 805–821. Titman, .C., Sharples, L. D.  Model diagnostics multi-state models. Statistical Methods Medical Research (2010) 19(6):621-651.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/prevalence.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tables of observed and expected prevalences — prevalence.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/print.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a fitted msm model object — print.msm","title":"Print a fitted msm model object — print.msm","text":"Print fitted msm model object","code":""},{"path":"https://chjackson.github.io/msm/reference/print.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a fitted msm model object — print.msm","text":"","code":"# S3 method for class 'msm' print(x, covariates = NULL, digits = 4, ...)  printnew.msm(x, covariates = NULL, digits = 4, ...)"},{"path":"https://chjackson.github.io/msm/reference/print.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a fitted msm model object — print.msm","text":"x Output msm, representing fitted multi-state model object. covariates Covariates print “baseline” transition intensities misclassification probabilities. See qmatrix.msm details. digits Minimum number significant digits, passed format. Defaults 4. ... arguments passed format.","code":""},{"path":"https://chjackson.github.io/msm/reference/print.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a fitted msm model object — print.msm","text":"object returned print.msm numeric matrix one column estimate confidence limit intensities covariates, arrangement printed, underlying numbers full precision.  results formatted printing stored \"formatted\" attribute object, character matrix. can alternatively produced msm.form.qoutput, printing side-effect. msm.form.eoutput produces arrangement misclassification probabilities instead intensities.","code":""},{"path":"https://chjackson.github.io/msm/reference/print.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a fitted msm model object — print.msm","text":"new method formatting msm objects printing.  old method based printing lists matrices. produced lot wasted space parameters zero, difficult match corresponding numbers matrices. new method presents transition intensities covariate effects single compact table, likewise misclassification matrices. Also old method, covariate effects presented log hazard ratios log odds ratios.  log scale convenient mathematically, unnatural interpret.  new method presents hazard ratios covariates transition intensities odds ratios misclassification probabilities. printnew.msm alias print.msm.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/print.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print a fitted msm model object — print.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/printold.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a fitted msm model object — printold.msm","title":"Print a fitted msm model object — printold.msm","text":"Print fitted msm model object (old format, msm 1.3.1 earlier)","code":""},{"path":"https://chjackson.github.io/msm/reference/printold.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a fitted msm model object — printold.msm","text":"","code":"printold.msm(x, ...)"},{"path":"https://chjackson.github.io/msm/reference/printold.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a fitted msm model object — printold.msm","text":"x Output msm, representing fitted multi-state model object. ... arguments passed format.","code":""},{"path":"https://chjackson.github.io/msm/reference/printold.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a fitted msm model object — printold.msm","text":"See print.msm better cleaner output format, explanation change.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/printold.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print a fitted msm model object — printold.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/psor.html","id":null,"dir":"Reference","previous_headings":"","what":"Psoriatic arthritis data — psor","title":"Psoriatic arthritis data — psor","text":"series observations grades psoriatic arthritis, indicated numbers damaged joints.","code":""},{"path":"https://chjackson.github.io/msm/reference/psor.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Psoriatic arthritis data — psor","text":"data frame containing 806 observations, representing visits psoriatic arthritis (PsA) clinic 305 patients.  rows grouped patient number ordered examination time. row represents examination contains additional covariates.","code":""},{"path":"https://chjackson.github.io/msm/reference/psor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Psoriatic arthritis data — psor","text":"Gladman, D. D. Farewell, V.T. (1999) Progression psoriatic arthritis: role time-varying clinical indicators.  J. Rheumatol. 26(11):2409-13","code":""},{"path":"https://chjackson.github.io/msm/reference/psor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Psoriatic arthritis data — psor","text":"","code":"## Four-state progression-only model with high effusion and low ## sedimentation rate as covariates on the progression rates.  High ## effusion is assumed to have the same effect on the 1-2, 2-3, and 3-4 ## progression rates, while low sedimentation rate has the same effect ## on the 1-2 and 2-3 intensities, but a different effect on the 3-4.   data(psor) #> Warning: data set ‘psor’ not found psor.q <- rbind(c(0,0.1,0,0),c(0,0,0.1,0),c(0,0,0,0.1),c(0,0,0,0)) psor.msm <- msm(state ~ months, subject=ptnum, data=psor,                  qmatrix = psor.q, covariates = ~ollwsdrt+hieffusn,                 constraint = list(hieffusn=c(1,1,1),ollwsdrt=c(1,1,2)),                 fixedpars=FALSE, control = list(REPORT=1,trace=2), method=\"BFGS\") #> initial  value 1184.216999  #> iter   2 value 1127.501356 #> iter   3 value 1122.654955 #> iter   4 value 1121.606113 #> iter   5 value 1120.763406 #> iter   6 value 1119.769934 #> iter   7 value 1116.747874 #> iter   8 value 1116.596341 #> iter   9 value 1114.972649 #> iter  10 value 1114.899884 #> iter  11 value 1114.899464 #> iter  11 value 1114.899461 #> iter  11 value 1114.899461 #> final  value 1114.899461  #> converged #> Used 38 function and 11 gradient evaluations qmatrix.msm(psor.msm) #>         State 1                    State 2                    #> State 1 -0.09594 (-0.1216,-0.0757)  0.09594 ( 0.0757, 0.1216) #> State 2 0                          -0.16431 (-0.2076,-0.1300) #> State 3 0                          0                          #> State 4 0                          0                          #>         State 3                    State 4                    #> State 1 0                          0                          #> State 2  0.16431 ( 0.1300, 0.2076) 0                          #> State 3 -0.25438 (-0.3396,-0.1905)  0.25438 ( 0.1905, 0.3396) #> State 4 0                          0                          sojourn.msm(psor.msm) #>         estimates        SE        L         U #> State 1 10.423724 1.2597644 8.225277 13.209771 #> State 2  6.086186 0.7266461 4.816349  7.690816 #> State 3  3.931084 0.5796054 2.944488  5.248254 hazard.msm(psor.msm) #> $ollwsdrt #>                          HR         L        U #> State 1 - State 2 0.5651903 0.3853452 0.828971 #> State 2 - State 3 0.5651903 0.3853452 0.828971 #> State 3 - State 4 1.6407662 0.8154000 3.301587 #>  #> $hieffusn #>                         HR        L        U #> State 1 - State 2 1.645956 1.148294 2.359299 #> State 2 - State 3 1.645956 1.148294 2.359299 #> State 3 - State 4 1.645956 1.148294 2.359299 #>"},{"path":"https://chjackson.github.io/msm/reference/qcmodel.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Developer documentation: model for covariates on transition intensities — qcmodel.object","title":"Developer documentation: model for covariates on transition intensities — qcmodel.object","text":"list representing model covariates transition intensities","code":""},{"path":"https://chjackson.github.io/msm/reference/qcmodel.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Developer documentation: model for covariates on transition intensities — qcmodel.object","text":"npars Number covariate effect parameters.  defined number covariates intensities (factors expanded contrasts) multiplied number allowed transitions model. Note msm called covariates set list different covariates different intensities, include covariate effects implicitly defined zero list.  information paramdata objects can used identify wich ones fixed zero. also includes timeperiod covariates time-inhomogeneous model defined pci option msm. ndpars Number distinct covariate effect parameters, npars, equality constraints applied. ncovs Number covariates intensities, factors expanded contrasts. constr List equality constraints covariate effects, supplied constraint argument msm. covlabels Names / labels covariates model matrix (see model.matrix.msm). inits Initial values covariate effects, vector formed covinits list supplied msm. covmeans Means covariates data (excluding data required fit model, observations missing data elements subjects' last observations).  includes means 0/1 factor contrasts well continuous covariates (historic reasons, may sensible).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/qgeneric.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to find quantiles of a distribution — qgeneric","title":"Generic function to find quantiles of a distribution — qgeneric","text":"Generic function find quantiles distribution, given equivalent probability distribution function.","code":""},{"path":"https://chjackson.github.io/msm/reference/qgeneric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to find quantiles of a distribution — qgeneric","text":"","code":"qgeneric(pdist, p, special = NULL, ...)"},{"path":"https://chjackson.github.io/msm/reference/qgeneric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to find quantiles of a distribution — qgeneric","text":"pdist Probability distribution function, example, pnorm normal distribution, must defined current workspace.  accept return vectorised parameters values.  also return correct values entire real line, example positive distribution pdist(x)==0 \\(x<0\\). p Vector probabilities find quantiles . special Vector character strings naming arguments distribution function vectorised . Used, example, rate t arguments qpexp. ... remaining arguments define parameters distribution pdist.  MUST named explicitly. may also contain standard arguments log.p (logical; default FALSE, TRUE, probabilities p given log(p)), lower.tail (logical; TRUE (default), probabilities P[X <= x] otherwise, P[X > x].). distribution bounded , contain arguments lbound ubound respectively, returned p 0 1 respectively.  Defaults -Inf Inf respectively.","code":""},{"path":"https://chjackson.github.io/msm/reference/qgeneric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to find quantiles of a distribution — qgeneric","text":"Vector quantiles distribution p.","code":""},{"path":"https://chjackson.github.io/msm/reference/qgeneric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function to find quantiles of a distribution — qgeneric","text":"function intended enable users define \"q\" functions new distributions, cases distribution function pdist available analytically, quantile function . works finding root equation \\(h(q) = pdist(q) - p = 0\\). Starting interval \\((-1, 1)\\), interval width expanded 50% \\(h()\\) opposite sign either end.  root found using uniroot. assumes suitably smooth, continuous distribution. identical function provided flexsurv package.","code":""},{"path":"https://chjackson.github.io/msm/reference/qgeneric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic function to find quantiles of a distribution — qgeneric","text":"Christopher Jackson <chris.jackson@mrc-bsu.cam.ac.uk>","code":""},{"path":"https://chjackson.github.io/msm/reference/qgeneric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function to find quantiles of a distribution — qgeneric","text":"","code":"qnorm(c(0.025, 0.975), 0, 1) #> [1] -1.959964  1.959964 qgeneric(pnorm, c(0.025, 0.975), mean=0, sd=1) # must name the arguments #> [1] -1.959964  1.959964"},{"path":"https://chjackson.github.io/msm/reference/qmatrix.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition intensity matrix — qmatrix.msm","title":"Transition intensity matrix — qmatrix.msm","text":"Extract estimated transition intensity matrix, corresponding standard errors, fitted multi-state model given set covariate values.","code":""},{"path":"https://chjackson.github.io/msm/reference/qmatrix.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition intensity matrix — qmatrix.msm","text":"","code":"qmatrix.msm(   x,   covariates = \"mean\",   sojourn = FALSE,   ci = c(\"delta\", \"normal\", \"bootstrap\", \"none\"),   cl = 0.95,   B = 1000,   cores = NULL )"},{"path":"https://chjackson.github.io/msm/reference/qmatrix.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition intensity matrix — qmatrix.msm","text":"x fitted multi-state model, returned msm. covariates covariate values estimate intensity matrix.  can either : string \"mean\", denoting means covariates data (default), number 0, indicating covariates set zero, list values, optional names. example list (60, 1) order list follows order covariates originally given model formula. clearly, named list, list (age = 60, sex = 1) covariates specified others, missing ones default zero. covariates=\"mean\", factor / categorical variables, mean 0/1 dummy variable factor level used, representing average values data, rather specific factor level. sojourn Set TRUE estimated sojourn times standard errors also returned. ci \"delta\" (default) confidence intervals calculated delta method, simple transformation Hessian simplest cases.  Normality log scale assumed. \"normal\", calculate confidence interval simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects, transforming. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. cl Width symmetric confidence interval present.  Defaults 0.95. B Number bootstrap replicates, number normal simulations distribution MLEs. cores Number cores use bootstrapping using parallel processing. See boot.msm details.","code":""},{"path":"https://chjackson.github.io/msm/reference/qmatrix.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition intensity matrix — qmatrix.msm","text":"list components: estimate Estimated transition intensity matrix. SE Corresponding approximate standard errors. L Lower confidence limits U Upper confidence limits ci=\"none\", qmatrix.msm just returns estimated transition intensity matrix. sojourn TRUE, extra components called sojourn, sojournSE, sojournL sojournU included, containing estimates, standard errors confidence limits, respectively, mean sojourn times transient state. default print method objects returned qmatrix.msm presents estimates confidence limits. present estimates standard errors, something like qmatrix.msm(x)[c(\"estimates\",\"SE\")]","code":""},{"path":"https://chjackson.github.io/msm/reference/qmatrix.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transition intensity matrix — qmatrix.msm","text":"Transition intensities covariate effects estimated log scale msm. covariance matrix estimated Hessian maximised log-likelihood. practically meaningful parameterisation continuous-time Markov model transition intensities \\(q_{rs}\\) terms mean sojourn times \\(-1 / q_{rr}\\) state \\(r\\) probabilities next move process state \\(r\\) state \\(s\\), \\(-q_{rs} / q_{rr}\\).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/qmatrix.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transition intensity matrix — qmatrix.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/qmodel.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Developer documentation: transition model structure object — qmodel.object","title":"Developer documentation: transition model structure object — qmodel.object","text":"list giving information structure states allowed transitions multi-state model, options likelihood calculation. Used internal computations, returned fitted msm model object.","code":""},{"path":"https://chjackson.github.io/msm/reference/qmodel.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Developer documentation: transition model structure object — qmodel.object","text":"nstates Number states iso Label basic structure model isomorphic list structures analytic formulae transition probabilities implemented source file src/analyticp.c.  list given internal object msm:::.msm.graphs defined documented source file R/constants.R. iso 0 analytic P matrix implemented structure, analytic P matrix calculations disabled using use.analyticp=FALSE call msm. perm Permutation required convert base isomorphism structure model. vector integers whose \\(r\\)th element state number base structure representing state \\(r\\) current structure. qperm Inverse permutation: vector whose \\(r\\)th element state number current structure representing \\(r\\)th state base structure. npars Number allowed instantaneous transitions, equal sum(imatrix). imatrix Indicator matrix allowed instantaneous transitions.  \\((r,s)\\) entry 1 transition \\(r\\) \\(s\\) permitted continuous time, 0 otherwise.  diagonal entries arbitrarily set 0. qmatrix Matrix initial values transition intensities, supplied qmatrix argument msm. inits Vector initial values, reading across rows qmatrix excluding diagonal disallowed transitions. constr Indicators equality constraints baseline intensities, taken qconstraint argument msm, mapped necessary set (1,2,3,...). ndpars Number distinct allowed instantaneous transitions, applying equality constraints. expm Use expm package calculate matrix exponentials likelihoods, supplied use.expm argument msm.  TRUE FALSE.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/qratio.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated ratio of transition intensities — qratio.msm","title":"Estimated ratio of transition intensities — qratio.msm","text":"Compute estimate approximate standard error ratio two estimated transition intensities fitted multi-state model given set covariate values.","code":""},{"path":"https://chjackson.github.io/msm/reference/qratio.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimated ratio of transition intensities — qratio.msm","text":"","code":"qratio.msm(   x,   ind1,   ind2,   covariates = \"mean\",   ci = c(\"delta\", \"normal\", \"bootstrap\", \"none\"),   cl = 0.95,   B = 1000,   cores = NULL )"},{"path":"https://chjackson.github.io/msm/reference/qratio.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimated ratio of transition intensities — qratio.msm","text":"x fitted multi-state model, returned msm. ind1 Pair numbers giving indices intensity matrix numerator ratio, example, c(1,2). ind2 Pair numbers giving indices intensity matrix denominator ratio, example, c(2,1). covariates covariate values estimate intensities. can either : string \"mean\", denoting means covariates data (default), number 0, indicating covariates set zero, list values, optional names. example list (60, 1) order list follows order covariates originally given model formula, named list, list (age = 60, sex = 1) ci \"delta\" (default) confidence intervals calculated delta method. \"normal\", calculate confidence interval simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects, transforming. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. cl Width symmetric confidence interval present.  Defaults 0.95. B Number bootstrap replicates, number normal simulations distribution MLEs cores Number cores use bootstrapping using parallel processing. See boot.msm details.","code":""},{"path":"https://chjackson.github.io/msm/reference/qratio.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimated ratio of transition intensities — qratio.msm","text":"named vector elements estimate, se, L U containing estimate, standard error, lower upper confidence limits, respectively, ratio intensities.","code":""},{"path":"https://chjackson.github.io/msm/reference/qratio.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimated ratio of transition intensities — qratio.msm","text":"example, might want compute ratio progression rate recovery rate fitted model disease.msm health state (state 1) disease state (state 2).  case, progression rate (1,2) entry intensity matrix, recovery rate (2,1) entry.  Thus compute ratio covariates set means, call qratio.msm(disease.msm, c(1,2), c(2,1)) . Standard errors estimated delta method. Confidence limits estimated assuming normality log scale.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/qratio.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimated ratio of transition intensities — qratio.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/recreate.olddata.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data stored in msm object to old format — recreate.olddata","title":"Convert data stored in msm object to old format — recreate.olddata","text":"Converts data element msm objects old format.","code":""},{"path":"https://chjackson.github.io/msm/reference/recreate.olddata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data stored in msm object to old format — recreate.olddata","text":"","code":"recreate.olddata(x)"},{"path":"https://chjackson.github.io/msm/reference/recreate.olddata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data stored in msm object to old format — recreate.olddata","text":"x Object returned msm function, representing fitted multi-state model.","code":""},{"path":"https://chjackson.github.io/msm/reference/recreate.olddata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data stored in msm object to old format — recreate.olddata","text":"list vectors matrices undocumented ad-hoc format used data component msm objects msm versions 1.3.1 earlier.","code":""},{"path":"https://chjackson.github.io/msm/reference/recreate.olddata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert data stored in msm object to old format — recreate.olddata","text":"just provided convenience illustrate changes.  guaranteed complete, liable withdrawn.  Users relying previous undocumented format advised upgrade code use new format, uses model frames model design matrices standard format used version 1.4, based model.frame model.matrix.","code":""},{"path":"https://chjackson.github.io/msm/reference/scoreresid.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Score residuals — scoreresid.msm","title":"Score residuals — scoreresid.msm","text":"Score residuals detecting outlying subjects.","code":""},{"path":"https://chjackson.github.io/msm/reference/scoreresid.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score residuals — scoreresid.msm","text":"","code":"scoreresid.msm(x, plot = FALSE)"},{"path":"https://chjackson.github.io/msm/reference/scoreresid.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score residuals — scoreresid.msm","text":"x fitted multi-state model, returned msm. plot TRUE, display simple plot residuals subject order, labelled subject identifiers","code":""},{"path":"https://chjackson.github.io/msm/reference/scoreresid.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score residuals — scoreresid.msm","text":"Vector residuals, named subject identifiers.","code":""},{"path":"https://chjackson.github.io/msm/reference/scoreresid.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score residuals — scoreresid.msm","text":"score residual single subject $$U(\\theta)^T (\\theta)^{-1} U(\\theta)$$ \\(U(\\theta)\\) vector first derivatives log-likelihood subject maximum likelihood estimates \\(\\theta\\), \\((\\theta)\\) observed Fisher information matrix, , matrix second derivatives minus log-likelihood subject theta. Subjects higher influence maximum likelihood estimates higher score residuals. available models analytic derivatives (includes non-hidden hidden Markov models).","code":""},{"path":"https://chjackson.github.io/msm/reference/scoreresid.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Score residuals — scoreresid.msm","text":"Andrew Titman .titman@lancaster.ac.uk (theory), Chris Jackson chris.jackson@mrc-bsu.cam.ac.uk (code)","code":""},{"path":"https://chjackson.github.io/msm/reference/sim.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate one individual trajectory from a continuous-time Markov model — sim.msm","title":"Simulate one individual trajectory from a continuous-time Markov model — sim.msm","text":"Simulate one realisation continuous-time Markov process given time.","code":""},{"path":"https://chjackson.github.io/msm/reference/sim.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate one individual trajectory from a continuous-time Markov model — sim.msm","text":"","code":"sim.msm(   qmatrix,   maxtime,   covs = NULL,   beta = NULL,   obstimes = 0,   start = 1,   mintime = 0 )"},{"path":"https://chjackson.github.io/msm/reference/sim.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate one individual trajectory from a continuous-time Markov model — sim.msm","text":"qmatrix transition intensity matrix Markov process. diagonal qmatrix ignored, computed appropriate rows sum zero. example, possible qmatrix three state illness-death model recovery : rbind( c( 0, 0.1, 0.02 ), c( 0.1, 0, 0.01 ), c( 0, 0, 0 ) ) maxtime Maximum time simulated process. covs Matrix time-dependent covariates, one row observation time one column covariate. beta Matrix linear covariate effects log transition intensities. rows correspond different covariates, columns transition intensities. intensities ordered reading across rows intensity matrix, starting first, counting positive -diagonal elements matrix. obstimes Vector times covariates observed. start Starting state process. Defaults 1. mintime Starting time process. Defaults 0.","code":""},{"path":"https://chjackson.github.io/msm/reference/sim.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate one individual trajectory from a continuous-time Markov model — sim.msm","text":"list components, states Simulated states process moves.  ends either absorption obstime, transient state obstime. times Exact times process changes corresponding states qmatrix given transition intensity matrix","code":""},{"path":"https://chjackson.github.io/msm/reference/sim.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate one individual trajectory from a continuous-time Markov model — sim.msm","text":"effect time-dependent covariates transition intensity matrix individual determined assuming covariate step function remains constant individual's observation times.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/sim.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate one individual trajectory from a continuous-time Markov model — sim.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/sim.msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate one individual trajectory from a continuous-time Markov model — sim.msm","text":"","code":"qmatrix <- rbind(                  c(-0.2,   0.1,  0.1 ),                  c(0.5,   -0.6,  0.1 ),                  c(0,  0,  0)                  ) sim.msm(qmatrix, 30) #> $states #> [1] 1 2 1 2 1 3 #>  #> $times #> [1]  0.000000  6.313054 10.649513 11.530177 11.959692 13.194049 #>  #> $qmatrix #>      [,1] [,2] [,3] #> [1,] -0.2  0.1  0.1 #> [2,]  0.5 -0.6  0.1 #> [3,]  0.0  0.0  0.0 #>"},{"path":"https://chjackson.github.io/msm/reference/simfitted.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from a Markov model fitted using msm — simfitted.msm","title":"Simulate from a Markov model fitted using msm — simfitted.msm","text":"Simulate dataset Markov model fitted using msm, using maximum likelihood estimates parameters, observation times original data.","code":""},{"path":"https://chjackson.github.io/msm/reference/simfitted.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from a Markov model fitted using msm — simfitted.msm","text":"","code":"simfitted.msm(x, drop.absorb = TRUE, drop.pci.imp = TRUE)"},{"path":"https://chjackson.github.io/msm/reference/simfitted.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from a Markov model fitted using msm — simfitted.msm","text":"x fitted multi-state model object returned msm. drop.absorb repeated observations absorbing state omitted.  Use default TRUE avoid warnings using simulated dataset msm fits.  set FALSE exactly number observations original data needed. drop.pci.imp time-inhomogeneous models fitted using pci option msm, censored observations inserted data msm times intensity changes, dropped default simulating fitted model using function. Set argument FALSE keep observations corresponding indicator variable.","code":""},{"path":"https://chjackson.github.io/msm/reference/simfitted.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from a Markov model fitted using msm — simfitted.msm","text":"dataset variables described simmulti.msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/simfitted.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from a Markov model fitted using msm — simfitted.msm","text":"function wrapper around simmulti.msm, simulates panel-observed data.  generate datasets exact times transition, use lower-level sim.msm. Markov models misclassified states fitted ematrix option msm supported, general hidden Markov models hmodel.  misclassification models, function includes misclassification simulated states. function used parametric bootstrapping estimate null distribution test statistic pearson.msm.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/simfitted.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate from a Markov model fitted using msm — simfitted.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/simmulti.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate multiple trajectories from a multi-state Markov model with arbitrary observation times — simmulti.msm","title":"Simulate multiple trajectories from a multi-state Markov model with arbitrary observation times — simmulti.msm","text":"Simulate number individual realisations continuous-time Markov process. Observations process made specified arbitrary times individual, giving panel-observed data.","code":""},{"path":"https://chjackson.github.io/msm/reference/simmulti.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate multiple trajectories from a multi-state Markov model with arbitrary observation times — simmulti.msm","text":"","code":"simmulti.msm(   data,   qmatrix,   covariates = NULL,   death = FALSE,   start,   ematrix = NULL,   misccovariates = NULL,   hmodel = NULL,   hcovariates = NULL,   censor.states = NULL,   drop.absorb = TRUE )"},{"path":"https://chjackson.github.io/msm/reference/simmulti.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate multiple trajectories from a multi-state Markov model with arbitrary observation times — simmulti.msm","text":"data data frame mandatory column named time, representing observation times.  optional column named subject, corresponds subject identification numbers. given, observations assumed individual. Observation times sorted within individuals.  optional column named cens indicates times simulated states censored. cens==0 state censored, cens==k, say, simulated states time set censor.states replaced k.  named columns data frame represent covariates, may time-constant time-dependent.  Time-dependent covariates assumed constant observation times. qmatrix transition intensity matrix Markov process, covariates set zero.  diagonal qmatrix ignored, computed appropriate rows sum zero. example, possible qmatrix three state illness-death model recovery : rbind( c( 0, 0.1, 0.02 ), c( 0.1, 0, 0.01 ), c( 0, 0, 0 ) ) covariates List linear covariate effects log transition intensities. element vector effects one covariate transition intensities. intensities ordered reading across rows intensity matrix, starting first, counting positive -diagonal elements matrix. example, multi-state model three transition intensities, two covariates x y intensity, covariates=list(x = c(-0.3,-0.3,-0.3), y=c(0.1, 0.1, 0.1)) death Vector indices death states.  death state absorbing state whose time entry known exactly, individual assumed unknown transient state (\"alive\") previous instant.  usual situation times death chronic disease monitoring data.  example, specify death = c(4, 5) states 4 5 assumed death states. death = TRUE indicates final state death state, death = FALSE (default) indicates death state. start vector number elements distinct subjects data, giving states corresponding individual begins.  single number, . Defaults state 1 subject. ematrix optional misclassification matrix generating observed states conditionally simulated true states. defined msm. misccovariates Covariate effects misclassification probabilities via multinomial logistic regression. Linear effects operate log probability relative probability classification correct state. format covariates. hmodel optional hidden Markov model generating observed outcomes conditionally simulated true states. defined msm.  Multivariate outcomes (hmmMV) supported. hcovariates List length hmodel, defining covariates governing hidden Markov outcome models.  Unlike msm function, also define values covariate effects. element list named vector initial values set covariates state.  example, three-state hidden Markov model two, one covariates state 1, 2 3 outcome models respectively, hcovariates = list (c(acute=-8, age=0), c(acute=-8), NULL) censor.states Set simulated states replaced censoring indicator censoring times.  default transient states (representing alive, unknown state). drop.absorb Drop repeated observations absorbing state, retaining one.","code":""},{"path":"https://chjackson.github.io/msm/reference/simmulti.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate multiple trajectories from a multi-state Markov model with arbitrary observation times — simmulti.msm","text":"data frame columns, subject Subject identification indicators time Observation times state Simulated (true) state corresponding time obs Observed outcome corresponding time, ematrix hmodel supplied keep Row numbers original data.  Useful drop.absorb=TRUE, show rows dropped plus supplied covariates.","code":""},{"path":"https://chjackson.github.io/msm/reference/simmulti.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate multiple trajectories from a multi-state Markov model with arbitrary observation times — simmulti.msm","text":"sim.msm called repeatedly produce simulated trajectory individual. state specified observation time taken produce new column state.  effect time-dependent covariates transition intensity matrix individual determined assuming covariate step function remains constant individual's observation times.  subject enters absorbing state, first observation state kept data frame. Rows corresponding future observations deleted.  entry times states given death assumed known exactly.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/simmulti.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate multiple trajectories from a multi-state Markov model with arbitrary observation times — simmulti.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/simmulti.msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate multiple trajectories from a multi-state Markov model with arbitrary observation times — simmulti.msm","text":"","code":"### Simulate 100 individuals with common observation times sim.df <- data.frame(subject = rep(1:100, rep(13,100)), time = rep(seq(0, 24, 2), 100)) qmatrix <- rbind(c(-0.11,   0.1,  0.01 ),                  c(0.05,   -0.15,  0.1 ),                  c(0.02,   0.07, -0.09)) simmulti.msm(sim.df, qmatrix) #>      subject time state keep #> 1          1    0     1    1 #> 2          1    2     3    2 #> 3          1    4     3    3 #> 4          1    6     3    4 #> 5          1    8     3    5 #> 6          1   10     3    6 #> 7          1   12     3    7 #> 8          1   14     3    8 #> 9          1   16     3    9 #> 10         1   18     3   10 #> 11         1   20     3   11 #> 12         1   22     3   12 #> 13         1   24     2   13 #> 14         2    0     1   14 #> 15         2    2     3   15 #> 16         2    4     3   16 #> 17         2    6     3   17 #> 18         2    8     3   18 #> 19         2   10     3   19 #> 20         2   12     3   20 #> 21         2   14     3   21 #> 22         2   16     3   22 #> 23         2   18     2   23 #> 24         2   20     2   24 #> 25         2   22     2   25 #> 26         2   24     2   26 #> 27         3    0     1   27 #> 28         3    2     1   28 #> 29         3    4     1   29 #> 30         3    6     1   30 #> 31         3    8     1   31 #> 32         3   10     1   32 #> 33         3   12     1   33 #> 34         3   14     2   34 #> 35         3   16     3   35 #> 36         3   18     3   36 #> 37         3   20     3   37 #> 38         3   22     3   38 #> 39         3   24     3   39 #> 40         4    0     1   40 #> 41         4    2     1   41 #> 42         4    4     1   42 #> 43         4    6     1   43 #> 44         4    8     1   44 #> 45         4   10     1   45 #> 46         4   12     1   46 #> 47         4   14     1   47 #> 48         4   16     1   48 #> 49         4   18     1   49 #> 50         4   20     1   50 #> 51         4   22     1   51 #> 52         4   24     1   52 #> 53         5    0     1   53 #> 54         5    2     1   54 #> 55         5    4     1   55 #> 56         5    6     1   56 #> 57         5    8     1   57 #> 58         5   10     1   58 #> 59         5   12     1   59 #> 60         5   14     1   60 #> 61         5   16     1   61 #> 62         5   18     1   62 #> 63         5   20     1   63 #> 64         5   22     2   64 #> 65         5   24     2   65 #> 66         6    0     1   66 #> 67         6    2     1   67 #> 68         6    4     1   68 #> 69         6    6     1   69 #> 70         6    8     1   70 #> 71         6   10     2   71 #> 72         6   12     2   72 #> 73         6   14     1   73 #> 74         6   16     2   74 #> 75         6   18     2   75 #> 76         6   20     2   76 #> 77         6   22     2   77 #> 78         6   24     2   78 #> 79         7    0     1   79 #> 80         7    2     3   80 #> 81         7    4     3   81 #> 82         7    6     2   82 #> 83         7    8     2   83 #> 84         7   10     2   84 #> 85         7   12     3   85 #> 86         7   14     3   86 #> 87         7   16     3   87 #> 88         7   18     3   88 #> 89         7   20     2   89 #> 90         7   22     3   90 #> 91         7   24     3   91 #> 92         8    0     1   92 #> 93         8    2     1   93 #> 94         8    4     2   94 #> 95         8    6     3   95 #> 96         8    8     3   96 #> 97         8   10     3   97 #> 98         8   12     3   98 #> 99         8   14     3   99 #> 100        8   16     3  100 #> 101        8   18     3  101 #> 102        8   20     3  102 #> 103        8   22     3  103 #> 104        8   24     3  104 #> 105        9    0     1  105 #> 106        9    2     2  106 #> 107        9    4     2  107 #> 108        9    6     2  108 #> 109        9    8     2  109 #> 110        9   10     2  110 #> 111        9   12     2  111 #> 112        9   14     2  112 #> 113        9   16     2  113 #> 114        9   18     2  114 #> 115        9   20     2  115 #> 116        9   22     2  116 #> 117        9   24     1  117 #> 118       10    0     1  118 #> 119       10    2     1  119 #> 120       10    4     1  120 #> 121       10    6     2  121 #> 122       10    8     2  122 #> 123       10   10     2  123 #> 124       10   12     2  124 #> 125       10   14     2  125 #> 126       10   16     2  126 #> 127       10   18     2  127 #> 128       10   20     2  128 #> 129       10   22     2  129 #> 130       10   24     2  130 #> 131       11    0     1  131 #> 132       11    2     2  132 #> 133       11    4     2  133 #> 134       11    6     3  134 #> 135       11    8     3  135 #> 136       11   10     3  136 #> 137       11   12     3  137 #> 138       11   14     3  138 #> 139       11   16     3  139 #> 140       11   18     3  140 #> 141       11   20     2  141 #> 142       11   22     2  142 #> 143       11   24     3  143 #> 144       12    0     1  144 #> 145       12    2     2  145 #> 146       12    4     2  146 #> 147       12    6     2  147 #> 148       12    8     2  148 #> 149       12   10     2  149 #> 150       12   12     2  150 #> 151       12   14     3  151 #> 152       12   16     3  152 #> 153       12   18     3  153 #> 154       12   20     3  154 #> 155       12   22     3  155 #> 156       12   24     3  156 #> 157       13    0     1  157 #> 158       13    2     1  158 #> 159       13    4     1  159 #> 160       13    6     1  160 #> 161       13    8     1  161 #> 162       13   10     1  162 #> 163       13   12     1  163 #> 164       13   14     1  164 #> 165       13   16     2  165 #> 166       13   18     2  166 #> 167       13   20     2  167 #> 168       13   22     2  168 #> 169       13   24     2  169 #> 170       14    0     1  170 #> 171       14    2     1  171 #> 172       14    4     1  172 #> 173       14    6     1  173 #> 174       14    8     1  174 #> 175       14   10     1  175 #> 176       14   12     1  176 #> 177       14   14     1  177 #> 178       14   16     2  178 #> 179       14   18     2  179 #> 180       14   20     1  180 #> 181       14   22     1  181 #> 182       14   24     2  182 #> 183       15    0     1  183 #> 184       15    2     2  184 #> 185       15    4     3  185 #> 186       15    6     2  186 #> 187       15    8     2  187 #> 188       15   10     3  188 #> 189       15   12     3  189 #> 190       15   14     2  190 #> 191       15   16     2  191 #> 192       15   18     2  192 #> 193       15   20     2  193 #> 194       15   22     2  194 #> 195       15   24     2  195 #> 196       16    0     1  196 #> 197       16    2     2  197 #> 198       16    4     2  198 #> 199       16    6     1  199 #> 200       16    8     1  200 #> 201       16   10     1  201 #> 202       16   12     1  202 #> 203       16   14     1  203 #> 204       16   16     3  204 #> 205       16   18     3  205 #> 206       16   20     3  206 #> 207       16   22     3  207 #> 208       16   24     3  208 #> 209       17    0     1  209 #> 210       17    2     1  210 #> 211       17    4     1  211 #> 212       17    6     1  212 #> 213       17    8     1  213 #> 214       17   10     1  214 #> 215       17   12     2  215 #> 216       17   14     2  216 #> 217       17   16     2  217 #> 218       17   18     1  218 #> 219       17   20     1  219 #> 220       17   22     1  220 #> 221       17   24     1  221 #> 222       18    0     1  222 #> 223       18    2     2  223 #> 224       18    4     2  224 #> 225       18    6     2  225 #> 226       18    8     2  226 #> 227       18   10     3  227 #> 228       18   12     3  228 #> 229       18   14     3  229 #> 230       18   16     2  230 #> 231       18   18     2  231 #> 232       18   20     2  232 #> 233       18   22     1  233 #> 234       18   24     1  234 #> 235       19    0     1  235 #> 236       19    2     1  236 #> 237       19    4     1  237 #> 238       19    6     1  238 #> 239       19    8     2  239 #> 240       19   10     2  240 #> 241       19   12     2  241 #> 242       19   14     2  242 #> 243       19   16     3  243 #> 244       19   18     3  244 #> 245       19   20     3  245 #> 246       19   22     3  246 #> 247       19   24     3  247 #> 248       20    0     1  248 #> 249       20    2     1  249 #> 250       20    4     2  250 #> 251       20    6     2  251 #> 252       20    8     2  252 #> 253       20   10     2  253 #> 254       20   12     2  254 #> 255       20   14     2  255 #> 256       20   16     3  256 #> 257       20   18     3  257 #> 258       20   20     3  258 #> 259       20   22     3  259 #> 260       20   24     3  260 #> 261       21    0     1  261 #> 262       21    2     1  262 #> 263       21    4     2  263 #> 264       21    6     1  264 #> 265       21    8     1  265 #> 266       21   10     1  266 #> 267       21   12     1  267 #> 268       21   14     1  268 #> 269       21   16     1  269 #> 270       21   18     2  270 #> 271       21   20     2  271 #> 272       21   22     2  272 #> 273       21   24     2  273 #> 274       22    0     1  274 #> 275       22    2     1  275 #> 276       22    4     1  276 #> 277       22    6     1  277 #> 278       22    8     1  278 #> 279       22   10     1  279 #> 280       22   12     1  280 #> 281       22   14     1  281 #> 282       22   16     1  282 #> 283       22   18     1  283 #> 284       22   20     1  284 #> 285       22   22     1  285 #> 286       22   24     1  286 #> 287       23    0     1  287 #> 288       23    2     1  288 #> 289       23    4     1  289 #> 290       23    6     1  290 #> 291       23    8     1  291 #> 292       23   10     1  292 #> 293       23   12     2  293 #> 294       23   14     1  294 #> 295       23   16     1  295 #> 296       23   18     1  296 #> 297       23   20     1  297 #> 298       23   22     1  298 #> 299       23   24     1  299 #> 300       24    0     1  300 #> 301       24    2     2  301 #> 302       24    4     2  302 #> 303       24    6     2  303 #> 304       24    8     3  304 #> 305       24   10     3  305 #> 306       24   12     1  306 #> 307       24   14     1  307 #> 308       24   16     1  308 #> 309       24   18     1  309 #> 310       24   20     1  310 #> 311       24   22     3  311 #> 312       24   24     3  312 #> 313       25    0     1  313 #> 314       25    2     1  314 #> 315       25    4     1  315 #> 316       25    6     2  316 #> 317       25    8     3  317 #> 318       25   10     3  318 #> 319       25   12     3  319 #> 320       25   14     3  320 #> 321       25   16     3  321 #> 322       25   18     3  322 #> 323       25   20     3  323 #> 324       25   22     3  324 #> 325       25   24     3  325 #> 326       26    0     1  326 #> 327       26    2     1  327 #> 328       26    4     1  328 #> 329       26    6     1  329 #> 330       26    8     1  330 #> 331       26   10     1  331 #> 332       26   12     1  332 #> 333       26   14     1  333 #> 334       26   16     1  334 #> 335       26   18     1  335 #> 336       26   20     1  336 #> 337       26   22     1  337 #> 338       26   24     2  338 #> 339       27    0     1  339 #> 340       27    2     2  340 #> 341       27    4     2  341 #> 342       27    6     2  342 #> 343       27    8     2  343 #> 344       27   10     2  344 #> 345       27   12     2  345 #> 346       27   14     2  346 #> 347       27   16     2  347 #> 348       27   18     2  348 #> 349       27   20     2  349 #> 350       27   22     2  350 #> 351       27   24     2  351 #> 352       28    0     1  352 #> 353       28    2     1  353 #> 354       28    4     1  354 #> 355       28    6     1  355 #> 356       28    8     2  356 #> 357       28   10     2  357 #> 358       28   12     3  358 #> 359       28   14     3  359 #> 360       28   16     3  360 #> 361       28   18     3  361 #> 362       28   20     3  362 #> 363       28   22     3  363 #> 364       28   24     3  364 #> 365       29    0     1  365 #> 366       29    2     1  366 #> 367       29    4     1  367 #> 368       29    6     1  368 #> 369       29    8     1  369 #> 370       29   10     1  370 #> 371       29   12     1  371 #> 372       29   14     1  372 #> 373       29   16     1  373 #> 374       29   18     1  374 #> 375       29   20     1  375 #> 376       29   22     1  376 #> 377       29   24     1  377 #> 378       30    0     1  378 #> 379       30    2     1  379 #> 380       30    4     1  380 #> 381       30    6     1  381 #> 382       30    8     1  382 #> 383       30   10     1  383 #> 384       30   12     1  384 #> 385       30   14     1  385 #> 386       30   16     1  386 #> 387       30   18     1  387 #> 388       30   20     1  388 #> 389       30   22     1  389 #> 390       30   24     1  390 #> 391       31    0     1  391 #> 392       31    2     1  392 #> 393       31    4     1  393 #> 394       31    6     1  394 #> 395       31    8     1  395 #> 396       31   10     1  396 #> 397       31   12     1  397 #> 398       31   14     1  398 #> 399       31   16     2  399 #> 400       31   18     1  400 #> 401       31   20     1  401 #> 402       31   22     1  402 #> 403       31   24     1  403 #> 404       32    0     1  404 #> 405       32    2     2  405 #> 406       32    4     2  406 #> 407       32    6     3  407 #> 408       32    8     3  408 #> 409       32   10     3  409 #> 410       32   12     3  410 #> 411       32   14     3  411 #> 412       32   16     3  412 #> 413       32   18     3  413 #> 414       32   20     2  414 #> 415       32   22     2  415 #> 416       32   24     1  416 #> 417       33    0     1  417 #> 418       33    2     1  418 #> 419       33    4     1  419 #> 420       33    6     1  420 #> 421       33    8     1  421 #> 422       33   10     3  422 #> 423       33   12     3  423 #> 424       33   14     3  424 #> 425       33   16     3  425 #> 426       33   18     3  426 #> 427       33   20     3  427 #> 428       33   22     3  428 #> 429       33   24     2  429 #> 430       34    0     1  430 #> 431       34    2     1  431 #> 432       34    4     1  432 #> 433       34    6     2  433 #> 434       34    8     2  434 #> 435       34   10     2  435 #> 436       34   12     2  436 #> 437       34   14     2  437 #> 438       34   16     2  438 #> 439       34   18     3  439 #> 440       34   20     1  440 #> 441       34   22     1  441 #> 442       34   24     1  442 #> 443       35    0     1  443 #> 444       35    2     1  444 #> 445       35    4     1  445 #> 446       35    6     1  446 #> 447       35    8     1  447 #> 448       35   10     1  448 #> 449       35   12     1  449 #> 450       35   14     1  450 #> 451       35   16     1  451 #> 452       35   18     1  452 #> 453       35   20     1  453 #> 454       35   22     1  454 #> 455       35   24     1  455 #> 456       36    0     1  456 #> 457       36    2     1  457 #> 458       36    4     1  458 #> 459       36    6     1  459 #> 460       36    8     2  460 #> 461       36   10     2  461 #> 462       36   12     2  462 #> 463       36   14     2  463 #> 464       36   16     2  464 #> 465       36   18     1  465 #> 466       36   20     1  466 #> 467       36   22     1  467 #> 468       36   24     3  468 #> 469       37    0     1  469 #> 470       37    2     1  470 #> 471       37    4     1  471 #> 472       37    6     2  472 #> 473       37    8     2  473 #> 474       37   10     2  474 #> 475       37   12     2  475 #> 476       37   14     2  476 #> 477       37   16     2  477 #> 478       37   18     1  478 #> 479       37   20     1  479 #> 480       37   22     1  480 #> 481       37   24     1  481 #> 482       38    0     1  482 #> 483       38    2     1  483 #> 484       38    4     1  484 #> 485       38    6     1  485 #> 486       38    8     1  486 #> 487       38   10     2  487 #> 488       38   12     2  488 #> 489       38   14     2  489 #> 490       38   16     3  490 #> 491       38   18     3  491 #> 492       38   20     3  492 #> 493       38   22     2  493 #> 494       38   24     2  494 #> 495       39    0     1  495 #> 496       39    2     1  496 #> 497       39    4     1  497 #> 498       39    6     1  498 #> 499       39    8     2  499 #> 500       39   10     2  500 #> 501       39   12     1  501 #> 502       39   14     2  502 #> 503       39   16     3  503 #> 504       39   18     3  504 #> 505       39   20     3  505 #> 506       39   22     3  506 #> 507       39   24     2  507 #> 508       40    0     1  508 #> 509       40    2     1  509 #> 510       40    4     1  510 #> 511       40    6     1  511 #> 512       40    8     2  512 #> 513       40   10     3  513 #> 514       40   12     3  514 #> 515       40   14     3  515 #> 516       40   16     3  516 #> 517       40   18     3  517 #> 518       40   20     2  518 #> 519       40   22     3  519 #> 520       40   24     3  520 #> 521       41    0     1  521 #> 522       41    2     1  522 #> 523       41    4     1  523 #> 524       41    6     1  524 #> 525       41    8     1  525 #> 526       41   10     1  526 #> 527       41   12     1  527 #> 528       41   14     1  528 #> 529       41   16     1  529 #> 530       41   18     1  530 #> 531       41   20     1  531 #> 532       41   22     1  532 #> 533       41   24     1  533 #> 534       42    0     1  534 #> 535       42    2     1  535 #> 536       42    4     1  536 #> 537       42    6     1  537 #> 538       42    8     1  538 #> 539       42   10     1  539 #> 540       42   12     1  540 #> 541       42   14     1  541 #> 542       42   16     3  542 #> 543       42   18     3  543 #> 544       42   20     3  544 #> 545       42   22     3  545 #> 546       42   24     3  546 #> 547       43    0     1  547 #> 548       43    2     1  548 #> 549       43    4     1  549 #> 550       43    6     1  550 #> 551       43    8     1  551 #> 552       43   10     2  552 #> 553       43   12     2  553 #> 554       43   14     2  554 #> 555       43   16     2  555 #> 556       43   18     2  556 #> 557       43   20     3  557 #> 558       43   22     3  558 #> 559       43   24     3  559 #> 560       44    0     1  560 #> 561       44    2     1  561 #> 562       44    4     1  562 #> 563       44    6     1  563 #> 564       44    8     1  564 #> 565       44   10     2  565 #> 566       44   12     2  566 #> 567       44   14     2  567 #> 568       44   16     2  568 #> 569       44   18     2  569 #> 570       44   20     2  570 #> 571       44   22     2  571 #> 572       44   24     2  572 #> 573       45    0     1  573 #> 574       45    2     1  574 #> 575       45    4     1  575 #> 576       45    6     1  576 #> 577       45    8     1  577 #> 578       45   10     1  578 #> 579       45   12     2  579 #> 580       45   14     2  580 #> 581       45   16     2  581 #> 582       45   18     2  582 #> 583       45   20     2  583 #> 584       45   22     2  584 #> 585       45   24     2  585 #> 586       46    0     1  586 #> 587       46    2     1  587 #> 588       46    4     1  588 #> 589       46    6     2  589 #> 590       46    8     2  590 #> 591       46   10     2  591 #> 592       46   12     2  592 #> 593       46   14     2  593 #> 594       46   16     2  594 #> 595       46   18     2  595 #> 596       46   20     2  596 #> 597       46   22     3  597 #> 598       46   24     3  598 #> 599       47    0     1  599 #> 600       47    2     1  600 #> 601       47    4     1  601 #> 602       47    6     1  602 #> 603       47    8     1  603 #> 604       47   10     2  604 #> 605       47   12     3  605 #> 606       47   14     2  606 #> 607       47   16     3  607 #> 608       47   18     3  608 #> 609       47   20     3  609 #> 610       47   22     3  610 #> 611       47   24     3  611 #> 612       48    0     1  612 #> 613       48    2     2  613 #> 614       48    4     2  614 #> 615       48    6     2  615 #> 616       48    8     2  616 #> 617       48   10     2  617 #> 618       48   12     2  618 #> 619       48   14     2  619 #> 620       48   16     2  620 #> 621       48   18     2  621 #> 622       48   20     2  622 #> 623       48   22     2  623 #> 624       48   24     2  624 #> 625       49    0     1  625 #> 626       49    2     1  626 #> 627       49    4     1  627 #> 628       49    6     2  628 #> 629       49    8     2  629 #> 630       49   10     2  630 #> 631       49   12     1  631 #> 632       49   14     1  632 #> 633       49   16     1  633 #> 634       49   18     1  634 #> 635       49   20     2  635 #> 636       49   22     2  636 #> 637       49   24     2  637 #> 638       50    0     1  638 #> 639       50    2     1  639 #> 640       50    4     1  640 #> 641       50    6     2  641 #> 642       50    8     2  642 #> 643       50   10     2  643 #> 644       50   12     3  644 #> 645       50   14     3  645 #> 646       50   16     3  646 #> 647       50   18     3  647 #> 648       50   20     3  648 #> 649       50   22     3  649 #> 650       50   24     3  650 #> 651       51    0     1  651 #> 652       51    2     1  652 #> 653       51    4     1  653 #> 654       51    6     2  654 #> 655       51    8     2  655 #> 656       51   10     2  656 #> 657       51   12     2  657 #> 658       51   14     2  658 #> 659       51   16     2  659 #> 660       51   18     3  660 #> 661       51   20     3  661 #> 662       51   22     3  662 #> 663       51   24     2  663 #> 664       52    0     1  664 #> 665       52    2     1  665 #> 666       52    4     1  666 #> 667       52    6     1  667 #> 668       52    8     1  668 #> 669       52   10     2  669 #> 670       52   12     2  670 #> 671       52   14     3  671 #> 672       52   16     3  672 #> 673       52   18     3  673 #> 674       52   20     3  674 #> 675       52   22     2  675 #> 676       52   24     2  676 #> 677       53    0     1  677 #> 678       53    2     1  678 #> 679       53    4     1  679 #> 680       53    6     1  680 #> 681       53    8     2  681 #> 682       53   10     2  682 #> 683       53   12     2  683 #> 684       53   14     2  684 #> 685       53   16     1  685 #> 686       53   18     1  686 #> 687       53   20     1  687 #> 688       53   22     1  688 #> 689       53   24     1  689 #> 690       54    0     1  690 #> 691       54    2     1  691 #> 692       54    4     1  692 #> 693       54    6     1  693 #> 694       54    8     2  694 #> 695       54   10     2  695 #> 696       54   12     2  696 #> 697       54   14     2  697 #> 698       54   16     2  698 #> 699       54   18     1  699 #> 700       54   20     1  700 #> 701       54   22     2  701 #> 702       54   24     2  702 #> 703       55    0     1  703 #> 704       55    2     1  704 #> 705       55    4     1  705 #> 706       55    6     2  706 #> 707       55    8     2  707 #> 708       55   10     2  708 #> 709       55   12     2  709 #> 710       55   14     2  710 #> 711       55   16     2  711 #> 712       55   18     2  712 #> 713       55   20     2  713 #> 714       55   22     2  714 #> 715       55   24     2  715 #> 716       56    0     1  716 #> 717       56    2     1  717 #> 718       56    4     1  718 #> 719       56    6     1  719 #> 720       56    8     1  720 #> 721       56   10     2  721 #> 722       56   12     2  722 #> 723       56   14     2  723 #> 724       56   16     2  724 #> 725       56   18     1  725 #> 726       56   20     1  726 #> 727       56   22     1  727 #> 728       56   24     1  728 #> 729       57    0     1  729 #> 730       57    2     1  730 #> 731       57    4     2  731 #> 732       57    6     2  732 #> 733       57    8     2  733 #> 734       57   10     2  734 #> 735       57   12     2  735 #> 736       57   14     2  736 #> 737       57   16     2  737 #> 738       57   18     2  738 #> 739       57   20     2  739 #> 740       57   22     3  740 #> 741       57   24     3  741 #> 742       58    0     1  742 #> 743       58    2     1  743 #> 744       58    4     1  744 #> 745       58    6     3  745 #> 746       58    8     3  746 #> 747       58   10     2  747 #> 748       58   12     3  748 #> 749       58   14     3  749 #> 750       58   16     2  750 #> 751       58   18     2  751 #> 752       58   20     3  752 #> 753       58   22     3  753 #> 754       58   24     3  754 #> 755       59    0     1  755 #> 756       59    2     2  756 #> 757       59    4     2  757 #> 758       59    6     2  758 #> 759       59    8     2  759 #> 760       59   10     2  760 #> 761       59   12     2  761 #> 762       59   14     2  762 #> 763       59   16     2  763 #> 764       59   18     2  764 #> 765       59   20     2  765 #> 766       59   22     2  766 #> 767       59   24     3  767 #> 768       60    0     1  768 #> 769       60    2     1  769 #> 770       60    4     1  770 #> 771       60    6     1  771 #> 772       60    8     1  772 #> 773       60   10     1  773 #> 774       60   12     1  774 #> 775       60   14     2  775 #> 776       60   16     2  776 #> 777       60   18     2  777 #> 778       60   20     2  778 #> 779       60   22     2  779 #> 780       60   24     2  780 #> 781       61    0     1  781 #> 782       61    2     1  782 #> 783       61    4     1  783 #> 784       61    6     1  784 #> 785       61    8     1  785 #> 786       61   10     1  786 #> 787       61   12     1  787 #> 788       61   14     1  788 #> 789       61   16     1  789 #> 790       61   18     1  790 #> 791       61   20     1  791 #> 792       61   22     1  792 #> 793       61   24     1  793 #> 794       62    0     1  794 #> 795       62    2     1  795 #> 796       62    4     2  796 #> 797       62    6     2  797 #> 798       62    8     2  798 #> 799       62   10     2  799 #> 800       62   12     1  800 #> 801       62   14     1  801 #> 802       62   16     1  802 #> 803       62   18     2  803 #> 804       62   20     2  804 #> 805       62   22     2  805 #> 806       62   24     2  806 #> 807       63    0     1  807 #> 808       63    2     1  808 #> 809       63    4     1  809 #> 810       63    6     1  810 #> 811       63    8     1  811 #> 812       63   10     1  812 #> 813       63   12     1  813 #> 814       63   14     1  814 #> 815       63   16     1  815 #> 816       63   18     1  816 #> 817       63   20     1  817 #> 818       63   22     2  818 #> 819       63   24     2  819 #> 820       64    0     1  820 #> 821       64    2     2  821 #> 822       64    4     2  822 #> 823       64    6     2  823 #> 824       64    8     1  824 #> 825       64   10     1  825 #> 826       64   12     1  826 #> 827       64   14     1  827 #> 828       64   16     1  828 #> 829       64   18     1  829 #> 830       64   20     1  830 #> 831       64   22     3  831 #> 832       64   24     3  832 #> 833       65    0     1  833 #> 834       65    2     1  834 #> 835       65    4     1  835 #> 836       65    6     2  836 #> 837       65    8     1  837 #> 838       65   10     1  838 #> 839       65   12     1  839 #> 840       65   14     1  840 #> 841       65   16     1  841 #> 842       65   18     1  842 #> 843       65   20     1  843 #> 844       65   22     1  844 #> 845       65   24     2  845 #> 846       66    0     1  846 #> 847       66    2     1  847 #> 848       66    4     1  848 #> 849       66    6     1  849 #> 850       66    8     1  850 #> 851       66   10     1  851 #> 852       66   12     1  852 #> 853       66   14     1  853 #> 854       66   16     1  854 #> 855       66   18     1  855 #> 856       66   20     1  856 #> 857       66   22     1  857 #> 858       66   24     1  858 #> 859       67    0     1  859 #> 860       67    2     1  860 #> 861       67    4     1  861 #> 862       67    6     2  862 #> 863       67    8     2  863 #> 864       67   10     1  864 #> 865       67   12     1  865 #> 866       67   14     1  866 #> 867       67   16     1  867 #> 868       67   18     2  868 #> 869       67   20     2  869 #> 870       67   22     3  870 #> 871       67   24     3  871 #> 872       68    0     1  872 #> 873       68    2     3  873 #> 874       68    4     3  874 #> 875       68    6     3  875 #> 876       68    8     3  876 #> 877       68   10     3  877 #> 878       68   12     3  878 #> 879       68   14     3  879 #> 880       68   16     3  880 #> 881       68   18     3  881 #> 882       68   20     3  882 #> 883       68   22     3  883 #> 884       68   24     3  884 #> 885       69    0     1  885 #> 886       69    2     2  886 #> 887       69    4     1  887 #> 888       69    6     1  888 #> 889       69    8     1  889 #> 890       69   10     1  890 #> 891       69   12     1  891 #> 892       69   14     1  892 #> 893       69   16     1  893 #> 894       69   18     2  894 #> 895       69   20     3  895 #> 896       69   22     3  896 #> 897       69   24     2  897 #> 898       70    0     1  898 #> 899       70    2     1  899 #> 900       70    4     1  900 #> 901       70    6     1  901 #> 902       70    8     1  902 #> 903       70   10     1  903 #> 904       70   12     1  904 #> 905       70   14     1  905 #> 906       70   16     1  906 #> 907       70   18     1  907 #> 908       70   20     2  908 #> 909       70   22     2  909 #> 910       70   24     2  910 #> 911       71    0     1  911 #> 912       71    2     1  912 #> 913       71    4     1  913 #> 914       71    6     1  914 #> 915       71    8     1  915 #> 916       71   10     1  916 #> 917       71   12     1  917 #> 918       71   14     1  918 #> 919       71   16     1  919 #> 920       71   18     1  920 #> 921       71   20     1  921 #> 922       71   22     1  922 #> 923       71   24     1  923 #> 924       72    0     1  924 #> 925       72    2     1  925 #> 926       72    4     1  926 #> 927       72    6     1  927 #> 928       72    8     1  928 #> 929       72   10     1  929 #> 930       72   12     2  930 #> 931       72   14     2  931 #> 932       72   16     2  932 #> 933       72   18     2  933 #> 934       72   20     2  934 #> 935       72   22     2  935 #> 936       72   24     2  936 #> 937       73    0     1  937 #> 938       73    2     1  938 #> 939       73    4     1  939 #> 940       73    6     2  940 #> 941       73    8     2  941 #> 942       73   10     2  942 #> 943       73   12     2  943 #> 944       73   14     2  944 #> 945       73   16     2  945 #> 946       73   18     2  946 #> 947       73   20     1  947 #> 948       73   22     1  948 #> 949       73   24     2  949 #> 950       74    0     1  950 #> 951       74    2     1  951 #> 952       74    4     1  952 #> 953       74    6     1  953 #> 954       74    8     1  954 #> 955       74   10     1  955 #> 956       74   12     2  956 #> 957       74   14     3  957 #> 958       74   16     3  958 #> 959       74   18     3  959 #> 960       74   20     3  960 #> 961       74   22     3  961 #> 962       74   24     3  962 #> 963       75    0     1  963 #> 964       75    2     1  964 #> 965       75    4     1  965 #> 966       75    6     2  966 #> 967       75    8     2  967 #> 968       75   10     2  968 #> 969       75   12     2  969 #> 970       75   14     2  970 #> 971       75   16     2  971 #> 972       75   18     2  972 #> 973       75   20     2  973 #> 974       75   22     2  974 #> 975       75   24     2  975 #> 976       76    0     1  976 #> 977       76    2     1  977 #> 978       76    4     1  978 #> 979       76    6     1  979 #> 980       76    8     1  980 #> 981       76   10     2  981 #> 982       76   12     2  982 #> 983       76   14     2  983 #> 984       76   16     2  984 #> 985       76   18     2  985 #> 986       76   20     2  986 #> 987       76   22     2  987 #> 988       76   24     2  988 #> 989       77    0     1  989 #> 990       77    2     1  990 #> 991       77    4     1  991 #> 992       77    6     3  992 #> 993       77    8     3  993 #> 994       77   10     3  994 #> 995       77   12     3  995 #> 996       77   14     1  996 #> 997       77   16     1  997 #> 998       77   18     2  998 #> 999       77   20     2  999 #> 1000      77   22     3 1000 #> 1001      77   24     3 1001 #> 1002      78    0     1 1002 #> 1003      78    2     1 1003 #> 1004      78    4     2 1004 #> 1005      78    6     2 1005 #> 1006      78    8     2 1006 #> 1007      78   10     2 1007 #> 1008      78   12     2 1008 #> 1009      78   14     3 1009 #> 1010      78   16     3 1010 #> 1011      78   18     3 1011 #> 1012      78   20     1 1012 #> 1013      78   22     1 1013 #> 1014      78   24     1 1014 #> 1015      79    0     1 1015 #> 1016      79    2     1 1016 #> 1017      79    4     1 1017 #> 1018      79    6     1 1018 #> 1019      79    8     1 1019 #> 1020      79   10     1 1020 #> 1021      79   12     1 1021 #> 1022      79   14     1 1022 #> 1023      79   16     1 1023 #> 1024      79   18     2 1024 #> 1025      79   20     2 1025 #> 1026      79   22     2 1026 #> 1027      79   24     3 1027 #> 1028      80    0     1 1028 #> 1029      80    2     1 1029 #> 1030      80    4     1 1030 #> 1031      80    6     1 1031 #> 1032      80    8     1 1032 #> 1033      80   10     1 1033 #> 1034      80   12     1 1034 #> 1035      80   14     1 1035 #> 1036      80   16     1 1036 #> 1037      80   18     1 1037 #> 1038      80   20     1 1038 #> 1039      80   22     1 1039 #> 1040      80   24     2 1040 #> 1041      81    0     1 1041 #> 1042      81    2     1 1042 #> 1043      81    4     1 1043 #> 1044      81    6     1 1044 #> 1045      81    8     1 1045 #> 1046      81   10     2 1046 #> 1047      81   12     3 1047 #> 1048      81   14     3 1048 #> 1049      81   16     3 1049 #> 1050      81   18     2 1050 #> 1051      81   20     2 1051 #> 1052      81   22     2 1052 #> 1053      81   24     2 1053 #> 1054      82    0     1 1054 #> 1055      82    2     1 1055 #> 1056      82    4     1 1056 #> 1057      82    6     1 1057 #> 1058      82    8     1 1058 #> 1059      82   10     1 1059 #> 1060      82   12     1 1060 #> 1061      82   14     1 1061 #> 1062      82   16     1 1062 #> 1063      82   18     1 1063 #> 1064      82   20     1 1064 #> 1065      82   22     2 1065 #> 1066      82   24     2 1066 #> 1067      83    0     1 1067 #> 1068      83    2     1 1068 #> 1069      83    4     1 1069 #> 1070      83    6     1 1070 #> 1071      83    8     1 1071 #> 1072      83   10     1 1072 #> 1073      83   12     2 1073 #> 1074      83   14     1 1074 #> 1075      83   16     2 1075 #> 1076      83   18     2 1076 #> 1077      83   20     2 1077 #> 1078      83   22     2 1078 #> 1079      83   24     2 1079 #> 1080      84    0     1 1080 #> 1081      84    2     1 1081 #> 1082      84    4     1 1082 #> 1083      84    6     1 1083 #> 1084      84    8     3 1084 #> 1085      84   10     3 1085 #> 1086      84   12     3 1086 #> 1087      84   14     3 1087 #> 1088      84   16     3 1088 #> 1089      84   18     3 1089 #> 1090      84   20     3 1090 #> 1091      84   22     3 1091 #> 1092      84   24     3 1092 #> 1093      85    0     1 1093 #> 1094      85    2     1 1094 #> 1095      85    4     1 1095 #> 1096      85    6     2 1096 #> 1097      85    8     2 1097 #> 1098      85   10     3 1098 #> 1099      85   12     3 1099 #> 1100      85   14     3 1100 #> 1101      85   16     3 1101 #> 1102      85   18     3 1102 #> 1103      85   20     3 1103 #> 1104      85   22     2 1104 #> 1105      85   24     2 1105 #> 1106      86    0     1 1106 #> 1107      86    2     1 1107 #> 1108      86    4     1 1108 #> 1109      86    6     2 1109 #> 1110      86    8     2 1110 #> 1111      86   10     2 1111 #> 1112      86   12     2 1112 #> 1113      86   14     2 1113 #> 1114      86   16     2 1114 #> 1115      86   18     3 1115 #> 1116      86   20     3 1116 #> 1117      86   22     3 1117 #> 1118      86   24     3 1118 #> 1119      87    0     1 1119 #> 1120      87    2     1 1120 #> 1121      87    4     2 1121 #> 1122      87    6     2 1122 #> 1123      87    8     2 1123 #> 1124      87   10     1 1124 #> 1125      87   12     1 1125 #> 1126      87   14     1 1126 #> 1127      87   16     2 1127 #> 1128      87   18     2 1128 #> 1129      87   20     2 1129 #> 1130      87   22     2 1130 #> 1131      87   24     2 1131 #> 1132      88    0     1 1132 #> 1133      88    2     1 1133 #> 1134      88    4     2 1134 #> 1135      88    6     2 1135 #> 1136      88    8     2 1136 #> 1137      88   10     2 1137 #> 1138      88   12     2 1138 #> 1139      88   14     2 1139 #> 1140      88   16     2 1140 #> 1141      88   18     2 1141 #> 1142      88   20     2 1142 #> 1143      88   22     2 1143 #> 1144      88   24     2 1144 #> 1145      89    0     1 1145 #> 1146      89    2     1 1146 #> 1147      89    4     1 1147 #> 1148      89    6     1 1148 #> 1149      89    8     1 1149 #> 1150      89   10     1 1150 #> 1151      89   12     1 1151 #> 1152      89   14     1 1152 #> 1153      89   16     1 1153 #> 1154      89   18     1 1154 #> 1155      89   20     1 1155 #> 1156      89   22     1 1156 #> 1157      89   24     2 1157 #> 1158      90    0     1 1158 #> 1159      90    2     1 1159 #> 1160      90    4     1 1160 #> 1161      90    6     1 1161 #> 1162      90    8     1 1162 #> 1163      90   10     1 1163 #> 1164      90   12     1 1164 #> 1165      90   14     1 1165 #> 1166      90   16     2 1166 #> 1167      90   18     2 1167 #> 1168      90   20     2 1168 #> 1169      90   22     2 1169 #> 1170      90   24     2 1170 #> 1171      91    0     1 1171 #> 1172      91    2     2 1172 #> 1173      91    4     2 1173 #> 1174      91    6     3 1174 #> 1175      91    8     3 1175 #> 1176      91   10     3 1176 #> 1177      91   12     3 1177 #> 1178      91   14     3 1178 #> 1179      91   16     3 1179 #> 1180      91   18     3 1180 #> 1181      91   20     3 1181 #> 1182      91   22     3 1182 #> 1183      91   24     3 1183 #> 1184      92    0     1 1184 #> 1185      92    2     1 1185 #> 1186      92    4     1 1186 #> 1187      92    6     1 1187 #> 1188      92    8     1 1188 #> 1189      92   10     1 1189 #> 1190      92   12     1 1190 #> 1191      92   14     1 1191 #> 1192      92   16     1 1192 #> 1193      92   18     2 1193 #> 1194      92   20     2 1194 #> 1195      92   22     2 1195 #> 1196      92   24     2 1196 #> 1197      93    0     1 1197 #> 1198      93    2     1 1198 #> 1199      93    4     1 1199 #> 1200      93    6     2 1200 #> 1201      93    8     2 1201 #> 1202      93   10     2 1202 #> 1203      93   12     2 1203 #> 1204      93   14     2 1204 #> 1205      93   16     2 1205 #> 1206      93   18     2 1206 #> 1207      93   20     2 1207 #> 1208      93   22     2 1208 #> 1209      93   24     3 1209 #> 1210      94    0     1 1210 #> 1211      94    2     1 1211 #> 1212      94    4     2 1212 #> 1213      94    6     2 1213 #> 1214      94    8     2 1214 #> 1215      94   10     2 1215 #> 1216      94   12     3 1216 #> 1217      94   14     3 1217 #> 1218      94   16     3 1218 #> 1219      94   18     3 1219 #> 1220      94   20     3 1220 #> 1221      94   22     3 1221 #> 1222      94   24     3 1222 #> 1223      95    0     1 1223 #> 1224      95    2     1 1224 #> 1225      95    4     1 1225 #> 1226      95    6     2 1226 #> 1227      95    8     2 1227 #> 1228      95   10     3 1228 #> 1229      95   12     3 1229 #> 1230      95   14     1 1230 #> 1231      95   16     1 1231 #> 1232      95   18     1 1232 #> 1233      95   20     1 1233 #> 1234      95   22     2 1234 #> 1235      95   24     2 1235 #> 1236      96    0     1 1236 #> 1237      96    2     1 1237 #> 1238      96    4     1 1238 #> 1239      96    6     1 1239 #> 1240      96    8     1 1240 #> 1241      96   10     1 1241 #> 1242      96   12     1 1242 #> 1243      96   14     2 1243 #> 1244      96   16     2 1244 #> 1245      96   18     2 1245 #> 1246      96   20     2 1246 #> 1247      96   22     2 1247 #> 1248      96   24     2 1248 #> 1249      97    0     1 1249 #> 1250      97    2     1 1250 #> 1251      97    4     3 1251 #> 1252      97    6     3 1252 #> 1253      97    8     3 1253 #> 1254      97   10     3 1254 #> 1255      97   12     3 1255 #> 1256      97   14     2 1256 #> 1257      97   16     2 1257 #> 1258      97   18     2 1258 #> 1259      97   20     2 1259 #> 1260      97   22     2 1260 #> 1261      97   24     2 1261 #> 1262      98    0     1 1262 #> 1263      98    2     1 1263 #> 1264      98    4     1 1264 #> 1265      98    6     1 1265 #> 1266      98    8     1 1266 #> 1267      98   10     1 1267 #> 1268      98   12     1 1268 #> 1269      98   14     1 1269 #> 1270      98   16     1 1270 #> 1271      98   18     2 1271 #> 1272      98   20     1 1272 #> 1273      98   22     1 1273 #> 1274      98   24     1 1274 #> 1275      99    0     1 1275 #> 1276      99    2     1 1276 #> 1277      99    4     1 1277 #> 1278      99    6     1 1278 #> 1279      99    8     1 1279 #> 1280      99   10     1 1280 #> 1281      99   12     1 1281 #> 1282      99   14     1 1282 #> 1283      99   16     1 1283 #> 1284      99   18     1 1284 #> 1285      99   20     1 1285 #> 1286      99   22     1 1286 #> 1287      99   24     2 1287 #> 1288     100    0     1 1288 #> 1289     100    2     1 1289 #> 1290     100    4     1 1290 #> 1291     100    6     1 1291 #> 1292     100    8     1 1292 #> 1293     100   10     1 1293 #> 1294     100   12     2 1294 #> 1295     100   14     2 1295 #> 1296     100   16     2 1296 #> 1297     100   18     2 1297 #> 1298     100   20     2 1298 #> 1299     100   22     2 1299 #> 1300     100   24     1 1300"},{"path":"https://chjackson.github.io/msm/reference/sojourn.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean sojourn times from a multi-state model — sojourn.msm","title":"Mean sojourn times from a multi-state model — sojourn.msm","text":"Estimate mean sojourn times transient states multi-state model confidence limits.","code":""},{"path":"https://chjackson.github.io/msm/reference/sojourn.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean sojourn times from a multi-state model — sojourn.msm","text":"","code":"sojourn.msm(   x,   covariates = \"mean\",   ci = c(\"delta\", \"normal\", \"bootstrap\", \"none\"),   cl = 0.95,   B = 1000 )"},{"path":"https://chjackson.github.io/msm/reference/sojourn.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean sojourn times from a multi-state model — sojourn.msm","text":"x fitted multi-state model, returned msm. covariates covariate values estimate mean sojourn times. can either : string \"mean\", denoting means covariates data (default), number 0, indicating covariates set zero, list values, optional names. example, list(60, 1), order list follows order covariates originally given model formula, named list, e.g. list (age = 60, sex = 1) ci \"delta\" (default) confidence intervals calculated delta method, simple transformation Hessian simplest cases. \"normal\", calculate confidence interval simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects, transforming. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. cl Width symmetric confidence interval present.  Defaults 0.95. B Number bootstrap replicates, number normal simulations distribution MLEs","code":""},{"path":"https://chjackson.github.io/msm/reference/sojourn.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean sojourn times from a multi-state model — sojourn.msm","text":"data frame components: estimates Estimated mean sojourn times transient states. SE Corresponding standard errors. L Lower confidence limits. U Upper confidence limits.","code":""},{"path":"https://chjackson.github.io/msm/reference/sojourn.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean sojourn times from a multi-state model — sojourn.msm","text":"mean sojourn time transient state \\(r\\) estimated \\(- 1 / q_{rr}\\), \\(q_{rr}\\) \\(r\\)th entry diagonal estimated transition intensity matrix. continuous-time Markov model fully specified mean sojourn times probability state next (pnext.msm).  intuitively meaningful description model transition intensity matrix (qmatrix.msm). Time dependent covariates, time-inhomogeneous models, supported. require mean piecewise exponential distribution, package author aware general analytic form .","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/sojourn.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mean sojourn times from a multi-state model — sojourn.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/statetable.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of transitions — statetable.msm","title":"Table of transitions — statetable.msm","text":"Calculates frequency table counting number times pair states observed successive observation times.  can useful way summarising multi-state data.","code":""},{"path":"https://chjackson.github.io/msm/reference/statetable.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of transitions — statetable.msm","text":"","code":"statetable.msm(state, subject, data = NULL)"},{"path":"https://chjackson.github.io/msm/reference/statetable.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table of transitions — statetable.msm","text":"state Observed states, assumed ordered time within subject. subject Subject identification numbers corresponding state. given, observations assumed subject. data optional data frame variables represented subject state can found.","code":""},{"path":"https://chjackson.github.io/msm/reference/statetable.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table of transitions — statetable.msm","text":"frequency table starting states rows finishing states columns.","code":""},{"path":"https://chjackson.github.io/msm/reference/statetable.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Table of transitions — statetable.msm","text":"data intermittently observed (panel data) table used decide transitions allowed \\(Q\\) matrix, works continuous time.  function counts transitions states time interval, real time.  can observed transitions state \\(r\\) \\(s\\) interval even \\(q_{rs}=0\\), process may passed one intermediate states middle interval.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/statetable.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Table of transitions — statetable.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/statetable.msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table of transitions — statetable.msm","text":"","code":"## Heart transplant data data(cav) #> Warning: data set ‘cav’ not found  ## 148 deaths from state 1, 48 from state 2 and 55 from state 3. statetable.msm(state, PTNUM, data=cav) #>     to #> from    1    2    3    4 #>    1 1367  204   44  148 #>    2   46  134   54   48 #>    3    4   13  107   55"},{"path":"https://chjackson.github.io/msm/reference/summary.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a fitted multi-state model — summary.msm","title":"Summarise a fitted multi-state model — summary.msm","text":"Summary method fitted msm models. simply wrapper around prevalence.msm produces table observed expected state prevalences time, models covariates, hazard.msm print hazard ratios 95% confidence intervals covariate effects.","code":""},{"path":"https://chjackson.github.io/msm/reference/summary.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a fitted multi-state model — summary.msm","text":"","code":"# S3 method for class 'msm' summary(object, hazard.scale = 1, ...)"},{"path":"https://chjackson.github.io/msm/reference/summary.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a fitted multi-state model — summary.msm","text":"object fitted multi-state model object, returned msm. hazard.scale Vector elements number covariates transition rates. Corresponds increase covariate used calculate hazard ratio. Defaults 1. ... arguments passed prevalence.msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/summary.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise a fitted multi-state model — summary.msm","text":"list class summary.msm, components: prevalences Output prevalence.msm. hazard Output hazard.msm. hazard.scale Value hazard.scale argument.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/summary.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise a fitted multi-state model — summary.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/surface.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore the likelihood surface — surface.msm","title":"Explore the likelihood surface — surface.msm","text":"Plot log-likelihood surface respect two parameters.","code":""},{"path":"https://chjackson.github.io/msm/reference/surface.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore the likelihood surface — surface.msm","text":"","code":"surface.msm(   x,   params = c(1, 2),   np = 10,   type = c(\"contour\", \"filled.contour\", \"persp\", \"image\"),   point = NULL,   xrange = NULL,   yrange = NULL,   ... )  # S3 method for class 'msm' contour(x, ...)  # S3 method for class 'msm' persp(x, ...)  # S3 method for class 'msm' image(x, ...)"},{"path":"https://chjackson.github.io/msm/reference/surface.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore the likelihood surface — surface.msm","text":"x Output msm, representing fitted msm model. params Integer vector two elements, giving indices parameters vary. parameters fixed. Defaults c(1,2), representing first two log transition intensities. See fixedpars argument msm definition indices. np Number grid points use direction, default 10.  np x np grid used evaluate likelihood surface. 100 likelihood function evaluations slow, reduce . type Character string specifying type plot produce. point Vector length n, n number parameters model, including parameters varied . specifies point fix likelihood.  default, maximum likelihood estimates stored fitted model x, x$estimates. xrange Range plot first varied parameter.  Defaults plus minus two standard errors, obtained Hessian maximum likelihood estimate. yrange Range plot second varied parameter.  Defaults plus minus two standard errors, obtained Hessian maximum likelihood estimate. ... arguments passed plotting function.","code":""},{"path":"https://chjackson.github.io/msm/reference/surface.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Explore the likelihood surface — surface.msm","text":"Draws contour perspective plot.  Useful diagnosing irregularities likelihood surface.  want use plots running maximum likelihood estimation, just run msm estimates fixed initial values. contour.msm just calls surface.msm type = \"contour\". persp.msm just calls surface.msm type = \"persp\". image.msm just calls surface.msm type = \"image\". three functions methods generic functions contour, persp image, can invoked contour(x), persp(x) image(x), x fitted msm object.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/surface.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Explore the likelihood surface — surface.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.est.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the output of pmatrix.msm and similar functions — tidy.msm.est","title":"Tidy the output of pmatrix.msm and similar functions — tidy.msm.est","text":"method generic `tidy` function used tidying output qmatrix.msm, pmatrix.msm, ematrix.msm, pnext.msm ppass.msm.  called tidy(), tidy.msm.est() tidy.qmatrix() anything else.","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the output of pmatrix.msm and similar functions — tidy.msm.est","text":"","code":"# S3 method for class 'msm.est' tidy(x, ...)"},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.est.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the output of pmatrix.msm and similar functions — tidy.msm.est","text":"x Output qmatrix.msm, pmatrix.msm, ematrix.msm, pnext.msm ppass.msm,  return objects class \"msm.est\". ... arguments (unused).","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.estbystate.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the output of totlos.msm and similar functions — tidy.msm.estbystate","title":"Tidy the output of totlos.msm and similar functions — tidy.msm.estbystate","text":"Note called tidy() tidy.msm.totlos() anything else, method generic tidy() function.","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.estbystate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the output of totlos.msm and similar functions — tidy.msm.estbystate","text":"","code":"# S3 method for class 'msm.estbystate' tidy(x, ...)"},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.estbystate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the output of totlos.msm and similar functions — tidy.msm.estbystate","text":"x Output totlos.msm, envisits.msm efpt.msm, return objects class \"msm.estbystate\". ... arguments (unused).","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.estbystate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy the output of totlos.msm and similar functions — tidy.msm.estbystate","text":"tibble one row per state, columns estimate,  confidence intervals available.","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the parameter estimates from an msm model — tidy.msm","title":"Tidy the parameter estimates from an msm model — tidy.msm","text":"Tidy parameter estimates msm model","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the parameter estimates from an msm model — tidy.msm","text":"","code":"# S3 method for class 'msm' tidy(x, ...)"},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the parameter estimates from an msm model — tidy.msm","text":"x Object returned msm, representing fitted multi-state model. ... arguments (currently unused).","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy the parameter estimates from an msm model — tidy.msm","text":"\"tibble\", one row parameter following columns describing parameter. parclass: Class parameters: intens (transition intensities), hr (hazard ratios representing effects covariates intensities), transformed versions logintens (log intensities) loghr (log hazard ratios). \"misclassification\" models fitted ematrix argument msm, classes parameters include misc (misclassification probabilities), logitmisc (misclassification log odds), or_misc logor_misc (effects covariates misclassification probabilities, odds ratios log odds ratios, first state reference category). hidden Markov models fitted hmodel argument msm, parameter class called hmm comprises parameters distributions outcome conditionally hidden state.  Covariates location parameter distributions included class hmmcov. initial state occupancy probabilities estimated, included class initp (initlogodds log odds transforms ), covariates probabilities included class initpcov. state: Starting state transition transition intensities, true state misclassification probabilities hidden Markov model parameters. tostate: Ending state transition transition intensities, observed state misclassification probabilities term: Name covariate covariate effects, \"baseline\" baseline intensity analogous parameter value. Note \"baseline\" parameters parameters covariates set mean values data (stored e.g. x$qcmodel$covmeans), unless msm called center=FALSE. estimate, std.error, conf.low, conf.high:  Parameter estimate, standard error, lower upper confidence limits. statistic, p.value: covariate effects, Z-test statistic p-value test null hypothesis covariate effect zero, based estimate standard error.","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.prevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the output of prevalence.msm — tidy.msm.prevalence","title":"Tidy the output of prevalence.msm — tidy.msm.prevalence","text":"Note called tidy() tidy.msm.prevalence() anything else, method generic tidy() function.","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.prevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the output of prevalence.msm — tidy.msm.prevalence","text":"","code":"# S3 method for class 'msm.prevalence' tidy(x, ...)"},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.prevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the output of prevalence.msm — tidy.msm.prevalence","text":"x Output prevalence.msm. ... arguments (unused).","code":""},{"path":"https://chjackson.github.io/msm/reference/tidy.msm.prevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy the output of prevalence.msm — tidy.msm.prevalence","text":"tibble one row per combination output type (count percentage) state, columns observed value, expected value confidence limits expected value (available).","code":""},{"path":"https://chjackson.github.io/msm/reference/tnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncated Normal distribution — tnorm","title":"Truncated Normal distribution — tnorm","text":"Density, distribution function, quantile function random generation truncated Normal distribution mean equal mean standard deviation equal sd truncation, truncated interval [lower, upper].","code":""},{"path":"https://chjackson.github.io/msm/reference/tnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncated Normal distribution — tnorm","text":"","code":"dtnorm(x, mean = 0, sd = 1, lower = -Inf, upper = Inf, log = FALSE)  ptnorm(   q,   mean = 0,   sd = 1,   lower = -Inf,   upper = Inf,   lower.tail = TRUE,   log.p = FALSE )  qtnorm(   p,   mean = 0,   sd = 1,   lower = -Inf,   upper = Inf,   lower.tail = TRUE,   log.p = FALSE )  rtnorm(n, mean = 0, sd = 1, lower = -Inf, upper = Inf)"},{"path":"https://chjackson.github.io/msm/reference/tnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncated Normal distribution — tnorm","text":"x, q vector quantiles. mean vector means. sd vector standard deviations. lower lower truncation point. upper upper truncation point. log logical; TRUE, return log density log hazard. lower.tail logical; TRUE (default), probabilities P[X <= x], otherwise, P[X > x]. log.p logical; TRUE, probabilities p given log(p). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://chjackson.github.io/msm/reference/tnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncated Normal distribution — tnorm","text":"dtnorm gives density, ptnorm gives distribution function, qtnorm gives quantile function, rtnorm generates random deviates.","code":""},{"path":"https://chjackson.github.io/msm/reference/tnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Truncated Normal distribution — tnorm","text":"truncated normal distribution density $$ f(x, \\mu, \\sigma) = \\phi(x, \\mu, \\sigma) / (\\Phi(u, \\mu, \\sigma) - \\Phi(l, \\mu, \\sigma)) $$ \\(l <= x <= u\\), 0 otherwise. \\(\\mu\\) mean original Normal distribution truncation,  \\(\\sigma\\) corresponding standard deviation,  \\(u\\) upper truncation point,  \\(l\\) lower truncation point,  \\(\\phi(x)\\) density corresponding normal distribution,  \\(\\Phi(x)\\) distribution function corresponding normal distribution. mean sd specified assume default values 0 1, respectively. lower upper specified assume default values -Inf Inf, respectively, corresponding lower upper truncation. Therefore, example, dtnorm(x), arguments, simply equivalent dnorm(x). rtnorm used msm package, simulate hidden Markov models truncated normal distributions. uses rejection sampling algorithms described Robert (1995). functions merely provided completion, optimized numerical stability speed.  fit hidden Markov model truncated Normal response distribution, use hmmTNorm constructor. See hmm-dists help page details.","code":""},{"path":"https://chjackson.github.io/msm/reference/tnorm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Truncated Normal distribution — tnorm","text":"Robert, C. P. Simulation truncated normal variables. Statistics Computing (1995) 5, 121–125","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/tnorm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Truncated Normal distribution — tnorm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/tnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Truncated Normal distribution — tnorm","text":"","code":"x <- seq(50, 90, by=1) plot(x, dnorm(x, 70, 10), type=\"l\", ylim=c(0,0.06)) ## standard Normal distribution lines(x, dtnorm(x, 70, 10, 60, 80), type=\"l\")       ## truncated Normal distribution"},{"path":"https://chjackson.github.io/msm/reference/totlos.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Total length of stay, or expected number of visits — totlos.msm","title":"Total length of stay, or expected number of visits — totlos.msm","text":"Estimate expected total length stay, expected number visits, state, individual given period evolution multi-state model.","code":""},{"path":"https://chjackson.github.io/msm/reference/totlos.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total length of stay, or expected number of visits — totlos.msm","text":"","code":"totlos.msm(   x,   start = 1,   end = NULL,   fromt = 0,   tot = Inf,   covariates = \"mean\",   piecewise.times = NULL,   piecewise.covariates = NULL,   num.integ = FALSE,   discount = 0,   env = FALSE,   ci = c(\"none\", \"normal\", \"bootstrap\"),   cl = 0.95,   B = 1000,   cores = NULL,   ... )  envisits.msm(   x = NULL,   start = 1,   end = NULL,   fromt = 0,   tot = Inf,   covariates = \"mean\",   piecewise.times = NULL,   piecewise.covariates = NULL,   num.integ = FALSE,   discount = 0,   ci = c(\"none\", \"normal\", \"bootstrap\"),   cl = 0.95,   B = 1000,   cores = NULL,   ... )"},{"path":"https://chjackson.github.io/msm/reference/totlos.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total length of stay, or expected number of visits — totlos.msm","text":"x fitted multi-state model, returned msm. start Either single number giving state beginning period, vector probabilities state time. end States estimate total length stay (number visits) . Defaults states.  deprecated, since analytic solution (see \"Details\") save computation estimate subset states. fromt Time estimate.  Defaults 0, beginning process. tot Time estimate made.  Defaults infinity, giving expected time spent number visits state absorption. However, calculation much efficient finite (potentially large) time specified: see \"Details\" section.  models without absorbing state, t must specified. covariates covariate values estimate .  can either : string \"mean\", denoting means covariates data (default), number 0, indicating covariates set zero, list values, optional names. example list (60, 1) order list follows order covariates originally given model formula, named list, list (age = 60, sex = 1) piecewise.times Times piecewise-constant intensities change. See pmatrix.piecewise.msm specify . required time-inhomogeneous models specified using explicit time-dependent covariates, used models specified using \"pci\". piecewise.covariates Covariates piecewise-constant intensities depend. See pmatrix.piecewise.msm specify . num.integ Use numerical integration instead analytic solution (see ). discount Discount rate continuous time. env Supplied totlos.msm.  TRUE, return expected number visits state. FALSE, return total length stay state. envisits.msm simply calls totlos.msm env=TRUE. ci \"normal\", calculate confidence interval simulating B random vectors asymptotic multivariate normal distribution implied maximum likelihood estimates (covariance matrix) log transition intensities covariate effects, calculating total length stay replicate. \"bootstrap\" calculate confidence interval non-parametric bootstrap refitting.  1-2 orders magnitude slower \"normal\" method, expected accurate. See boot.msm details bootstrapping msm. \"none\" (default) confidence interval calculated. cl Width symmetric confidence interval, relative 1 B Number bootstrap replicates cores Number cores use bootstrapping using parallel processing. See boot.msm details. ... arguments passed integrate function control numerical integration.","code":""},{"path":"https://chjackson.github.io/msm/reference/totlos.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total length of stay, or expected number of visits — totlos.msm","text":"vector expected total lengths stay (totlos.msm), expected number visits (envisits.msm), transient state.","code":""},{"path":"https://chjackson.github.io/msm/reference/totlos.msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Total length of stay, or expected number of visits — totlos.msm","text":"expected total length stay state \\(j\\) times \\(t_1\\) \\(t_2\\), point view individual state \\(\\) time 0, defined integral \\(t_1\\) \\(t_2\\) \\(,j\\) entry transition probability matrix \\(P(t) = Exp(tQ)\\), \\(Q\\) transition intensity matrix. corresponding expected number visits state \\(j\\) (excluding stay current state time 0) \\(\\sum_{!=j} T_i Q_{,j}\\), \\(T_i\\) expected amount time spent state \\(\\). generally, suppose \\(\\pi_0\\) vector probabilities state time 0, supplied start, want vector \\(\\mathbf{x}\\) giving expected lengths stay state.  corresponding integral following solution (van Loan 1978; van Rosmalen et al. 2013) $$\\mathbf{x} = \\left[ \\begin{array}{ll} 1  &  \\mathbf{0}_K \\end{array} \\right] Exp(t Q') \\left[ \\begin{array}{l} \\mathbf{0}_K\\\\I_K \\end{array} \\right] $$ $$Q' = \\left[ \\begin{array}{ll} 0 & \\mathbf{\\pi}_0\\\\ \\mathbf{0}_K  &  Q - rI_K \\end{array} \\right] $$ \\(\\pi_0\\) row vector initial state probabilities supplied start, \\(\\mathbf{0}_K\\) row vector K zeros, \\(r\\) discount rate, \\(I_K\\) K x K identity matrix, \\(Exp\\) matrix exponential. Alternatively, integrals can calculated numerically, using integrate function.  may take long time models many states \\(P(t)\\) expensive calculate.  required tot = Inf, since package author aware analytic expression limit formula \\(t\\) goes infinity. argument num.integ=TRUE, numerical integration used even analytic solution available. facility just provided checking results versions 1.2.4 earlier, removed eventually. Please let package maintainer know results different. model individual one place go state, state visited , example progressive disease model recovery death, equal mean sojourn time state.  However, consider three-state health-disease-death model transitions health disease, health death, disease death, everybody starts healthy.  case mean sojourn time disease state greater expected length stay disease state.  mean sojourn time state conditional entering state, whereas expected total time diseased forecast healthy individual, may die getting disease. formulae, \\(Q\\) assumed constant time, results generalise easily piecewise-constant intensities.  function automatically handles models fitted using pci option msm. inhomogeneous models, user must specify piecewise.times piecewise.covariates arguments totlos.msm.","code":""},{"path":"https://chjackson.github.io/msm/reference/totlos.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Total length of stay, or expected number of visits — totlos.msm","text":"C. van Loan (1978). Computing integrals involving matrix exponential. IEEE Transactions Automatic Control 23(3)395-404. J. van Rosmalen, M. Toy J.F. O'Mahony (2013). mathematical approach evaluating Markov models continuous time without discrete-event simulation.  Medical Decision Making 33:767-779.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/totlos.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Total length of stay, or expected number of visits — totlos.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/transient.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Transient and absorbing states — transient.msm","title":"Transient and absorbing states — transient.msm","text":"Returns transient absorbing states either fitted model transition intensity matrix.","code":""},{"path":"https://chjackson.github.io/msm/reference/transient.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transient and absorbing states — transient.msm","text":"","code":"transient.msm(x = NULL, qmatrix = NULL)  absorbing.msm(x = NULL, qmatrix = NULL)"},{"path":"https://chjackson.github.io/msm/reference/transient.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transient and absorbing states — transient.msm","text":"x fitted multi-state model returned msm. qmatrix transition intensity matrix. diagonal ignored taken minus sum rest row.","code":""},{"path":"https://chjackson.github.io/msm/reference/transient.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transient and absorbing states — transient.msm","text":"vector ordinal indices transient absorbing states.","code":""},{"path":"https://chjackson.github.io/msm/reference/transient.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transient and absorbing states — transient.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/twophase.html","id":null,"dir":"Reference","previous_headings":"","what":"Coxian phase-type distribution with two phases — twophase","title":"Coxian phase-type distribution with two phases — twophase","text":"Density, distribution, quantile functions utilities Coxian phase-type distribution two phases.","code":""},{"path":"https://chjackson.github.io/msm/reference/twophase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coxian phase-type distribution with two phases — twophase","text":"","code":"d2phase(x, l1, mu1, mu2, log = FALSE)  p2phase(q, l1, mu1, mu2, lower.tail = TRUE, log.p = FALSE)  q2phase(p, l1, mu1, mu2, lower.tail = TRUE, log.p = FALSE)  r2phase(n, l1, mu1, mu2)  h2phase(x, l1, mu1, mu2, log = FALSE)"},{"path":"https://chjackson.github.io/msm/reference/twophase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coxian phase-type distribution with two phases — twophase","text":"x, q vector quantiles. l1 Intensity transition phase 1 phase 2. mu1 Intensity transition phase 1 exit. mu2 Intensity transition phase 2 exit. log logical; TRUE, return log density log hazard. lower.tail logical; TRUE (default), probabilities P[X <= x], otherwise, P[X > x]. log.p logical; TRUE, probabilities p given log(p). p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://chjackson.github.io/msm/reference/twophase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coxian phase-type distribution with two phases — twophase","text":"d2phase gives density, p2phase gives distribution function, q2phase gives quantile function, r2phase generates random deviates, h2phase gives hazard.","code":""},{"path":"https://chjackson.github.io/msm/reference/twophase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coxian phase-type distribution with two phases — twophase","text":"distribution time reach state 3 continuous-time Markov model three states transitions permitted state 1 state 2 (intensity \\(\\lambda_1\\)) state 1 state 3 (intensity \\(\\mu_1\\)) state 2 state 3 (intensity \\(\\mu_2\\)).  States 1 2 two \"phases\" state 3 \"exit\" state. density $$f(t | \\lambda_1, \\mu_1) = e^{-(\\lambda_1+\\mu_1)t}(\\mu_1 + (\\lambda_1+\\mu_1)\\lambda_1 t)$$ \\(\\lambda_1 + \\mu_1 = \\mu_2\\), $$f(t | \\lambda_1, \\mu_1, \\mu_2) = \\frac{(\\lambda_1+\\mu_1)e^{-(\\lambda_1+\\mu_1)t}(\\mu_2-\\mu_1) + \\mu_2\\lambda_1e^{-\\mu_2t}}{\\lambda_1+\\mu_1-\\mu_2}$$ otherwise.  distribution function $$F(t | \\lambda_1, \\mu_1) = 1 - e^{-(\\lambda_1+\\mu_1) t} (1 + \\lambda_1 t)$$ \\(\\lambda_1 + \\mu_1 = \\mu_2\\), $$F(t | \\lambda_1, \\mu_1, \\mu_2) = 1  -  \\frac{e^{-(\\lambda_1 + \\mu_1)t} (\\mu_2 - \\mu_1)  +  \\lambda_1 e^{-\\mu_2 t}}{ \\lambda_1 + \\mu_1 - \\mu_2}$$ otherwise.  Quantiles calculated numerically inverting distribution function. mean \\((1 + \\lambda_1/\\mu_2) / (\\lambda_1 + \\mu_1)\\). variance \\((2 + 2\\lambda_1(\\lambda_1+\\mu_1+ \\mu_2)/\\mu_2^2 - (1 + \\lambda_1/\\mu_2)^2)/(\\lambda_1+\\mu_1)^2\\). \\(\\mu_1=\\mu_2\\) reduces exponential distribution rate \\(\\mu_1\\), parameter \\(\\lambda_1\\) redundant. also \\(\\lambda_1=0\\). hazard \\(x=0\\) \\(\\mu_1\\), smoothly increasing \\(\\mu_1<\\mu_2\\).  \\(\\lambda_1 + \\mu_1 \\geq \\mu_2\\) increases asymptote \\(\\mu_2\\), \\(\\lambda_1 + \\mu_1 \\leq \\mu_2\\) increases asymptote \\(\\lambda_1 + \\mu_1\\).  hazard decreasing \\(\\mu_1>\\mu_2\\), asymptote \\(\\mu_2\\).","code":""},{"path":"https://chjackson.github.io/msm/reference/twophase.html","id":"alternative-parameterisation","dir":"Reference","previous_headings":"","what":"Alternative parameterisation","title":"Coxian phase-type distribution with two phases — twophase","text":"individual following distribution can seen coming mixture two populations: 1) \"short stayers\" whose mean sojourn time \\(M_1 = \\)\\( 1/(\\lambda_1+\\mu_1)\\) sojourn distribution exponential rate \\(\\lambda_1 + \\mu_1\\). 2) \"long stayers\" whose mean sojourn time \\(M_2 = \\)\\( 1/(\\lambda_1+\\mu_1) + 1/\\mu_2\\) sojourn distribution sum two exponentials rate \\(\\lambda_1 + \\)\\( \\mu_1\\) \\(\\mu_2\\) respectively.  individual \"long stayer\" probability \\(p=\\lambda_1/(\\lambda_1 + \\mu_1)\\). Thus two-phase distribution can intuitively parameterised short long stay means \\(M_1 < M_2\\) long stay probability \\(p\\).  Given parameters, transition intensities \\(\\lambda_1=p/M_1\\), \\(\\mu_1=(1-p)/M_1\\), \\(\\mu_2=1/(M_2-M_1)\\).  can useful choosing intuitively reasonable initial values procedures fit models data. hazard increasing least \\(M_2 < 2M_1\\), also \\((M_2 - 2M_1)/(M_2 - M_1) < p\\). increasing hazards \\(\\lambda_1 + \\mu_1 \\leq \\mu_2\\), maximum hazard ratio time \\(t\\) time 0 \\(1/(1-p)\\). increasing hazards \\(\\lambda_1 + \\mu_1 \\geq \\mu_2\\), maximum hazard ratio \\(M_1/((1-p)(M_2 - M_1))\\)\\( M_1))\\). minimum hazard ratio decreasing hazards.","code":""},{"path":"https://chjackson.github.io/msm/reference/twophase.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coxian phase-type distribution with two phases — twophase","text":"C. Dutang, V. Goulet M. Pigeon (2008). actuar: R Package Actuarial Science. Journal Statistical Software, vol. 25, . 7, 1-37. URL http://www.jstatsoft.org/v25/i07","code":""},{"path":"https://chjackson.github.io/msm/reference/twophase.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coxian phase-type distribution with two phases — twophase","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/updatepars.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the maximum likelihood estimates in a fitted model object. — updatepars.msm","title":"Update the maximum likelihood estimates in a fitted model object. — updatepars.msm","text":"Update maximum likelihood estimates fitted model object.  Intended developer use .","code":""},{"path":"https://chjackson.github.io/msm/reference/updatepars.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the maximum likelihood estimates in a fitted model object. — updatepars.msm","text":"","code":"updatepars.msm(x, pars)"},{"path":"https://chjackson.github.io/msm/reference/updatepars.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the maximum likelihood estimates in a fitted model object. — updatepars.msm","text":"x fitted multi-state model object, returned msm. pars Vector new parameters, untransformed real-line parameterisations, substitute maximum likelihood estimates corresponding estimates component fitted model object (msm.object).  order parameters documented msm, argument fixedpars.","code":""},{"path":"https://chjackson.github.io/msm/reference/updatepars.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the maximum likelihood estimates in a fitted model object. — updatepars.msm","text":"updated msm model object updated maximum likelihood estimates, covariances / standard errors unchanged. Point estimates output functions qmatrix.msm, pmatrix.msm, related function, can evaluated new parameters, arbitrary covariate values. function used, example, computing confidence intervals pmatrix.msm, related functions, using ci=\"normal\" method.","code":""},{"path":"https://chjackson.github.io/msm/reference/updatepars.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update the maximum likelihood estimates in a fitted model object. — updatepars.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/reference/viterbi.msm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the probabilities of underlying states and the most likely path through them — viterbi.msm","title":"Calculate the probabilities of underlying states and the most likely path through them — viterbi.msm","text":"fitted hidden Markov model, model censored state observations, Viterbi algorithm recursively constructs path highest probability underlying states.  probability hidden state also computed hidden Markov models, using forward-backward algorithm.","code":""},{"path":"https://chjackson.github.io/msm/reference/viterbi.msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the probabilities of underlying states and the most likely path through them — viterbi.msm","text":"","code":"viterbi.msm(x, normboot = FALSE, newdata = NULL)"},{"path":"https://chjackson.github.io/msm/reference/viterbi.msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the probabilities of underlying states and the most likely path through them — viterbi.msm","text":"x fitted hidden Markov multi-state model, model censored state observations, produced msm normboot TRUE, running algorithm, maximum likelihood estimates model parameters replaced alternative set parameters drawn randomly asymptotic multivariate normal distribution MLEs. newdata optional data frame containing observations construct Viterbi path forward-backward probabilities. must format data frame used fit x.  NULL, data frame used fit x used.","code":""},{"path":"https://chjackson.github.io/msm/reference/viterbi.msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the probabilities of underlying states and the most likely path through them — viterbi.msm","text":"data frame columns: subject = subject identification numbers time = times observations observed = corresponding observed states fitted = corresponding fitted states found Viterbi recursion. model hidden Markov model, censored state observations, just observed states. hidden Markov models, additional matrix pstate also returned inside data frame, giving probability hidden state point, conditionally data.  computed forward/backward algorithm.","code":""},{"path":"https://chjackson.github.io/msm/reference/viterbi.msm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the probabilities of underlying states and the most likely path through them — viterbi.msm","text":"Durbin, R., Eddy, S., Krogh, . Mitchison, G. Biological sequence analysis, Cambridge University Press, 1998.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msm/reference/viterbi.msm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the probabilities of underlying states and the most likely path through them — viterbi.msm","text":"C. H. Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/msm/news/index.html","id":"version-181-2024-10-04","dir":"Changelog","previous_headings":"","what":"Version 1.8.1 (2024-10-04)","title":"Version 1.8.1 (2024-10-04)","text":"Fix memory error crashed reverse dependency checks (#106).","code":""},{"path":"https://chjackson.github.io/msm/news/index.html","id":"version-18-2024-09-06","dir":"Changelog","previous_headings":"","what":"Version 1.8 (2024-09-06)","title":"Version 1.8 (2024-09-06)","text":"CRAN release: 2024-09-08 Subject-level weights supported likelihood calculation new msm() argument subject.weights. Tidying methods added msm objects msm’s output functions (prevalence.msm, qmatrix.msm related functions, totlos.msm related functions). methods convert output tidy data frame (tibble), manner broom package. use methods, just call tidy(x), x result calling, e.g. msm, prevalence.msm, qmatrix.msm. Hence msm package now imports generics tibble packages. Subjects one observation longer dropped HMMs, since provide information distribution outcome given hidden state. ppass.msm now supports pci models time-inhomogeneous models. Thanks Jon Fintzi working . New function hmodel2list extract HMM constructor function calls fitted HMMs. Thanks Hulme working . Objects returned totlos.msm, efpt.msm envisits.msm now class \"msm.estbystate\". Objects returned prevalence.msm now class \"msm.prevalence\". Fix bugs models containing covariate named \"baseline\" \"Baseline\".","code":""},{"path":"https://chjackson.github.io/msm/news/index.html","id":"version-171-2023-11-23","dir":"Changelog","previous_headings":"","what":"Version 1.7.1 (2023-11-23)","title":"Version 1.7.1 (2023-11-23)","text":"CRAN release: 2023-11-23 Fix bug Viterbi algorithm calculation fitted state initial time subject. Bug fix pmatrix.piecewise.msm given just intensity matrices instead fitted model. Auto-generated initial values set small positive number rather zero observed data particular permitted transition. fixes consistency checks (e.g. qconstraint) situation. Fix covariates come data one-column matrices instead vectors. Modernised use roxygen, pkgdown website created https://chjackson.github.io/msm internal functions (e.g. deriv.msm) clash base S3 generics renamed","code":""},{"path":"https://chjackson.github.io/msm/news/index.html","id":"version-17-2022-11-27","dir":"Changelog","previous_headings":"","what":"Version 1.7 (2022-11-27)","title":"Version 1.7 (2022-11-27)","text":"CRAN release: 2022-11-28 rpexp now efficient. Thanks Mark Clements. Note values simulated rpexp, sim.msm simmulti.msm specific seed now different models intensities piecewise constant. Bug fix: HMMs partially known initial states specified obstrue censor, initprobs now accounted . Bug fix bootstrapping character subject IDs. crudeinits.msm handled state factor. Fix hranges multiple parameters. obstrue handled forward-backward algorithm (viterbi.msm).","code":""},{"path":"https://chjackson.github.io/msm/news/index.html","id":"version-169","dir":"Changelog","previous_headings":"","what":"Version 1.6.9","title":"Version 1.6.9","text":"CRAN release: 2021-09-27 … earlier versions: see inst/NEWS source changes.","code":""}]
